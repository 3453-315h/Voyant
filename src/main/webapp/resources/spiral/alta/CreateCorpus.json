{
    "metadata": {
        "created": 1490646904494,
        "modified": 1490647146926,
        "version": 2
    },
    "blocks": [
        {
            "type": "text",
            "input": [
                "<h1 style=\"text-align: center;\">Creating a Corpus in a Spiral Notebook</h1>\n\n<p>",
                "This notebook will help you create a corpus with Spiral Notebooks (it's part of ",
                "the <a data-tabindex-counter=\"21\" data-tabindex-value=\"none\" href=\"./\" tabindex=",
                "\"-1\">Art of Literary Text Analysis with Spiral&nbsp;Notebooks</a>). In particula",
                "r, we'll look at:</p>\n\n<ul>\n\t<li><a data-tabindex-counter=\"7\" data-tabindex-valu",
                "e=\"none\" href=\"#voyant\" tabindex=\"-1\">creating a corpus in Voyant</a></li>\n\t<li>",
                "<a data-tabindex-counter=\"13\" data-tabindex-value=\"none\" href=\"#strings\" tabinde",
                "x=\"-1\">creating a corpus from strings</a></li>\n\t<li><a data-tabindex-counter=\"13",
                "\" data-tabindex-value=\"none\" href=\"#urls\" tabindex=\"-1\">creating a corpus from o",
                "ne or more URLs</a></li>\n\t<li><a data-tabindex-counter=\"21\" data-tabindex-value=",
                "\"none\" href=\"#next\" tabindex=\"-1\">next steps</a></li>\n</ul>\n\n<p>In text analysis",
                " (both with and without computers) a <em>corpus</em> refers to a collection (or ",
                "body) of texts. A corpus can be a single poem, a set of plays, all English novel",
                "s from the nineteenth century, or even a large collection of tweets. How you def",
                "ine documents within a corpus might change depending on your needs. For instance",
                ", it might be worth grouping all documents from a decade into one single documen",
                "t and have ten documents for a corpus that spans across a century.</p>\n\n<p>We wi",
                "ll consider three ways of creating a corpus in Spiral, using <a href=\"#voyant\" d",
                "ata-tabindex-value=\"none\" tabindex=\"-1\" data-tabindex-counter=\"2\">Voyant</a>,&nb",
                "sp;<a data-tabindex-counter=\"13\" data-tabindex-value=\"none\" href=\"#strings\" tabi",
                "ndex=\"-1\">strings</a>, and&nbsp;<a data-tabindex-counter=\"13\" data-tabindex-valu",
                "e=\"none\" href=\"#urls\" tabindex=\"-1\">URLs</a>. Of these, using URLs is often pref",
                "erable since it's the most reliable way for others to access the same data (assu",
                "ming the contents of the URL don't move). But that's not always possible, and so",
                "metimes uploading files is necessary. As we will see, it may also be possible to",
                " use a data service like <a data-tabindex-counter=\"13\" data-tabindex-value=\"none",
                "\" href=\"https://gist.github.com/\" tabindex=\"-1\">Gist</a> or <a data-tabindex-cou",
                "nter=\"13\" data-tabindex-value=\"none\" href=\"https://pastebin.com/\" tabindex=\"-1\">",
                "Pastebin</a> to host certain formats of text at a URL.</p>\n\n<h2><a id=\"voyant\" n",
                "ame=\"voyant\"></a>Creating a Corpus in Voyant</h2>\n\n<p>Most of the techniques bel",
                "ow describe ways of using Spiral to create a corpus programmatically, in other w",
                "ords with a bit of code. But of course it’s also possible to create a corpus usi",
                "ng the usual Voyant interface and then to refer to that corpus in a Spiral Noteb",
                "ook (more about that below). Creating a corpus programmatically provides more fl",
                "exibility (including options that may not be available in the user interface) an",
                "d it also ensures that your Spiral Notebook is fully self-contained (which makes",
                " it more portable, it can run on different instances more easily). Then again, u",
                "sing the Voyant interface can be simpler&nbsp;and more familiar.</p>\n\n<p>You mig",
                "ht experiment first with the Voyant interface technique for creating a corpus an",
                "d then rewrite parts of your Spiral notebook to use URLs instead if you're looki",
                "ng to share your notebook with others. If you use Voyant to create your corpus, ",
                "you can still describe the process in detail in your Spiral Notebook so that oth",
                "ers may try to reproduce or adapt your work using the same options.</p>\n\n<p>When",
                " you first open the <a data-tabindex-counter=\"7\" data-tabindex-value=\"none\" href",
                "=\"../../\" tabindex=\"-1\">home page of Voyant</a> (be sure to be on the same serve",
                "r as your instance of Spiral) you can begin by clicking on the options icon.</p>",
                "\n\n<p style=\"text-align: center\"><img alt=\"\" src=\"../../resources/spiral//alta/vo",
                "yant_input_options.png\" style=\"max-width:800px;\"></p>\n\n<p>There’s a fairly dizzy",
                "ing number of options available (all of which are also available when you create",
                " your corpus programmatically) and you’re strongly encouraged to refer to the Vo",
                "yant documentation on <a data-tabindex-counter=\"5\" data-tabindex-value=\"none\" hr",
                "ef=\"../../docs/#!/guide/corpuscreator\" tabindex=\"-1\">creating a corpus</a>.</p>\n",
                "\n<p style=\"text-align: center\"><img alt=\"\" src=\"../../resources/spiral/alta/voya",
                "nt_input_options_dialog.png\" style=\"max-width:400px;\"></p>\n\n<p>Once you’ve defin",
                "ed the input options you can create the corpus by either filling content in the ",
                "text box (text or one URLs, one per line) or by clicking the upload button.</p>\n",
                "\n<p style=\"text-align: center\"><img alt=\"Inputting Text or File Upload\" src=\"../",
                "../resources/spiral/alta/voyant_input.png\" style=\"max-width:800px;\"></p>\n\n<p>Onc",
                "e your corpus is loaded (assuming everything worked properly) you’ll see the reg",
                "ular Voyant interface, but we’re actually interested in the URL bar where part o",
                "f the address should now contain a valid corpus ID that we can use in Spiral on ",
                "the same server.</p>\n\n<p style=\"text-align: center\"><img alt=\"Selecting Corpus I",
                "D\" src=\"../../resources/spiral/alta/voyant_corpus_id.png\" style=\"max-width:600px",
                ";\"></p>\n\n<p>Copy the corpus ID (only) into the clipboard (it will be different f",
                "rom the one in the screenshot above but it should have a similar format). Now we",
                " can use that ID in Spiral, try pasting the ID in place below, replacing “<em>au",
                "sten</em>” (but be sure to leave the quotes in place).</p>\n"
            ]
        },
        {
            "type": "code",
            "input": "new Corpus(\"austen\").show();",
            "output": [
                " <div class=\"info\">This corpus has 8 documents with 781,763 <span class=\"info-ti",
                "p\" data-qtip=\"every occurrence of every word (like multiple occurrences of &quot",
                ";the&quot;) is counted\">total words</span> and 15,368 <span class=\"info-tip\" dat",
                "a-qtip=\"multiple occurrences of words (like &quot;the&quot;) are counted once\">u",
                "nique word forms</span>. Created <span class=\"info-tip\" data-qtip=\"2017-02-25, 2",
                "2:42:04\">about a month ago</span>.</div>"
            ]
        },
        {
            "type": "text",
            "input": [
                "<h2><a id=\"strings\" name=\"strings\"></a>Creating a Corpus from Strings</h2>\n\n<p>A",
                "bove we looked at using the regular Voyant interface to create a corpus, but we ",
                "can also create a corpus directly and programmatically in Spiral. One very simpl",
                "e way to create a corpus in Spiral is with a set of one or more strings. This is",
                "n't especially practical for longer texts, and there are certain limitations sin",
                "ce the strings need to be defined using either single or double quotes, usually ",
                "on a single line.</p>\n\n<p>Here's an example where the string \"Hello Spiral!\" is ",
                "used directly to create a corpus:</p>\n"
            ]
        },
        {
            "type": "code",
            "input": "new Corpus(\"Hello Spiral!\").show();",
            "output": [
                " <div class=\"info\">This corpus has 1 document with 2 <span class=\"info-tip\" data",
                "-qtip=\"every occurrence of every word (like multiple occurrences of &quot;the&qu",
                "ot;) is counted\">total words</span> and 2 <span class=\"info-tip\" data-qtip=\"mult",
                "iple occurrences of words (like &quot;the&quot;) are counted once\">unique word f",
                "orms</span>. Created <span class=\"info-tip\" data-qtip=\"2016-05-07, 15:51:18\">abo",
                "ut 26 days ago</span>.</div>"
            ]
        },
        {
            "type": "text",
            "input": [
                "<p>In Javascript (used by Spiral), a string can be define in several ways, but t",
                "he most common ways are with single or double quotes. In the example&nbsp;below,",
                " we assign the string to a variable name – this is a name that we choose (with c",
                "ertain rules) and that we want to make both short and meaningful. We also use th",
                "e keyword <em><code>var</code></em> which isn't strictly needed, but it's good p",
                "rogramming practice and it declares the <a data-tabindex-counter=\"13\" data-tabin",
                "dex-value=\"none\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Refe",
                "rence/Statements/var\" tabindex=\"-1\">scope</a> (where our variable is recognized)",
                ".</p>\n\n<p>This is functionally equivalent to the previous code (note the use of ",
                "the backslashes (//) that indicates a comment in the code that's ignored by the ",
                "computer).</p>\n"
            ]
        },
        {
            "type": "code",
            "input": [
                "var greeting = \"Hello Spiral!\"; // declare a string into a variable",
                "new Corpus(greeting).show(); // create a corpus with our variable"
            ],
            "output": [
                " <div class=\"info\">This corpus has 1 document with 2 <span class=\"info-tip\" data",
                "-qtip=\"every occurrence of every word (like multiple occurrences of &quot;the&qu",
                "ot;) is counted\">total words</span> and 2 <span class=\"info-tip\" data-qtip=\"mult",
                "iple occurrences of words (like &quot;the&quot;) are counted once\">unique word f",
                "orms</span>. Created now.</div>"
            ]
        },
        {
            "type": "text",
            "input": [
                "<p>We can also create a corpus with two or more strings by using an array argume",
                "nt. An array is an ordered list of variables, in this case we have strings. Just",
                " as with strings, there are multiple ways of creating an array, but one of the m",
                "ost common ways is by using square brackets.</p>\n"
            ]
        },
        {
            "type": "code",
            "input": [
                "var greeting = \"Hello Spiral!\"; // declare a first string",
                "var reply = \"Well hello there!\"; // declare a second string",
                "var texts = [greeting, reply]; // combine the two strings into an array",
                "new Corpus(texts).show(); // same as new Corpus([greeting, reply]).show();",
                ""
            ],
            "output": [
                " <div class=\"info\">This corpus has 2 documents with 5 <span class=\"info-tip\" dat",
                "a-qtip=\"every occurrence of every word (like multiple occurrences of &quot;the&q",
                "uot;) is counted\">total words</span> and 4 <span class=\"info-tip\" data-qtip=\"mul",
                "tiple occurrences of words (like &quot;the&quot;) are counted once\">unique word ",
                "forms</span>. Created now.</div>"
            ]
        },
        {
            "type": "text",
            "input": [
                "<p>Again, it's fairly impractical to work with strings of any length in Javascri",
                "pt. There are some techniques for multiline strings, but it's safest to combine ",
                "strings together with the plus sign (concatenation). In the example below we als",
                "o demonstrate escaping the double quote that's part of the string (but that's al",
                "so used to define the start and end of the string.</p>\n"
            ]
        },
        {
            "type": "code",
            "input": [
                "var greeting = \"And then she asked \\\"What do \"+ // add two string with plus sign",
                "    \" you mean?\\\" in that voice.\"; // note the use of \\\" to escape the double quote",
                "show(greeting)"
            ],
            "output": " <div class=\"info\">And then she asked \"What do  you mean?\" in that voice.</div>"
        },
        {
            "type": "text",
            "input": [
                "<p>One situation where creating a corpus from a string can be useful is when we ",
                "want to process a text and then feed it back in as a new corpus. The code snippe",
                "t below demonstrates a few techniques that we won't explain in detail yet, but i",
                "t's just a demonstration of what's possible:</p>\n"
            ]
        },
        {
            "type": "code",
            "input": [
                "// create a corpus with a URL (hermeneuti.ca) and get the plain text",
                "new Corpus(\"http://hermeneuti.ca\").getPlainText().then(function(text) {",
                "    // modify the plain text to replace \"the\" by \"*THE*\"",
                "    text = text.replace(/\\bthe\\b/g, \"*THE*\");",
                "    // create a new corpus (with a string) and embed the reader tool",
                "    new Corpus(text).embed('reader');",
                "})"
            ],
            "output": [
                " <div class=\"info\"><iframe style=\"width: 90%; height: 400px\" src=\"/voyant/tool/R",
                "eader/?minimal=true&amp;corpus=6482853c23e49fc7eea75578b98b316e&amp;debug=true\" ",
                "data-tabindex-value=\"none\" tabindex=\"-1\" data-tabindex-counter=\"8\"></iframe></di",
                "v>"
            ]
        },
        {
            "type": "text",
            "input": [
                "<h2><a id=\"urls\" name=\"urls\"></a>Creating a Corpus from URLs</h2>\n\n<p>The prefer",
                "red way of creating a corpus in Spiral is to use URLs. The benefits are that the",
                " source texts&nbsp;can be accessed by other people and the corpus can be more ea",
                "sily re-created if ever it's lost or damaged. The disadvantages are that the con",
                "tent of URLs can change or disappear. We've already seen examples several times,",
                " and we can use both the single URL or array of URLs format (just as we did with",
                " strings).</p>\n"
            ]
        },
        {
            "type": "code",
            "input": [
                "// one URL as a single string argument",
                "new Corpus(\"http://hermeneuti.ca\").show(); ",
                "",
                "// an array of URLs as an argument",
                "new Corpus([\"http://hermeneuti.ca\", \"https://en.wikipedia.org/wiki/Voyant_Tools\"]).show();",
                "",
                "// a variable to contain URLs that are then used as a single argument",
                "var urls = [\"http://hermeneuti.ca\", \"https://en.wikipedia.org/wiki/Voyant_Tools\"];",
                "new Corpus(urls).show(); // "
            ],
            "output": [
                " <div class=\"info\">This corpus has 1 document with 259 <span class=\"info-tip\" da",
                "ta-qtip=\"every occurrence of every word (like multiple occurrences of &quot;the&",
                "quot;) is counted\">total words</span> and 148 <span class=\"info-tip\" data-qtip=\"",
                "multiple occurrences of words (like &quot;the&quot;) are counted once\">unique wo",
                "rd forms</span>. Created <span class=\"info-tip\" data-qtip=\"2017-03-27, 15:19:48\"",
                ">about 6 days ago</span>.</div><div class=\"info\">This corpus has 2 documents wit",
                "h 1,084 <span class=\"info-tip\" data-qtip=\"every occurrence of every word (like m",
                "ultiple occurrences of &quot;the&quot;) is counted\">total words</span> and 540 <",
                "span class=\"info-tip\" data-qtip=\"multiple occurrences of words (like &quot;the&q",
                "uot;) are counted once\">unique word forms</span>. Created <span class=\"info-tip\"",
                " data-qtip=\"2017-04-03, 10:47:18\">33 seconds ago</span>.</div><div class=\"info\">",
                "This corpus has 2 documents with 1,084 <span class=\"info-tip\" data-qtip=\"every o",
                "ccurrence of every word (like multiple occurrences of &quot;the&quot;) is counte",
                "d\">total words</span> and 540 <span class=\"info-tip\" data-qtip=\"multiple occurre",
                "nces of words (like &quot;the&quot;) are counted once\">unique word forms</span>.",
                " Created <span class=\"info-tip\" data-qtip=\"2017-04-03, 10:47:18\">33 seconds ago<",
                "/span>.</div>"
            ]
        },
        {
            "type": "text",
            "input": "<p>(Click here to edit.)</p>\n"
        }
    ]
}