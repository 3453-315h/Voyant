{"version":3,"file":"spyral.js","sources":["../../../../../../../voyantjs/src/load.js","../../../../../../../voyantjs/src/corpus.js","../../../../../../../voyantjs/src/chart.js","../../../../../../../voyantjs/src/table.js","../../../../../../../voyantjs/src/categories.js","../node_modules/regenerator-runtime/runtime.js","../src/notebook.js","../src/util.js","../src/metadata.js","../src/index.js"],"sourcesContent":["/**\n * Class embodying Load functionality.\n * @memberof Spyral\n * @class\n */\nclass Load {\n\tstatic baseUrl;\n\n\t/**\n\t * Set the base URL for use with the Load class\n\t * @param {string} baseUrl \n\t */\n\tstatic setBaseUrl(baseUrl) {\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\t/**\n\t * Make a call to trombone\n\t * @param {object} config \n\t * @param {object} params\n\t * @returns {JSON}\n\t */\n\tstatic trombone(config = {}, params) {\n\t\tlet url = new URL(config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\tlet all = { ...config, ...params };\n\t\tfor (var key in all) {\n\t\t\tif (all[key] === undefined) { delete all[key] }\n\t\t}\n\t\tlet searchParams = Object.keys(all).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(all[key])).join(\"&\")\n\t\tlet opt = {};\n\t\tif (searchParams.length < 800 || (\"method\" in all && all[\"method\"] == \"GET\")) {\n\t\t\tfor (var key in all) { url.searchParams.set(key, all[key]); }\n\t\t} else {\n\t\t\topt = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n\t\t\t\tbody: searchParams\n\t\t\t}\n\t\t}\n\t\treturn fetch(url.toString(), opt).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json()\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\tmsg: \"\",\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Fetch content from a URL, often resolving cross-domain data constraints\n\t * @param {string} urlToFetch \n\t * @param {object} config\n\t * @returns {Response}\n\t */\n\tstatic load(urlToFetch, config) {\n\t\tlet url = new URL(config && config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\turl.searchParams.set(\"fetchData\", urlToFetch);\n\t\treturn fetch(url.toString()).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(err => { throw err })\n\t}\n\n\t/**\n\t * Fetch HTML content from a URL\n\t * @param {string} url \n\t * @returns {Document}\n\t */\n\tstatic html(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/html'));\n\t}\n\n\t/**\n\t * Fetch XML content from a URL\n\t * @param {string} url \n\t * @returns {XMLDocument}\n\t */\n\tstatic xml(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/xml'));\n\t}\n\n\t/**\n\t * Fetch JSON content from a URL\n\t * @param {string} url \n\t * @returns {JSON}\n\t */\n\tstatic json(url) {\n\t\treturn this.load(url).then(response => response.json());\n\t}\n\n\t/**\n\t * Fetch text content from a URL\n\t * @param {string} url \n\t * @returns {string}\n\t */\n\tstatic text(url) {\n\t\treturn this.load(url).then(response => response.text());\n\t}\n}\n\nexport default Load\n","import Load from './load';\n\n// this is essentially a private method to determine if we're in corpus or documents mode.\n// if docIndex or docId is defined, or if mode==\"documents\" then we're in documents mode\nfunction isDocumentsMode(config={}) {\n\treturn \"docIndex\" in config || \"docId\" in config || (\"mode\" in config && config.mode==\"documents\");\n}\n\n/**\n * The Corpus class in Spyral. Here's a simple example:\n * \n * \tloadCorpus(\"Hello World!\").summary();\n * \n * This loads a corpus and returns an asynchronous `Promise`, but all of the methods\n * of Corpus are appended to the Promise, so {@link #summary} will be called\n * once the Corpus promise is fulfilled. It's equivalent to the following:\n *\n * \tloadCorpus(\"Hello World!\").then(corpus -> corpus.summary());\n *\n * The `loadCorpus` method is actually an alias, so the full form of this would actually be something like this:\n * \n * \tSpyral.Corpus.load(\"Hello World\").then(corpus -> corpus.summary());\n * \n * But we like our short-cuts, so the first form is the preferred form.\n * \n * Have a look at the {@link #input} configuration for more examples.\n * \n * There is a lot of flexibility in how corpora are created, here's a summary of the parameters:\n * \n * - **sources**: {@link #corpus}, {@link #input}\n * - **formats**:\n * \t- **Text**: {@link #inputRemoveFrom}, {@link #inputRemoveFromAfter}, {@link #inputRemoveUntil}, {@link #inputRemoveUntilAfter}\n * \t- **XML**: {@link #xmlAuthorXpath}, {@link #xmlCollectionXpath}, {@link #xmlContentXpath}, {@link #xmlExtraMetadataXpath}, {@link #xmlKeywordXpath}, {@link #xmlPubPlaceXpath}, {@link #xmlPublisherXpath}, {@link #xmlTitleXpath}\n * \t- **Tables**: {@link #tableAuthor}, {@link #tableContent}, {@link #tableDocuments}, {@link #tableNoHeadersRow}, {@link #tableTitle}\n * - **other**: {@link #inputFormat}, {@link #subTitle}, {@link #title}, {@link #tokenization}\n\n * @memberof Spyral\n * @class\n */\nclass Corpus {\n\t\n/**\n * @cfg {String} corpus The ID of a previously created corpus.\n * \n * A corpus ID can be used to try to retrieve a corpus that has been previously created.\n * Typically the corpus ID is used as a first string argument, with an optional second\n * argument for other parameters (especially those to recreate the corpus if needed).\n * \n * \t\tloadCorpus(\"goldbug\");\n * \n * \t\tloadCorpus(\"goldbug\", {\n *\t\t\t// if corpus ID \"goldbug\" isn't found, use the input\n * \t\t\tinput: \"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\",\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n */\n\n/**\n * @cfg {String/String[]} input Input sources for the corpus.\n * \n * The input sources can be either normal text or URLs (starting with `http`).\n * \n * Typically input sources are specified as a string or an array in the first argument, with an optional second argument for other parameters.\n * \n * \t\tloadCorpus(\"Hello Voyant!\"); // one document with this string\n * \n * \t\tloadCorpus([\"Hello Voyant!\", \"How are you?\"]); // two documents with these strings\n * \n * \t\tloadCorpus(\"http://hermeneuti.ca/\"); // one document from URL\n * \n * \t\tloadCorpus([\"http://hermeneuti.ca/\", \"https://en.wikipedia.org/wiki/Voyant_Tools\"]); // two documents from URLs\n * \n * \t\tloadCorpus(\"Hello Voyant!\", \"http://hermeneuti.ca/\"]); // two documents, one from string and one from URL\n * \n * \t\tloadCorpus(\"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\", {\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n * \n * \t\t// use a corpus ID but also specify an input source if the corpus can't be found\n * \t\tloadCorpus(\"goldbug\", {\n * \t\t\tinput: \"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\",\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n */\n\n/**\n * @cfg {String} inputFormat The input format of the corpus (the default is to auto-detect).\n * \n * The auto-detect format is usually reliable and inputFormat should only be used if the default\n * behaviour isn't desired. Most of the relevant values are used for XML documents:\n * \n * - **DTOC**: Dynamic Table of Contexts XML format\n * - **HTML**: Hypertext Markup Language\n * - **RSS**: Really Simple Syndication XML format\n * - **TEI**: Text Encoding Initiative XML format\n * - **TEICORPUS**: Text Encoding Initiative Corpus XML format\n * - **TEXT**: plain text\n * - **XML**: treat the document as XML (sometimes overridding auto-detect of XML vocabularies like RSS and TEI)\n * \n * Other formats include **PDF**, **MSWORD**, **XLSX**, **RTF**, **ODT**, and **ZIP** (but again, these rarely need to be specified).\n */\n\n/**\n * @cfg {String} tableDocuments Determine what is a document in a table (the entire table, by row, by column); only used for table-based documents.\n * \n * Possible values are:\n * \n * - **undefined or blank** (default): the entire table is one document\n * - **rows**: each row of the table is a separate document\n * - **columns**: each column of the table is a separate document\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableContent Determine how to extract body content from the table; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableAuthor Determine how to extract the author from each document; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableTitle Determine how to extract the title from each document; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableContent Determine how to extract body content from the table; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableNoHeadersRow Determine if the table has a first row of headers; only used for table-based documents.\n * \n * Provide a value of \"true\" if there is no header row, otherwise leave it blank or undefined (default).\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tokenization The tokenization strategy to use\n * \n * This should usually be undefined, unless specific behaviour is required. These are the valid values:\n * \n * - **undefined or blank**: use the default tokenization (which uses Unicode rules for word segmentation)\n * - **wordBoundaries**: use any Unicode character word boundaries for tokenization\n * - **whitespace**: tokenize by whitespace only (punctuation and other characters will be kept with words)\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tokenization).\n */\n\n/**\n * @cfg {String} xmlContentXpath The XPath expression that defines the location of document content (the body); only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><head>Hello world!</head><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlContentXpath: \"//body\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlTitleXpath The XPath expression that defines the location of each document's title; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><title>Hello world!</title><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlTitleXpath: \"//title\"\n * \t\t}); // title would be: \"Hello world!\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlAuthorXpath The XPath expression that defines the location of each document's author; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><author>Stéfan Sinclair</author><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlAuthorXpath: \"//author\"\n * \t\t}); // author would be: \"Stéfan Sinclair\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlPubPlaceXpath The XPath expression that defines the location of each document's publication place; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><pubPlace>Montreal</pubPlace><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlPubPlaceXpath: \"//pubPlace\"\n * \t\t}); // publication place would be: \"Montreal\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlPublisherXpath The XPath expression that defines the location of each document's publisher; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><publisher>The Owl</publisher><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlPublisherXpath: \"//publisher\"\n * \t\t}); // publisher would be: \"The Owl\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlKeywordXpath The XPath expression that defines the location of each document's keywords; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><keyword>text analysis</keyword><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlKeywordXpath: \"//keyword\"\n * \t\t}); // publisher would be: \"text analysis\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlCollectionXpath The XPath expression that defines the location of each document's collection name; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><collection>documentation</collection><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlCollectionXpath: \"//collection\"\n * \t\t}); // publisher would be: \"documentation\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlGroupByXpath The XPath expression that defines the location of each document's collection name; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><sp s='Juliet'>Hello!</sp><sp s='Romeo'>Hi!</sp><sp s='Juliet'>Bye!</sp></doc>\", {\n * \t\t\t xmlDocumentsXPath: '//sp',\n *           xmlGroupByXpath: \"//@s\"\n * \t\t}); // two docs: \"Hello! Bye!\" (Juliet) and \"Hi!\" (Romeo)\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlExtraMetadataXpath A value that defines the location of other metadata; only used for XML-based documents.\n * \n * \t\tloadCorpus(\"<doc><tool>Voyant</tool><phase>1</phase><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlExtraMetadataXpath: \"tool=//tool\\nphase=//phase\"\n * \t\t}); // tool would be \"Voyant\" and phase would be \"1\"\n * \n * Note that `xmlExtraMetadataXpath` is a bit different from the other XPath expressions in that it's\n * possible to define multiple values (each on its own line) in the form of name=xpath.\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlExtractorTemplate Pass the XML document through the XSL template located at the specified URL before extraction (this is ignored in XML-based documents).\n * \n * This is an advanced parameter that allows you to define a URL of an XSL template that can\n * be called *before* text extraction (in other words, the other XML-based parameters apply\n * after this template has been processed).\n */\n\n/**\n * @cfg {String} inputRemoveUntil Omit text up until the start of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tloadCorpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveUntil: \"This\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveUntilAfter Omit text up until the end of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tloadCorpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveUntilAfter: \"world!\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveFrom Omit text from the start of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tloadCorpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveFrom: \"This\"\n * \t\t}); // document would be: \"Hello World!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveFromAfter Omit text from the end of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tloadCorpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveFromAfter: \"This\"\n * \t\t}); // document would be: \"Hello World! This\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} subTitle A sub-title for the corpus.\n * \n * This is currently not used, except in the Dynamic Table of Contexts skin. Still, it may be worth specifying a subtitle for later use.\n */\n\n/**\n * @cfg {String} title A title for the corpus.\n * \n * This is currently not used, except in the Dynamic Table of Contexts skin. Still, it may be worth specifying a title for later use.\n */\n \n /**\n * @cfg {String} curatorTsv a simple TSV of paths and labels for the DToC interface (this isn't typically used outside of the specialized DToC context).\n *\n * The DToC skin allows curation of XML tags and attributes in order to constrain the entries shown in the interface or to provide friendlier labels. This assumes plain text unicode input with one definition per line where the simple XPath expression is separated by a tab from a label.\n *\n *   \t p    \t paragraph\n *   \t ref[@target*=\"religion\"]    \t religion\n *\n  * For more information see the DToC documentation on [Curating Tags](http://cwrc.ca/Documentation/public/index.html#DITA_Files-Various_Applications/DToC/CuratingTags.html)\n */\n\t\n\t/*// don't document this because it should really only be used internally, use loadCorpus or Corpus.load instead\n\t * Create a new Corpus using the specified Corpus ID\n\t * @constructor\n\t * @param {string} id The Corpus ID\n\t */\n\tconstructor(id) {\n\t\tthis.corpusid = id;\n\t}\n\n\tstatic Load = Load;\n\n\tstatic setBaseUrl(baseUrl) {\n\t\tLoad.setBaseUrl(baseUrl);\n\t}\n\n\t/**\n\t * Get a Promise for the ID of the corpus.\n\t * \n\t * @return {Promise/String} a Promise for the string ID of the corpus\n\t */\n\tid() {\n\t\tlet me = this\n\t\treturn new Promise(resolve => resolve(me.corpusid));\n\t}\n\n\t/*\n\t * Create a Corpus and return the ID\n\t * @param {object} config \n\t * @param {object} api \n\t */\n//\tstatic id(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.id(api || config));\n//\t}\n\n\t/**\n\t * Get a Promise for the metadata object (of the corpus or document, depending on which mode is used).\n\t * \n\t * The following is an example of the object return for the metadata of the Jane Austen corpus:\n\t * \n\t * \t{\n\t * \t\t\"id\": \"b50407fd1cbbecec4315a8fc411bad3c\",\n\t * \t\t\"alias\": \"austen\",\n \t * \t\t\"title\": \"\",\n\t * \t\t\"subTitle\": \"\",\n\t * \t\t\"documentsCount\": 8,\n\t * \t\t\"createdTime\": 1582429585984,\n\t * \t\t\"createdDate\": \"2020-02-22T22:46:25.984-0500\",\n\t * \t\t\"lexicalTokensCount\": 781763,\n\t * \t\t\"lexicalTypesCount\": 15368,\n\t * \t\t\"noPasswordAccess\": \"NORMAL\",\n\t * \t\t\"languageCodes\": [\n\t * \t\t\t\"en\"\n\t * \t\t]\n\t * \t}\n\t * \n\t * The following is an example of what is returned as metadata for the first document:\n\t *\n\t * \t\t[\n     * \t\t\t{\n     *   \t\t\t\"id\": \"ddac6b12c3f4261013c63d04e8d21b45\",\n     *   \t\t\t\"extra.X-Parsed-By\": \"org.apache.tika.parser.DefaultParser\",\n     *   \t\t\t\"tokensCount-lexical\": \"33559\",\n     *   \t\t\t\"lastTokenStartOffset-lexical\": \"259750\",\n     *   \t\t\t\"parent_modified\": \"1548457455000\",\n     *   \t\t\t\"typesCount-lexical\": \"4235\",\n     *   \t\t\t\"typesCountMean-lexical\": \"7.924203\",\n     *   \t\t\t\"lastTokenPositionIndex-lexical\": \"33558\",\n     *   \t\t\t\"index\": \"0\",\n     *   \t\t\t\"language\": \"en\",\n     *   \t\t\t\"sentencesCount\": \"1302\",\n     *   \t\t\t\"source\": \"stream\",\n     *   \t\t\t\"typesCountStdDev-lexical\": \"46.626404\",\n     *   \t\t\t\"title\": \"1790 Love And Freindship\",\n     *   \t\t\t\"parent_queryParameters\": \"VOYANT_BUILD=M16&textarea-1015-inputEl=Type+in+one+or+more+URLs+on+separate+lines+or+paste+in+a+full+text.&VOYANT_REMOTE_ID=199.229.249.196&accessIP=199.229.249.196&VOYANT_VERSION=2.4&palette=default&suppressTools=false\",\n     *   \t\t\t\"extra.Content-Type\": \"text/plain; charset=windows-1252\",\n     *   \t\t\t\"parentType\": \"expansion\",\n     *   \t\t\t\"extra.Content-Encoding\": \"windows-1252\",\n     *   \t\t\t\"parent_source\": \"file\",\n     *   \t\t\t\"parent_id\": \"ae47e3a72cd3cad51e196e8a41e21aec\",\n     *   \t\t\t\"modified\": \"1432861756000\",\n     *   \t\t\t\"location\": \"1790 Love And Freindship.txt\",\n     *   \t\t\t\"parent_title\": \"Austen\",\n     *   \t\t\t\"parent_location\": \"Austen.zip\"\n     *   \t\t}\n     *  \t ]\n\t * \n\t * In Corpus mode there's no reason to specify arguments. In documents mode you\n\t * can request specific documents in the config object:\n\t * \n\t *  * **start**: the zero-based start of the list\n\t *  * **limit**: a limit to the number of items to return at a time\n\t *  * **docIndex**: a zero-based list of documents (first document is zero, etc.); multiple documents can be separated by a comma\n\t *  * **docId**: a set of document IDs; multiple documents can be separated by a comma\n\t *  * **query**: one or more term queries for the title, author or full-text\n\t *  * **sort**: one of the following sort orders (composed of a feature like `INDEX` and a sort direction `ASC` or `DESC`): `INDEXASC`, `INDEXDESC`, `TITLEASC`, `TITLEDESC`, `AUTHORASC`, `AUTHORDESC`, `TOKENSCOUNTLEXICALASC`, `TOKENSCOUNTLEXICALDESC`, `TYPESCOUNTLEXICALASC`, `TYPESCOUNTLEXICALDESC`, `TYPETOKENRATIOLEXICALASC`, `TYPETOKENRATIOLEXICALDESC`, `PUBDATEASC`, `PUBDATEDESC`\n\t * \n\t *  An example:\n\t *  \n\t *  \t// this would show the number 8 (the size of the corpus)\n\t *  \tloadCorpus(\"austen\").metadata().then(metadata => metadata.documentsCount)\n\t *  \n\t * @param {Object} config an Object specifying parameters (see list above)\n\t * @return {Promise/Object} a Promise for an Object containing metadata\n\t */\n\tmetadata(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentsMetadata\" : \"corpus.CorpusMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => isDocumentsMode(config) ? data.documentsMetadata.documents : data.corpus.metadata)\n\t}\n\n\t/*\n\t * Create a Corpus and return the metadata\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic metadata(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.metadata(api || config));\n//\t}\n\t\n\t/**\n\t * Get a Promise for a brief summary of the corpus that includes essential metadata (documents count, terms count, etc.) \n\t * \n\t * An example:\n\t * \n\t * \t\tloadCorpus(\"austen\").summary();\n\t * \n\t * @return {Promise/String} a Promise for a string containing a brief summary of the corpus metadata\n\t */\n\tsummary() {\n\t\treturn this.metadata().then(data => {\n\t\t\t// TODO: make this a template\n\t\t\treturn `This corpus (${data.alias ? data.alias : data.id}) has ${data.documentsCount.toLocaleString()} documents with ${data.lexicalTokensCount.toLocaleString()} total words and ${data.lexicalTypesCount.toLocaleString()} unique word forms.`\n\t\t})\n\t}\n\n\t/*\n\t * Create a Corpus and return the summary\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic summary(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.summary(api || config));\n//\t}\n\t\n\t/**\n\t * Get a Promise for an Array of the document titles.\n\t * \n\t * The following are valid in the config parameter:\n\t * \n\t *  * **start**: the zero-based start of the list\n\t *  * **limit**: a limit to the number of items to return at a time\n\t *  * **docIndex**: a zero-based list of documents (first document is zero, etc.); multiple documents can be separated by a comma\n\t *  * **docId**: a set of document IDs; multiple documents can be separated by a comma\n\t *  * **query**: one or more term queries for the title, author or full-text\n\t *  * **sort**: one of the following sort orders (composed of a feature like `INDEX` and a sort direction `ASC` or `DESC`): `INDEXASC`, `INDEXDESC`, `TITLEASC`, `TITLEDESC`, `AUTHORASC`, `AUTHORDESC`, `TOKENSCOUNTLEXICALASC`, `TOKENSCOUNTLEXICALDESC`, `TYPESCOUNTLEXICALASC`, `TYPESCOUNTLEXICALDESC`, `TYPETOKENRATIOLEXICALASC`, `TYPETOKENRATIOLEXICALDESC`, `PUBDATEASC`, `PUBDATEDESC`\n\t * \n\t * An example:\n\t * \n\t * \t\tloadCorpus(\"austen\").titles().then(titles => \"The last work is: \"+titles[titles.length-1])\n\t * \n\t * @param {Object} config an Object specifying parameters (see list above) \n\t * @returns {Promise/Array} a Promise for an Array of document titles  \n\t */\n\ttitles(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentsMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => data.documentsMetadata.documents.map(doc => doc.title))\n\t}\n\n\t/*\n\t * Create a Corpus and return the titles\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic titles(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.titles(api || config));\n//\t}\n\t\n\t/**\n\t * Get a Promise for the text of the entire corpus.\n\t * \n\t * Texts are concatenated together with two new lines and three dashes (\\\\n\\\\n---\\\\n\\\\n)\n\t * \n\t * The following are valid in the config parameter:\n\t * \n\t * * **noMarkup**: strips away the markup\n\t * * **compactSpace**: strips away superfluous spaces and multiple new lines\n\t * * **limit**: a limit to the number of characters (per text)\n\t * * **format**: `text` for plain text, any other value for the simplified Voyant markup\n\t * \n\t * An example:\n\t *\n\t * \t\t// fetch 1000 characters from each text in the corpus into a single string\n\t * \t\tloadCorpus(\"austen\").text({limit:1000})\n\t * \n\t * @param {Object} config an Object specifying parameters (see list above)\n\t * @returns {Promise/String} a Promise for a string of the corpus\n\t */\n\ttext(config) {\n\t\treturn this.texts(config).then(data => data.join(\"\\n\\n---\\n\\n\"))\n\t}\n\n\t/*\n\t * Create a Corpus and return the text\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic text(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.text(api || config));\t\n//\t}\n\t\n\t/**\n\t * Get a Promise for an Array of texts from the entire corpus.\n\t * \n\t * The following are valid in the config parameter:\n\t * \n\t * * **noMarkup**: strips away the markup\n\t * * **compactSpace**: strips away superfluous spaces and multiple new lines\n\t * * **limit**: a limit to the number of characters (per text)\n\t * * **format**: `text` for plain text, any other value for the simplified Voyant markup\n\t * \n\t * An example:\n\t *\n\t * \t\t// fetch 1000 characters from each text in the corpus into an Array\n\t * \t\tloadCorpus(\"austen\").texts({limit:1000})\n\t * \n\t * @param {Object} config an Object specifying parameters (see list above)\n\t * @returns {Promise/String} a Promise for an Array of texts from the corpus\n\t */\n\ttexts(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusTexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.texts.texts)\n\t}\n\n\t/*\n\t * Create a Corpus and return the texts\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic texts(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.texts(api || config));\t\n//\t}\n\t\n\t/**\n\t * Get a Promise for an Array of terms (either CorpusTerms or DocumentTerms, depending on the specified mode).\n\t * These terms are actually types, so information about each type is collected (as opposed to the {#link tokens}\n\t * method which is for every occurrence in document order).\n\t * \n\t * The mode is set to \"documents\" when any of the following is true\n\t * \n\t * * the `mode` parameter is set to \"documents\"\n\t * * a `docIndex` parameter being set\n\t * * a `docId` parameter being set\n\t * \n\t * The following is an example a Corpus Term (corpus mode):\n\t * \n\t * \t\t{\n\t * \t\t\t\"term\": \"the\",\n\t * \t\t\t\"inDocumentsCount\": 8,\n\t * \t\t\t\"rawFreq\": 28292,\n\t * \t\t\t\"relativeFreq\": 0.036189996,\n\t * \t\t\t\"comparisonRelativeFreqDifference\": 0\n\t * \t\t}\n\t * \n\t * The following is an example of Document Term (documents mode):\n\t * \n\t * \t\t{\n\t * \t\t\t\"term\": \"the\",\n\t * \t\t\t\"rawFreq\": 1333,\n\t * \t\t\t\"relativeFreq\": 39721.086,\n\t * \t\t\t\"zscore\": 28.419,\n\t * \t\t\t\"zscoreRatio\": -373.4891,\n\t * \t\t\t\"tfidf\": 0.0,\n\t * \t\t\t\"totalTermsCount\": 33559,\n \t * \t\t\t\"docIndex\": 0,\n\t * \t\t\t\"docId\": \"8a61d5d851a69c03c6ba9cc446713574\"\n\t * \t\t}\n\t * \n\t * The following config parameters are valid in both modes:\n\t * \n\t *  * **start**: the zero-based start index of the list (for paging)\n\t *  * **limit**: the maximum number of terms to provide per request\n\t *  * **minRawFreq**: the minimum raw frequency of terms\n\t *  * **query**: a term query (see https://voyant-tools.org/docs/#!/guide/search)\n\t *  * **stopList** a list of stopwords to include (see https://voyant-tools.org/docs/#!/guide/stopwords)\n\t *  * **withDistributions**: a true value shows distribution across the corpus (corpus mode) or across the document (documents mode)\n\t *  * **whiteList**: a keyword list – terms will be limited to this list\n\t *  * **tokenType**: the token type to use, by default `lexical` (other possible values might be `title` and `author`)\n\t * \n\t * The following are specific to corpus mode:\n\t * \n\t *  * **bins**: by default there are the same number of bins as there are documents (for distribution values), this can be modified\n\t *  * **corpusComparison**: you can provide the ID of a corpus for comparison of frequency values\n\t *  * **inDocumentsCountOnly**: if you don't need term frequencies but only frequency per document set this to true\n\t *  * **sort**: the order of the terms, one of the following (composed of a value and a direction of ASCending or DEScending: `INDOCUMENTSCOUNTASC, INDOCUMENTSCOUNTDESC, RAWFREQASC, RAWFREQDESC, TERMASC, TERMDESC, RELATIVEPEAKEDNESSASC, RELATIVEPEAKEDNESSDESC, RELATIVESKEWNESSASC, RELATIVESKEWNESSDESC, COMPARISONRELATIVEFREQDIFFERENCEASC, COMPARISONRELATIVEFREQDIFFERENCEDESC`\n\t *  \n\t *  The following are specific to documents mode:\n\t * \n\t *  * **bins**: by default the document is divided into 10 equal bins(for distribution values), this can be modified\n\t *  * **sort**: the order of the terms, one of the following (composed of a value and a direction of ASCending or DEScending: `RAWFREQASC, RAWFREQDESC, RELATIVEFREQASC, RELATIVEFREQDESC, TERMASC, TERMDESC, TFIDFASC, TFIDFDESC, ZSCOREASC, ZSCOREDESC`\n\t *  * **perDocLimit**: the `limit` parameter is for the total number of terms returned, this parameter allows you to specify a limit value per document\n\t *  * **docIndex**: the zero-based index of the documents to include (use commas to separate multiple values)\n\t *  * **docId**: the document IDs to include (use commas to separate multiple values)\n\t *  \n\t * An example:\n\t * \n\t * \t\t// show top 5 terms\n   \t * \t\tloadCorpus(\"austen\").terms({stopList: 'auto', limit: 5}).then(terms => terms.map(term => term.term))\n   \t * \n   \t *\t\t// show top term for each document\n   \t * \t\tloadCorpus(\"austen\").terms({stopList: 'auto', perDocLimit: 1, mode: 'documents'}).then(terms => terms.map(term => term.term))\n   \t * \n\t * @param {Object} config an Object specifying parameters (see list above)\n\t * @returns {Promise/Array} a Promise for a Array of Terms\n\t */\n\tterms(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTerms\" : \"corpus.CorpusTerms\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentTerms.terms : data.corpusTerms.terms)\n\t}\n\n\t/*\n\t * Create a Corpus and return the terms\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic terms(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.terms(api || config));\n//\t}\n\t\n\t/**\n\t * Get a Promise for an Array of document tokens.\n\t * \n\t * The promise returns an array of document token objects. A document token object can look something like this:\n\t * \n\t *\t\t{\n\t *\t\t\t\"docId\": \"8a61d5d851a69c03c6ba9cc446713574\",\n\t *\t\t\t\"docIndex\": 0,\n\t *\t\t\t\"term\": \"LOVE\",\n\t *\t\t\t\"tokenType\": \"lexical\",\n\t *\t\t\t\"rawFreq\": 54,\n\t *\t\t\t\"position\": 0,\n\t *\t\t\t\"startOffset\": 3,\n\t *\t\t\t\"endOffset\": 7\n\t *\t\t}\n\t *\n\t * The following are valid in the config parameter:\n\t * \n\t *  * **start**: the zero-based start index of the list (for paging)\n\t *  * **limit**: the maximum number of terms to provide per request\n\t *  * **stopList** a list of stopwords to include (see https://voyant-tools.org/docs/#!/guide/stopwords)\n\t *  * **whiteList**: a keyword list – terms will be limited to this list\n\t *  * **perDocLimit**: the `limit` parameter is for the total number of terms returned, this parameter allows you to specify a limit value per document\n\t *  * **noOthers**: only include lexical forms, no other tokens\n\t *  * **stripTags**: one of the following: `ALL`, `BLOCKSONLY`, `NONE` (`BLOCKSONLY` tries to maintain blocks for line formatting)\n\t *  * **withPosLemmas**: include part-of-speech and lemma information when available (reliability of this may vary by instance)\n\t *  * **docIndex**: the zero-based index of the documents to include (use commas to separate multiple values)\n\t *  * **docId**: the document IDs to include (use commas to separate multiple values)\n\t * \n\t * An example:\n\t * \n\t * \t\t// load the first 20 tokens (don't include tags, spaces, etc.)\n\t * \t\tloadCorpus(\"austen\").tokens({limit: 20, noOthers: true})\n\t * \n\t * @param {Object} config an Object specifying parameters (see above)\n\t * @returns {Promise/Array} a Promise for an Array of document tokens\n\t */\n\ttokens(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens)\n\t}\n\n\t/*\n\t * Create a Corpus and return the tokens\n\t * @param {*} config \n\t * @param {*} api \n\t */\n//\tstatic tokens(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.tokens(api || config));\n//\t}\n\n\t/**\n\t * Get a Promise for an Array of words from the corpus.\n\t * \n\t * The array of words are in document order, much like tokens.\n\t * \n\t * The following are valid in the config parameter:\n\t * \n\t *  * **start**: the zero-based start index of the list (for paging)\n\t *  * **limit**: the maximum number of terms to provide per request\n\t *  * **stopList** a list of stopwords to include (see https://voyant-tools.org/docs/#!/guide/stopwords)\n\t *  * **whiteList**: a keyword list – terms will be limited to this list\n\t *  * **perDocLimit**: the `limit` parameter is for the total number of terms returned, this parameter allows you to specify a limit value per document\n\t *  * **docIndex**: the zero-based index of the documents to include (use commas to separate multiple values)\n\t *  * **docId**: the document IDs to include (use commas to separate multiple values)\n\t * \n\t * An example:\n\t * \n\t * \t\t// load the first 20 words in the corpus\n\t * \t\tloadCorpus(\"austen\").tokens({limit: 20})\n\t * \n\t * @param {Object} config an Object specifying parameters (see above)\n\t * @returns {Promise/Array} a Promise for an Array of words\n\t */\n\twords(config = {}) {\n\t\t// by default DocumentTokens limits to 50 which probably isn't expected\n\t\tif (!(\"limit\" in config)) {config.limit=0;}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tnoOthers: true,\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens.map(t => t.term))\n\t}\n\n\t/*\n\t * Create a Corpus and return an array of lexical forms (words) in document order.\n\t * @param {object} config \n\t * @param {object} api \n\t */\n//\tstatic words(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.words(api || config));\n//\t}\n\t\n\t/**\n\t * Get a Promise for an Array of Objects that contain keywords in contexts (KWICs).\n\t * \n\t * An individual KWIC Object looks something like this:\n\t * \n\t * \n\t */\n\tcontexts(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for contexts request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentContexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentContexts.contexts)\n\t}\n\t\n\t/*\n\t * Create a Corpus and return the contexts\n\t * @param {object} config \n\t * @param {object} api \n\t */\n//\tstatic contexts(config, api) {\n//\t\treturn Corpus.load(config).then(corpus => corpus.contexts(api || config));\n//\t}\n\t\n\tcollocates(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for collocates request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusCollocates\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.corpusCollocates.collocates)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the collocates\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic collocates(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.collocates(api || config));\n\t}\n\n\tphrases(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentNgrams\" : \"corpus.CorpusNgrams\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentNgrams.ngrams : data.corpusNgrams.ngrams)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the phrases\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic phrases(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.phrases(api || config));\n\t}\n\t\n\tcorrelations(config) {\n\t\tif ((!config || !config.query) && console) {\n\t\t\tconsole.warn(\"No query provided for correlations request.\")\n\t\t\tif (!isDocumentsMode(config)) {\n\t\t\t\tthrow new Error(\"Unable to run correlations for a corpus without a query.\")\n\t\t\t}\n\t\t}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTermCorrelations\" : \"corpus.CorpusTermCorrelations\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.termCorrelations.correlations)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the correlations\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic correlations(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.correlations(api || config));\n\t}\n\t\n\ttool(_tool, config = {}) {\n\t\tlet me = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tlet isTool = function(obj) {return obj && (typeof obj==\"string\" && /\\W/.test(obj)==false) || (typeof obj == \"object\" && \"forTool\" in obj)}\n\t\t\tlet isConfig = function(obj) {return obj && typeof obj == \"object\" && !(\"forTool\" in obj)}\n\t\t\tlet lastArg = arguments[arguments.length-1];\n\t\t\tconfig = isConfig(lastArg) ? lastArg : {};\n\t\t\t\n\t\t\t// we have all tools and we'll show them individually\n\t\t\tif (isTool(_tool) && (isTool(lastArg) || isConfig(lastArg))) {\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 350px; height: 350px\",\n\t\t\t\t\tfloat: \"right\"\n\t\t\t\t}\n\t\t\t\tlet out = \"\";\n\t\t\t\tfor (let i=0; i<arguments.length; i++) {\n\t\t\t\t\tlet t = arguments[i];\n\t\t\t\t\tif (isTool(t)) {\n\t\t\t\t\t\tif (typeof t == \"string\") {t = {forTool: t}} // make sure we have object\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build iframe tag\n\t\t\t\t\t\tout+=\"<iframe \";\n\t\t\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\t\t\tvar val = (attr in t ? t[attr] : undefined) || (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build url\n\t\t\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl) + \"tool/\"+t.forTool+\"/\");\n\t\t\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\t\t\tlet all = Object.assign(t,config);\n\t\t\t\t\t\tObject.keys(all).forEach(key => {\n\t\t\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\t\t\turl.searchParams.append(key, all[key])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// finish tag\n\t\t\t\t\t\tout+=' src=\"'+url+'\"></iframe>'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn resolve(out);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(_tool)) {\n\t\t\t\t\t_tool = _tool.join(\";\")\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 90%; height: \"+(350*(_tool ? _tool : \"\").split(\";\").length)+\"px\"\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// build iframe tag\n\t\t\t\tlet out =\"<iframe \";\n\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\tvar val = (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// build url\n\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl)+(_tool ? (\"?view=customset&tableLayout=\"+_tool) : \"\"));\n\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\tObject.keys(config).forEach(key => {\n\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\turl.searchParams.append(key, config[key])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve(out+\" src='\"+url+\"'></iframe\");\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the tool\n\t * @param {*} tool \n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tool(tool, config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tool(tool, config, api));\n\t}\n\n\ttoString() {\n\t\treturn this.summary()\n\t}\n\t\t\n\t/**\n\t * Create a new Corpus using the provided config\n\t * @param {object} config \n\t */\n\tstatic create(config) {\n\t\treturn Corpus.load(config);\n\t}\n\n\t/**\n\t * Load a Corpus using the provided config\n\t * @param {object} config The Corpus config\n\t */\n\tstatic load(config) {\n\t\tconst promise = new Promise(function(resolve, reject) {\n\t\t\tif (config instanceof Corpus) {\n\t\t\t\tresolve(config);\n\t\t\t} else if (typeof config === \"string\" && config.length>0 && /\\W/.test(config)===false) {\n\t\t\t\tresolve(new Corpus(config)); \n\t\t\t} else if (typeof config === \"object\" && config.corpus) {\n\t\t\t\tresolve(new Corpus(config.corpus))\n\t\t\t} else {\n\t\t\t\tif (typeof config === \"string\") {config = {input: config}}\n\t\t\t\tif (config && config.input) {\n\t\t\t\t\tLoad.trombone(config, {tool: \"corpus.CorpusMetadata\"})\n\t\t\t\t\t.then(data => resolve(new Corpus(data.corpus.metadata.id)))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t[\"id\",\"metadata\",\"summary\",\"titles\",\"text\",\"texts\",\"terms\",\"tokens\",\"words\",\"contexts\",\"collocates\",\"phrases\",\"correlations\",\"tool\"].forEach(name => {\n\t\t\tpromise[name] = function() {\n\t\t\t\tvar args = arguments\n\t\t\t\treturn promise.then(corpus => {return corpus[name].apply(corpus, args)})\n\t\t\t}\n\t\t})\n\t\tpromise.assign = function(name) {\n\t\t\tthis.then(corpus => {window[name] = corpus; return corpus})\n\t\t}\n\n\t\treturn promise;\n\t}\n}\n\nexport default Corpus\n","/**\n * Class representing a Chart.\n * @memberof Spyral\n * @class\n */\nclass Chart {\n\t/**\n\t * The Highcharts config object\n\t * @typedef {object} HighchartsConfig\n\t * @property {(string|object)} title\n\t * @property {(string|object)} subtitle\n\t * @property {object} credits\n\t * @property {object} xAxis\n\t * @property {object} yAxis\n\t * @property {object} chart\n\t * @property {array} series\n\t * @property {object} plotOptions\n\t */\n\n\t/**\n\t * Construct a new Chart class\n\t * @constructor\n\t * @param {element} target \n\t * @param {array} data \n\t */\n    constructor(target, data) {\n\t    this.target = target;\n\t    this.data = data;\n\t}\n\n\t/**\n\t * Create a new chart\n\t * See {@link https://api.highcharts.com/highcharts/} for full set of config options.\n\t * @param {(string|element)} target \n\t * @param {HighchartsConfig} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tcreate(target, config) {\n\t\treturn Highcharts.chart(target, config);\n\t}\n\t\n\t/**\n\t * Create a new chart\n\t * See {@link https://api.highcharts.com/highcharts/} for full set of config options.\n\t * @param {(string|element)} target \n\t * @param {HighchartsConfig} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tstatic create(target, config) {\n\t\t// convert title and suppress if not provided\n\t\tif (\"title\" in config) {\n\t\t\tif (typeof config.title == \"string\") {\n\t\t\t\tconfig.title = {text: config.title};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.title = false;\n\t\t}\n\t\t\n\t\t// convert subtitle and convert if not provided\n\t\tif (\"subtitle\" in config) {\n\t\t\tif (typeof config.subtitle == \"string\") {\n\t\t\t\tconfig.subtitle = {text: config.subtitle};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.subtitle = false;\n\t\t}\n\t\t\n\t\t// convert credits\n\t\tif (!(\"credits\" in config)) {\n\t\t\tconfig.credits = false;\n\t\t}\n\t\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"xAxis\" in config)) {config.xAxis = {}}\n\t\tif (!(\"title\" in config.xAxis)) {\n\t\t\t//config.xAxis.title = false;\n\t\t}\n\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"yAxis\" in config)) {config.yAxis = {}}\n\t\tif (!(\"title\" in config.yAxis)) {\n\t\t\tconfig.yAxis.title = false;\n\t\t}\n\t\t\n\t\treturn Highcharts.chart(target, config);\n\t}\n\n\t/**\n\t * Sets the default chart type\n\t * @param {object} config The chart config object\n\t * @param {string} type The type of chart\n\t */\n\tstatic setDefaultChartType(config, type) {\n\t\tif (\"type\" in config) {\n\t\t\tconfig.chart.type = config.type;\n\t\t\tdelete config.type;\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// TODO: check plot options and series?\n\n\t\tif (\"chart\" in config) {\n\t\t\tif (\"type\" in config.chart) {return} // already set\n\t\t} else {\n\t\t\tconfig.chart = {}\n\t\t}\n\n\t\tconfig.chart.type = type;\n\t\treturn config;\n\t}\n\n\t/**\n\t * Add the provided data to the config as a series\n\t * @param {object} config \n\t * @param {array} data \n\t */\n\tstatic setSeriesData(config, data) {\n\t\tif (Array.isArray(data)) {\n\t\t\tif (Array.isArray(data[0])) {\n\t\t\t\tconfig.series = data.map(subArray => { return {data: subArray} })\n\t\t\t} else {\n\t\t\t\tconfig.series = [{data: data}]\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create a bar chart\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tbar(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.bar(this.target, config)\n\t}\n\t/**\n\t * Create a bar chart\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static bar(target, config) {\n\t\tChart.setDefaultChartType(config, 'bar')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a line chart\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tline(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.line(this.target, config)\n\t}\n\t/**\n\t * Create a line chart\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static line(target, config) {\n\t\tChart.setDefaultChartType(config, 'line')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a scatter plot\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tscatter(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.scatter(this.target, config)\n\t}\n\t/**\n\t * Create a scatter plot\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static scatter(target, config) {\n\t\tChart.setDefaultChartType(config, 'scatter')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a network graph\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tnetworkgraph(config={}) {\n\t\tconfig.plotOptions = {\n\t\t\tnetworkgraph: {\n\t\t\t\tlayoutAlgorithm: {\n\t\t\t\t\tenableSimulation: true\n\t\t\t\t},\n\t\t\t\tkeys: ['from', 'to']\n\t\t\t}\n\t\t}\n\t\tChart.setSeriesData(config, this.data);\n\n\t\treturn Chart.networkgraph(this.target, config)\n\t}\n\t/**\n\t * Create a network graph\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tstatic networkgraph(target, config) {\n\t\tChart.setDefaultChartType(config, 'networkgraph')\n\t\treturn Highcharts.chart(target, config);\n\t}\n}\n\nexport default Chart\n","import Chart from \"./chart.js\";\n\n/**\n * Class representing a Table.\n * @memberof Spyral\n * @class\n */\nclass Table {\n\t/**\n\t * The Table config object\n\t * @typedef {object} TableConfig\n\t * @property {string} format The format of the provided data, either \"tsv\" or \"csv\"\n\t * @property {(object|array)} headers The table headers\n\t * @property {boolean} hasHeaders True if the headers are the first item in the data\n\t * @property {string} count Specify \"vertical\" or \"horizontal\" to create a table of unique item counts in the provided data\n\t */\n\n\n\t/**\n\t * Create a new Table\n\t * @constructor\n\t * @param {(object|array|string|number)} data\n\t * @param {TableConfig} config\n\t */\n\tconstructor(data, config, ...other) {\n\n\t\tthis._rows = [];\n\t\tthis._headers = {};\n\t\tthis._rowKeyColumnIndex = 0;\n\t\t\n\t\t// we have a configuration object followed by values: create({headers: []}, 1,2,3) …\n\t\tif (data && typeof data == \"object\" && (typeof config == \"string\" || typeof config == \"number\" || Array.isArray(config))) {\n\t\t\tdata.rows = [config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// we have a simple variable set of arguments: create(1,2,3) …\n\t\tif (arguments.length>0 && Array.from(arguments).every(a => a!==undefined && !Array.isArray(a) && typeof a != \"object\")) {\n\t\t\tdata = [data,config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// could be CSV or TSV\n\t\tif (Array.isArray(data) && data.length==1 && typeof data[0] == \"string\"  && (data[0].indexOf(\",\")>-1 || data[0].indexOf(\"\\t\")>-1)) {\n\t\t\tdata = data[0];\n\t\t}\n\n\t\t// first check if we have a string that might be delimited data\n\t\tif (data && (typeof data == \"string\" || typeof data ==\"number\")) {\n\t\t\tif (typeof data == \"number\") {data = String(data)} // convert to string for split\n\t\t\tlet rows = [];\n\t\t\tlet format = config && \"format\" in config ? config.format : undefined;\n\t\t\tdata.split(/(\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])+/g).forEach((line,i) => {\n\t\t\t\tif (line.trim().length>0) {\n\t\t\t\t\tlet values;\n\t\t\t\t\tif ((format && format==\"tsv\") || line.indexOf(\"\\t\")>-1) {\n\t\t\t\t\t\tvalues = line.split(/\\t/);\n\t\t\t\t\t} else if ((format && format==\"csv\") || line.indexOf(\",\")>-1) {\n\t\t\t\t\t\tvalues = parseCsvLine(line)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues = [line]\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// if we can't find any config information for headers then we try to guess\n\t\t\t\t\t// if the first line doesn't have any numbers - this heuristic may be questionable\n\t\t\t\t\tif (i==0 && values.every(v => isNaN(v)) && \n\t\t\t\t\t\t((typeof config != \"object\") || (typeof config == \"object\" && !(\"hasHeaders\" in config) && !(\"headers\" in config)))) {\n\t\t\t\t\t\tthis.setHeaders(values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(values.map(v => isNaN(v) ? v : Number(v)))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tdata = rows;\n\t\t}\n\t\t\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (config) {\n\t\t\t\tif (Array.isArray(config)) {\n\t\t\t\t\tthis.setHeaders(config);\n\t\t\t\t} else if (typeof config == \"object\") {\n\t\t\t\t\tif (\"headers\" in config) {\n\t\t\t\t\t\tthis.setHeaders(config.headers)\n\t\t\t\t\t} else if (\"hasHeaders\" in config && config.hasHeaders) {\n\t\t\t\t\t\tthis.setHeaders(data.shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (config && \"count\" in config && config.count) {\n\t\t\t\tlet freqs = Table.counts(data);\n\t\t\t\tif (config.count==\"vertical\") {\n\t\t\t\t\tfor (let item in freqs) {\n\t\t\t\t\t\tthis.addRow(item, freqs[item])\n\t\t\t\t\t}\n\t\t\t\t\tthis.rowSort((a,b) => Table.cmp(b[1],a[1]))\n\t\t\t\t} else {\n\t\t\t\t\tthis._headers = []; // reset and use the terms as headers\n\t\t\t\t\tthis.addRow(freqs)\n\t\t\t\t\tthis.columnSort((a,b) => Table.cmp(this.cell(0,b),this.cell(0,a)))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.addRows(data);\n\t\t\t}\n\t\t} else if (data && typeof data == \"object\") {\n\t\t\tif (\"headers\" in data && Array.isArray(data.headers)) {\n\t\t\t\tthis.setHeaders(data.headers);\n\t\t\t} else if (\"hasHeaders\" in data && \"rows\" in data) {\n\t\t\t\tthis.setHeaders(data.rows.shift())\n\t\t\t}\n\t\t\tif (\"rows\" in data && Array.isArray(data.rows)) {\n\t\t\t\tthis.addRows(data.rows)\n\t\t\t}\n\t\t\tif (\"rowKeyColumn\" in data) {\n\t\t\t\tif (typeof data.rowKeyColumn == \"number\") {\n\t\t\t\t\tif (data.rowKeyColumn < this.columns()) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = data.rowKeyColumn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"The rowKeyColumn value is higher than the number headers designated: \"+data.rowKeyColum);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof data.rowKeyColumn == \"string\") {\n\t\t\t\t\tif (data.rowKeyColumn in this._headers) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = this._headers[data.rowKeyColumn];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unable to find column designated by rowKeyColumn: \"+data.rowKeyColumn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Set the headers for the Table\n\t * @param {(object|array)} data\n\t * @returns {Table}\n\t */\n\tsetHeaders(data) {\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach(h => this.addColumn(h), this);\n\t\t} else if (typeof data == \"object\") {\n\t\t\tif (this.columns()==0 || Object.keys(data).length==this.columns()) {\n\t\t\t\tthis._headers = data;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The number of columns don't match: \");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized argument for headers, it should be an array or an object.\"+data)\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add rows to the Table\n\t * @param {array} data\n\t * @returns {Table}\n\t */\n\taddRows(data) {\n\t\tdata.forEach(row => this.addRow(row), this);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add a row to the Table\n\t * @param {(array|object)} data\n\t * @returns {Table}\n\t */\n\taddRow(data, ...other) {\n\t\t\n\t\t// we have multiple arguments, so call again as an array\n\t\tif (other.length>0) {\n\t\t\treturn this.addRow([data].concat(other))\n\t\t}\n\n\t\tthis.setRow(this.rows(), data, true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Set a row\n\t * @param {(number|string)} ind The row index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetRow(ind, data, create) {\n\n\t\tlet rowIndex = this.getRowIndex(ind, create);\n\t\tif (rowIndex>=this.rows() && !create) {\n\t\t\tthrow new Error(\"Attempt to set row values for a row that does note exist: \"+ind+\". Maybe use addRow() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (data.length>this.columns()) {\n\t\t\t\tif (create) {\n\t\t\t\t\tfor (let i = this.columns(); i<data.length; i++) {\n\t\t\t\t\t\tthis.addColumn();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"The row that you've created contains more columns than the current table. Maybe use addColunm() first?\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.forEach((d,i) => this.setCell(rowIndex, i, d), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let column in data) {\n\t\t\t\tif (!this.hasColumn(column)) {\n\t\t\t\t}\n\t\t\t\tthis.setCell(rowIndex, column, data[column]);\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if (this.columns()<2 && create) { // hopefully some scalar value\n\t\t\tif (this.columns()==0) {\n\t\t\t\tthis.addColumn(); // create first column if it doesn't exist\n\t\t\t}\n\t\t\tthis.setCell(rowIndex,0,data);\n\t\t} else {\n\t\t\tthrow new Error(\"setRow() expects an array or an object, maybe setCell()?\")\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\t\n\t/**\n\t * Set a column\n\t * @param {(number|string)} ind The column index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetColumn(ind, data, create) {\n\n\t\tlet columnIndex = this.getColumnIndex(ind, create);\n\t\tif (columnIndex>=this.columns() && !create) {\n\t\t\tthrow new Error(\"Attempt to set column values for a column that does note exist: \"+ind+\". Maybe use addColumn() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach((d,i) => this.setCell(i, columnIndex, d, create), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let row in data) {\n\t\t\t\tthis.setCell(row, columnIndex, data[column], create);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// hope we have a scalar value to assign to the first row\n\t\telse {\n\t\t\tthis.setCell(0,columnIndex,data, create);\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add to or set a cell value\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set/add\n\t * @param {boolean} overwrite True to set, false to add to current value\n\t */\n\tupdateCell(row, column, value, overwrite) {\n\t\tlet rowIndex = this.getRowIndex(row, true);\n\t\tlet columnIndex = this.getColumnIndex(column, true);\n\t\tlet val = this.cell(rowIndex, columnIndex);\n\t\tthis._rows[rowIndex][columnIndex] = val && !overwrite ? val+value : value;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value of a cell\n\t * @param {(number|string)} rowInd The row index\n\t * @param {(number|string)} colInd The column index\n\t * @returns {number}\n\t */\n\tcell(rowInd, colInd) {\n\t\treturn this._rows[this.getRowIndex(rowInd)][this.getColumnIndex(colInd)];\n\t}\n\n\t/**\n\t * Set the value of a cell\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set\n\t * @returns {Table}\n\t */\n\tsetCell(row, column, value) {\n\t\tthis.updateCell(row,column,value,true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get (and create) the row index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetRowIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this._rows.length) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis._rows[ind] = Array(this.columns());\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested row does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tlet row = this._rows.findIndex(r => r[this._rowKeyColumnIndex] === ind, this);\n\t\t\tif (row>-1) {return row;}\n\t\t\telse if (create) {\n\t\t\t\tlet arr = Array(this.columns());\n\t\t\t\tarr[this._rowKeyColumnIndex] = ind;\n\t\t\t\tthis.addRow(arr);\n\t\t\t\treturn this.rows();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(\"Unable to find the row named \"+ind);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Please provide a valid row (number or named row)\");\n\t}\n\t\n\t/**\n\t * Get (and create) the column index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetColumnIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this.columns()) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn(ind)\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested column does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tif (ind in this._headers) {\n\t\t\t\treturn this._headers[ind];\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn({header: ind});\n\t\t\t\treturn this._headers[ind];\n\t\t\t}\n\t\t\tthrow new Error(\"Unable to find column named \"+ind);\n\t\t}\n\t\tthrow new Error(\"Please provide a valid column (number or named column)\");\n\t}\n\t\n\t/**\n\t * Add a column (at the specified index)\n\t * @param {(object|string)} config\n\t * @param {(number|string)} ind\n\t */\n\taddColumn(config, ind) {\n\t\t// determine col\n\t\tlet col = this.columns(); // default\n\t\tif (config && typeof config == \"string\") {col=config}\n\t\telse if (config && (typeof config == \"object\") && (\"header\" in config)) {col = config.header}\n\t\telse if (ind!==undefined) {col=ind}\n\n\t\t// check if it exists\n\t\tif (col in this._headers) {\n\t\t\tthrow new Error(\"This column exists already: \"+config.header)\n\t\t}\n\t\t\n\t\t// add column\n\t\tlet colIndex = this.columns();\n\t\tthis._headers[col] = colIndex;\n\t\t\n\t\t// determine data\n\t\tlet data = [];\n\t\tif (config && typeof config == \"object\" && \"rows\" in config) {data=config.rows}\n\t\telse if (Array.isArray(config)) {data = config;}\n\t\t\n\t\t// make sure we have enough rows for the new data\n\t\tlet columns = this.columns();\n\t\twhile (this._rows.length<data.length) {\n\t\t\tthis._rows[this._rows.length] = new Array(columns);\n\t\t}\n\t\t\n\t\tthis._rows.forEach((r,i) => r[colIndex] = data[i])\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of rows in this table.\n\t * When the first argument is the boolean value `true` all rows are returned.\n\t * When the first argument is a an array then the rows corresponding to the row\n\t * indices or names are returned. When all arguments except are numbers or strings\n\t * then each of those is returned.\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\trows(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._rows.length;\n\t\t}\n\t\t\n\t\tlet rows = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\trows = this._rows.map((r,i) => this.row(i, asObj))\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\telse if (Array.isArray(inds)) {\n\t\t\trows = inds.map(ind => this.row(ind));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\trows.push(this.row(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// zip if requested\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (rows.length<2) {throw new Error(\"Only one row available, can't zip\")}\n\t\t\treturn Table.zip(rows);\n\t\t}\n\t\telse {\n\t\t\treturn rows;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified row\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\trow(ind, asObj) {\n\t\tlet row = this._rows[this.getRowIndex(ind)];\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tfor (let key in this._headers) {\n\t\t\t\tobj[key] = row[this._headers[key]]\n\t\t\t}\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn row;\n\t\t}\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of columns in this table.\n\t * When the first argument is the boolean value `true` all columns are returned.\n\t * When the first argument is a number a slice of the columns is returned and if\n\t * the second argument is a number it is treated as the length of the slice to\n\t * return (note that it isn't the `end` index like with Array.slice()).\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\tcolumns(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\t\t\n\t\tlet columns = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all columns\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tfor (let i=0, len=this.columns(); i<len; i++) {\n\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// return specified columns\n\t\telse if (Array.isArray(inds)) {\n\t\t\tinds.forEach(i => columns.push(this.column(i, asObj)), this);\n\t\t}\n\t\t\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (columns.length<2) {throw new Error(\"Only one column available, can't zip\")}\n\t\t\treturn Table.zip(columns);\n\t\t}\n\t\telse {\n\t\t\treturn columns;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified column\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\tcolumn(ind, asObj) {\n\t\tlet column = this.getColumnIndex(ind);\n\t\tlet data = this._rows.forEach(r => r[column]); // TODO\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tthis._rows.forEach(r => {\n\t\t\t\tobj[r[this._rowKeyColumnIndex]] = r[column];\n\t\t\t})\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn this._rows.map(r => r[column]);\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified header\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\theader(ind) {\n\t\tlet keys = Object.keys(this._headers);\n\t\tlet i = this.getColumnIndex(ind);\n\t\treturn keys[keys.findIndex(k => i==this._headers[k])]\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of headers in this table.\n\t * When the first argument is the boolean value `true` all headers are returned.\n\t * When the first argument is a number a slice of the headers is returned.\n\t * When the first argument is an array the slices specified in the array are returned.\n\t * @param {(boolean|array|number|string)} inds\n\t * @returns {(number|array)}\n\t */\n\theaders(inds, ...other) {\n\t\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\n\t\tlet headers = [];\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tinds = Array(Object.keys(this._headers).length).fill().map((_,i) => i);\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn inds.map(i => this.header(i));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\treturn [inds, ...other].map(i => this.header(i));\n\t\t}\n\t}\n\n\t/**\n\t * Does the specified column exist\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\thasColumn(ind) {\n\t\treturn ind in this._headers;\n\t}\n\t\n\t/**\n\t * Runs the specified function on each row.\n\t * The function is passed the row and the row index.\n\t * @param {function} fn\n\t */\n\tforEach(fn) {\n\t\tthis._rows.forEach((r,i) => fn(r,i));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMin(ind) {\n\t\treturn Math.min.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMax(ind) {\n\t\treturn Math.max.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMin(ind) {\n\t\treturn Math.min.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMax(ind) {\n\t\treturn Math.max.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowSum(ind) {\n\t\treturn Table.sum(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnSum(ind) {\n\t\treturn Table.sum(this.column(ind));\n\t}\n\n\t/**\n\t * Get the mean of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMean(ind) {\n\t\treturn Table.mean(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the mean of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMean(ind) {\n\t\treturn Table.mean(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowCounts(ind) {\n\t\treturn Table.counts(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnCounts(ind) {\n\t\treturn Table.counts(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified row\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\trowRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.row(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setRow(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified column\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\tcolumnRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.column(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setColumn(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the variance for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowVariance(ind) {\n\t\treturn Table.variance(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the variance for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnVariance(ind) {\n\t\treturn Table.variance(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\trowZScores(ind) {\n\t\treturn Table.zScores(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\tcolumnZScores(ind) {\n\t\treturn Table.zScores(this.column(ind));\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified rows\n\t * @returns {Table}\n\t */\n\trowSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i)\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn this.rowSort((a,b) => {\n\t\t\t\tlet ind;\n\t\t\t\tfor (let i=0, len=inds.length; i<len; i++) {\n\t\t\t\t\tind = this.getColumnIndex(inds[i]);\n\t\t\t\t\tif (a!=b) {\n\t\t\t\t\t\tif (typeof a[ind] == \"string\" && typeof b[ind] == \"string\") {\n\t\t\t\t\t\t\treturn a[ind].localeCompare(b[ind]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn a[ind]-b[ind];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, config)\n\t\t}\n\n\t\tif (typeof inds == \"function\") {\n\t\t\tthis._rows.sort((a,b) => {\n\t\t\t\tif (config && \"asObject\" in config && config.asObject) {\n\t\t\t\t\tlet c = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\tc[k] = a[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\tlet d = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\td[k] = b[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\treturn inds.apply(this, [c,d]);\n\t\t\t\t} else {\n\t\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (config && \"reverse\" in config && config.reverse) {\n\t\t\t\tthis._rows.reverse(); // in place\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified columns\n\t * @returns {Table}\n\t */\n\tcolumnSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i);\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\t\t\n\t\tif (Array.isArray(inds)) {\n\t\t\t\n\t\t\t// convert to column names\n\t\t\tlet headers = inds.map(ind => this.header(ind));\n\t\t\t\n\t\t\t// make sure we have all columns\n\t\t\tObject.keys(this._headers).forEach(h => {\n\t\t\t\tif (!headers.includes(h)) {headers.push(h)}\n\t\t\t});\n\t\t\t\n\t\t\t// sort names alphabetically\n\t\t\theaders.sort((a,b) => a.localeCompare(b))\n\t\t\t\n\t\t\t// reorder by columns\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t\t\n\t\t}\n\t\t\n\t\tif (typeof inds == \"function\") {\n\t\t\tlet headers = Object.keys(this._headers);\n\t\t\tif (config && \"asObject\" in headers && headers.asObject) {\n\t\t\t\theaders = headers.map((h,i) => {\n\t\t\t\t\treturn {header: h, data: this._rows.map((r,j) => this.cell(i,j))}\n\t\t\t\t})\n\t\t\t}\n\t\t\theaders.sort((a,b) => {\n\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t})\n\t\t\theaders = headers.map(h => typeof h == \"object\" ? h.header : h); // convert back to string\n\t\t\t\n\t\t\t// make sure we have all keys\n\t\t\tObject.keys(this._headers).forEach(k => {\n\t\t\t\tif (headers.indexOf(k)==-1) {headers.push(k)}\n\t\t\t})\n\t\t\t\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t}\n\t}\n\t\n\t/**\n\t * Get a CSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoCsv(config) {\n\t\tconst cell = function(c) {\n\t\t\tlet quote = /\"/g;\n\t\t\treturn typeof c == \"string\" && (c.indexOf(\",\")>-1 || c.indexOf('\"')>-1) ? '\"'+c.replace(quote,'\\\"')+'\"' : c;\n\t\t}\n\t\treturn (config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).map(h => cell(h)).join(\",\") + \"\\n\") +\n\t\t\tthis._rows.map(row => row.map(c => cell(c)).join(\",\")).join(\"\\n\")\n\t}\n\t\n\t/**\n\t * Get a TSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoTsv(config) {\n\t\treturn config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).join(\"\\t\") + \"\\n\" +\n\t\t\tthis._rows.map(row => row.join(\"\\t\")).join(\"\\n\");\n\t}\n\t\n\t/**\n\t * Set the target's contents to an HTML representation of the Table\n\t * @param {(function|string|object)} target\n\t * @param {object} [config]\n\t * @returns {Table}\n\t */\n\thtml(target, config) {\n\t\tlet html = this.toString(config);\n\t\tif (typeof target == \"function\") {\n\t\t\ttarget(html)\n\t\t} else {\n\t\t\tif (typeof target == \"string\") {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t\tif (!target) {\n\t\t\t\t\tthrow \"Unable to find specified target: \"+target;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof target == \"object\" && \"innerHTML\" in target) {\n\t\t\t\ttarget.innerHTML = html;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get an HTML representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoString(config={}) {\n\t\treturn \"<table class='voyantTable'>\" +\n\t\t\t((config && \"caption\" in config && typeof config.caption == \"string\") ?\n\t\t\t\t\t\"<caption>\"+config.caption+\"</caption>\" : \"\") +\n\t\t\t((config && \"noHeaders\" in config && config.noHeaders) ? \"\" : (\"<thead><tr>\"+this.headers(true).map(c => \"<th>\"+c+\"</th>\").join(\"\")+\"</tr></thead>\"))+\n\t\t\t\"<tbody>\"+\n\t\t\tthis._rows.map(row => \"<tr>\"+row.map(c => \"<td>\"+(typeof c === \"number\" ? c.toLocaleString() : c)+\"</td>\").join(\"\")+\"</tr>\").join(\"\") +\n\t\t\t\"</tbody></table>\";\n\t}\n\t\n\t/**\n\t * Show a chart representing the Table\n\t * @param {(string|element)} [target]\n\t * @param {HighchartsConfig} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tchart(target = undefined, config = {}) {\n\t\tif (typeof target === 'object') {\n\t\t\tconfig = target;\n\t\t\ttarget = undefined;\n\t\t}\n\t\t\n\t\tif (target === undefined) {\n\t\t\tif (typeof Spyral !== 'undefined' && Spyral.Notebook) {\n\t\t\t\ttarget = Spyral.Notebook.getTarget();\n\t\t\t} else {\n\t\t\t\ttarget = document.createElement(\"div\");\n\t\t\t\tdocument.body.appendChild(target);\n\t\t\t}\n\t\t}\n\n\t\tconfig.chart = config.chart || {};\n\t\t\n\t\tlet columnsCount = this.columns();\n\t\tlet rowsCount = this.rows();\n\t\tlet headers = this.headers(config.columns ? config.columns : true);\n\t\tlet isHeadersCategories = headers.every(h => isNaN(h));\n\n\t\tif (isHeadersCategories) {\n\t\t\tChart.setDefaultChartType(config, \"column\");\n\t\t}\n\n\t\t// set categories if not set\n\t\tconfig.xAxis = config.xAxis || {};\n\t\tconfig.xAxis.categories = config.xAxis.categories || headers;\n\t\t\n\t\t// start filling in series\n\t\tconfig.series = config.series || [];\n\t\t\n\t\t// one row, so let's take series from rows\n\t\tif (rowsCount === 1) {\n\t\t\tconfig.dataFrom = config.dataFrom || \"rows\";\n\t\t} else if (columnsCount === 1) {\n\t\t\tconfig.dataFrom = config.dataFrom || \"columns\";\n\t\t}\n\n\t\tif (\"dataFrom\" in config) {\n\t\t\tif (config.dataFrom === \"rows\") {\n\t\t\t\tconfig.data = {rows:[]}\n\t\t\t\tconfig.data.rows.push(headers)\n\t\t\t\tconfig.data.rows = config.data.rows.concat(this.rows(true))\n\t\t\t} else if (config.dataFrom === \"columns\") {\n\t\t\t\tconfig.data = {columns:[]}\n\t\t\t\tconfig.data.columns = config.data.columns.concat(this.columns(true))\n\t\t\t\tif (config.data.columns.length === headers.length) {\n\t\t\t\t\theaders.forEach((h, i) => {\n\t\t\t\t\t\tconfig.data.columns[i].splice(0, 0, h)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\"seriesFrom\" in config) {\n\t\t\tif (config.seriesFrom === \"rows\") {\n\t\t\t\tthis.rows(config.rows ? config.rows : true).forEach((row, i) => {\n\t\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\t\tconfig.series[i].data = headers.map(h => this.cell(i, h));\n\t\t\t\t})\n\t\t\t} else if (config.seriesFrom === \"columns\") {\n\t\t\t\tthis.columns(config.columns ? config.columns : true).forEach((col, i) => {\n\t\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\t\tconfig.series[i].data = [];\n\t\t\t\t\tfor (let r = 0; r < rowsCount; r++) {\n\t\t\t\t\t\tconfig.series[i].data.push(this.cell(r, i));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete config.dataFrom;\n\t\tdelete config.seriesFrom;\n\n\t\treturn Chart.create(target, config);\n\t}\n\n\t/**\n\t * Create a new Table\n\t * @param {(object|array|string|number)} data\n\t * @param {TableConfig} config\n\t * @returns {Table}\n\t */\n\tstatic create(data, config, ...other) {\n\t\treturn new Table(data, config, ...other);\n\t}\n\t\n\t/**\n\t * Fetch a Table from a source\n\t * @param {string|Request} input\n\t * @param {object} api\n\t * @param {object} config\n\t * @returns {Promise}\n\t */\n\tstatic fetch(input, api, config) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\twindow.fetch(input, api).then(response => {\n\t\t\t\tif (!response.ok) {throw new Error(response.status + \" \" + response.statusText);}\n\t\t\t\tresponse.text().then(text => {\n\t\t\t\t\tresolve(Table.create(text, config || api))\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Get the count of each unique value in the data\n\t * @param {array} data\n\t * @returns {object}\n\t */\n\tstatic counts(data) {\n\t\tlet vals = {};\n\t\tdata.forEach(v => v in vals ? vals[v]++ : vals[v]=1);\n\t\treturn vals;\n\t}\n\t\n\t/**\n\t * Compare two values\n\t * @param {(number|string)} a\n\t * @param {(number|string)} b\n\t * @returns {number}\n\t */\n\tstatic cmp(a, b) {\n\t\treturn typeof a == \"string\" && typeof b == \"string\" ? a.localeCompare(b) : a-b;\n\t}\n\n\t/**\n\t * Get the sum of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic sum(data) {\n\t\treturn data.reduce((a,b) => a+b, 0);\n\t}\n\t\n\t/**\n\t * Get the mean of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic mean(data) {\n\t\treturn Table.sum(data) / data.length;\n\t}\n\t\n\t/**\n\t * Get rolling mean for the provided values\n\t * @param {array} data\n\t * @param {number} neighbors\n\t * @returns {array}\n\t */\n\tstatic rollingMean(data, neighbors) {\n\t\t// https://stackoverflow.com/questions/41386083/plot-rolling-moving-average-in-d3-js-v4/41388581#41387286\n\t\treturn data.map((val, idx, arr) => {\n\t\t\tlet start = Math.max(0, idx - neighbors), end = idx + neighbors\n\t\t\tlet subset = arr.slice(start, end + 1)\n\t\t\tlet sum = subset.reduce((a,b) => a + b)\n\t\t\treturn sum / subset.length\n\t\t});\n\t}\n\t\n\t/**\n\t * Get the variance for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic variance(data) {\n\t\tlet m = Table.mean(data);\n\t\treturn Table.mean(data.map(num => Math.pow(num-m, 2)));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic standardDeviation(data) {\n\t\treturn Math.sqrt(Table.variance(data));\n\t}\n\t\n\t/**\n\t * Get the z scores for the provided values\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zScores(data) {\n\t\tlet m = Table.mean(data);\n\t\tlet s = Table.standardDeviation(data);\n\t\treturn data.map(num => (num-m) / s);\n\t}\n\t\n\t/**\n\t * Perform a zip operation of the provided arrays {@link https://en.wikipedia.org/wiki/Convolution_(computer_science)}\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zip(...data) {\n\t\n\t\t// we have a single nested array, so let's recall with flattened arguments\n\t\tif (data.length==1 && Array.isArray(data) && data.every(d => Array.isArray(d))) {\n\t\t\treturn Table.zip.apply(null, ...data);\n\t\t}\n\t\t\n\t\t// allow arrays to be of different lengths\n\t\tlet len = Math.max.apply(null, data.map(d => d.length));\n\t\treturn new Array(len).fill().map((_,i) => data.map(d => d[i]));\n\t}\n}\n\n// this seems like a good balance between a built-in flexible parser and a heavier external parser\n// https://lowrey.me/parsing-a-csv-file-in-es6-javascript/\nconst regex = /(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*))\\s*(?:,|$)/g;\nfunction parseCsvLine(line) {\n\tlet arr = [];\n\tline.replace(regex, (m0, m1, m2, m3) => {\n\t\tif (m1 !== undefined) {\n\t\t\tarr.push(m1.replace(/\\\\'/g, \"'\"));\n\t\t} else if (m2 !== undefined) {\n\t\t\tarr.push(m2.replace(/\\\\\"/g, \"\\\"\"));\n\t\t} else if (m3 !== undefined) {\n\t\t\tarr.push(m3);\n\t\t}\n\t\treturn \"\";\n\t});\n\tif (/,\\s*$/.test(line)) {arr.push(\"\");}\n\treturn arr;\n\t\n}\n\nexport default Table\n","const CategoriesManager = {\n\n\t_categories: {},\n\t_features: {},\n\t_featureDefaults: {},\n\n\tgetCategories: function() {\n\t\treturn this._categories;\n\t},\n\n\tgetCategoryTerms: function(name) {\n\t\treturn this._categories[name];\n\t},\n\t\n\taddCategory: function(name) {\n\t\tif (this._categories[name] === undefined) {\n\t\t\tthis._categories[name] = [];\n\t\t}\n\t},\n\trenameCategory: function(oldName, newName) {\n\t\tvar terms = this.getCategoryTerms(oldName);\n\t\tthis.addTerms(newName, terms);\n\t\tfor (var feature in this._features) {\n\t\t\tvar value = this._features[feature][oldName];\n\t\t\tthis.setCategoryFeature(newName, feature, value);\n\t\t}\n\t\tthis.removeCategory(oldName);\n\t\t\n\t},\n\tremoveCategory: function(name) {\n\t\tdelete this._categories[name];\n\t\tfor (var feature in this._features) {\n\t\t\tdelete this._features[feature][name];\n\t\t}\n\t},\n\t\n\taddTerm: function(category, term) {\n\t\tthis.addTerms(category, [term]);\n\t},\n\taddTerms: function(category, terms) {\n\t\tif (!Array.isArray(terms)) {\n\t\t\tterms = [terms];\n\t\t}\n\t\tif (this._categories[category] === undefined) {\n\t\t\tthis.addCategory(category);\n\t\t}\n\t\tfor (var i = 0; i < terms.length; i++) {\n\t\t\tvar term = terms[i];\n\t\t\tif (this._categories[category].indexOf(term) === -1) {\n\t\t\t\tthis._categories[category].push(term);\n\t\t\t}\n\t\t}\n\t},\n\tremoveTerm: function(category, term) {\n\t\tthis.removeTerms(category, [term]);\n\t},\n\tremoveTerms: function(category, terms) {\n\t\tif (!Array.isArray(terms)) {\n\t\t\tterms = [terms];\n\t\t}\n\t\tif (this._categories[category] !== undefined) {\n\t\t\tfor (var i = 0; i < terms.length; i++) {\n\t\t\t\tvar term = terms[i];\n\t\t\t\tvar index = this._categories[category].indexOf(term);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis._categories[category].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetCategoryForTerm: function(term) {\n\t\tfor (var category in this._categories) {\n\t\t\tif (this._categories[category].indexOf(term) != -1) {\n\t\t\t\treturn category;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\tgetFeatureForTerm: function(feature, term) {\n\t\treturn this.getCategoryFeature(this.getCategoryForTerm(term), feature);\n\t},\n\t\n\tgetFeatures: function() {\n\t\treturn this._features;\n\t},\n\n\taddFeature: function(name, defaultValue) {\n\t\tif (this._features[name] === undefined) {\n\t\t\tthis._features[name] = {};\n\t\t}\n\t\tif (defaultValue !== undefined) {\n\t\t\tthis._featureDefaults[name] = defaultValue;\n\t\t}\n\t},\n\tremoveFeature: function(name) {\n\t\tdelete this._features[name];\n\t\tdelete this._featureDefaults[name];\n\t},\n\tsetCategoryFeature: function(categoryName, featureName, featureValue) {\n\t\tif (this._features[featureName] === undefined) {\n\t\t\tthis.addFeature(featureName);\n\t\t}\n\t\tthis._features[featureName][categoryName] = featureValue;\n\t},\n\tgetCategoryFeature: function(categoryName, featureName) {\n\t\tvar value = undefined;\n\t\tif (this._features[featureName] !== undefined) {\n\t\t\tvalue = this._features[featureName][categoryName];\n\t\t\tif (value === undefined) {\n\t\t\t\tvalue = this._featureDefaults[featureName];\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tvalue = value();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\t\n\tgetCategoryExportData: function() {\n\t\treturn {\n\t\t\tcategories: Object.assign({}, this._categories),\n\t\t\tfeatures: Object.assign({}, this._features)\n\t\t};\n\t},\n\n\tloadCategoryData: function(id) {\n\t\tif (Voyant !== undefined && Ext !== undefined) {\n\t\t\tvar dfd = new Ext.Deferred();\n\n\t\t\tExt.Ajax.request({\n\t\t\t\turl: Voyant.application.getTromboneUrl(),\n\t\t\t\tparams: {\n\t\t\t\t\ttool: 'resource.StoredCategories',\n\t\t\t\t\tretrieveResourceId: id,\n\t\t\t\t\tfailQuietly: false,\n\t\t\t\t\tcorpus: this.getCorpus() ? this.getCorpus().getId() : undefined\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tvar json = Ext.decode(response.responseText);\n\t\t\t\tvar id = json.storedCategories.id;\n\t\t\t\tvar value = json.storedCategories.resource;\n\t\t\t\tif (value.length === 0) {\n\t\t\t\t\tdfd.reject();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Ext.decode(value);\n\t\t\t\t\t\n\t\t\t\t\tthis._categories = value.categories;\n\t\t\t\t\tthis._features = value.features;\n\t\t\t\t\t\n\t\t\t\t\tdfd.resolve(value);\n\t\t\t\t}\n\t\t\t}, function() {\n\t\t\t\tthis.showError(\"Unable to load categories data: \"+id);\n\t\t\t\tdfd.reject();\n\t\t\t}, null, this);\n\t\t\t\n\t\t\treturn dfd.promise;\n\t\t}\n    },\n    \n    saveCategoryData: function(data) {\n\t\tif (Voyant !== undefined && Ext !== undefined) {\n\t\t\tdata = data || this.getCategoryExportData();\n\t\t\t\n\t\t\tvar dfd = new Ext.Deferred();\n\t\t\t\n\t\t\tvar dataString = Ext.encode(data);\n\t\t\tExt.Ajax.request({\n\t\t\t\turl: Voyant.application.getTromboneUrl(),\n\t\t\t\tparams: {\n\t\t\t\t\ttool: 'resource.StoredResource',\n\t\t\t\t\tstoreResource: dataString\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tvar json = Ext.util.JSON.decode(response.responseText);\n\t\t\t\tvar id = json.storedResource.id;\n\t\t\t\tdfd.resolve(id);\n\t\t\t}, function(response) {\n\t\t\t\tdfd.reject();\n\t\t\t});\n\t\t\t\n\t\t\treturn dfd.promise;\n\t\t}\n    }\n}\n\nexport default CategoriesManager\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Notebook {\n\t/**\n\t * Returns the previous block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getPreviousBlock() {\n\t\treturn Spyral.Notebook.getBlock(-1);\n\t}\n\t/**\n\t * Returns the next block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getNextBlock() {\n\t\treturn Spyral.Notebook.getBlock(1);\n\t}\n\t/**\n\t * Returns the current block.\n\t * @static\n\t * @params {number} [offset] If specified, returns the block whose position is offset from the current block\n\t * @returns {string}\n\t */\n\tstatic getBlock() {\n\t\tif (Voyant && Voyant.notebook) {\n\t\t\treturn Voyant.notebook.Notebook.currentNotebook.getBlock.apply(Voyant.notebook.Notebook.currentNotebook, arguments)\n\t\t}\n\t}\n\t/**\n\t * \n\t * @param {*} contents \n\t * @param {*} config \n\t */\n\tstatic show(contents, config) {\n\t\tvar contents = Spyral.Util.toString(contents, config);\n\t\tif (contents instanceof Promise) {\n\t\t\tcontents.then(c => Voyant.notebook.util.Show.show(c))\n\t\t} else {\n\t\t\tVoyant.notebook.util.Show.show(contents);\n\t\t}\n\t}\n\t/**\n\t * Returns the target element\n\t * @returns {element}\n\t */\n\tstatic getTarget() {\n\t\tif (Voyant && Voyant.notebook && Voyant.notebook.Notebook.currentBlock) {\n\t\t\treturn Voyant.notebook.Notebook.currentBlock.results.getEl().dom\n\t\t} else {\n\t\t\tconst target = document.createElement(\"div\");\n\t\t\tdocument.body.appendChild(target);\n\t\t\treturn target;\n\t\t}\n\t}\n\n\t/**\n\t * Fetch and return the content of a notebook or a particular cell in a notebook\n\t * @param {string} url\n\t */\n\tstatic async import(url) {\n\t\tconst isFullNotebook = url.indexOf('#') === -1;\n\t\tconst isAbsoluteUrl = url.indexOf('http') === 0;\n\n\t\tlet notebookId = '';\n\t\tlet cellId = undefined;\n\t\tif (isAbsoluteUrl) {\n\t\t\tconst urlParts = url.match(/\\/[\\w-]+/g);\n\t\t\tif (urlParts !== null) {\n\t\t\t\tnotebookId = urlParts[urlParts.length-1].replace('/', '');\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isFullNotebook) {\n\t\t\t\tcellId = url.split('#')[1];\n\t\t\t}\n\t\t} else {\n\t\t\tif (isFullNotebook) {\n\t\t\t\tnotebookId = url;\n\t\t\t} else {\n\t\t\t\t[notebookId, cellId] = url.split('#');\n\t\t\t}\n\t\t}\n\n\t\tconst json = await Spyral.Load.trombone({\n\t\t\ttool: 'notebook.NotebookManager',\n\t\t\taction: 'load',\n\t\t\tid: notebookId,\n\t\t\tnoCache: 1\n\t\t})\n\n\t\tconst notebook = json.notebook.data;\n\t\tconst parser = new DOMParser();\n\t\tconst htmlDoc = parser.parseFromString(notebook, 'text/html');\n\t\t\n\t\tlet code = ''\n\t\tlet error = undefined\n\t\tif (cellId !== undefined) {\n\t\t\tconst cell = htmlDoc.querySelector('#'+cellId);\n\t\t\tif (cell !== null && cell.classList.contains('notebookcodeeditorwrapper')) {\n\t\t\t\tcode = cell.querySelector('pre').textContent\n\t\t\t} else {\n\t\t\t\terror = 'No code found for cell: '+cellId\n\t\t\t}\n\t\t} else {\n\t\t\thtmlDoc.querySelectorAll('section.notebook-editor-wrapper').forEach((cell, i) => {\n\t\t\t\tif (cell.classList.contains('notebookcodeeditorwrapper')) {\n\t\t\t\t\tcode += cell.querySelector('pre').textContent + \"\\n\"\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t\n\t\tif (Ext) {\n\t\t\tif (error === undefined) {\n\t\t\t\tExt.toast({ // quick tip that auto-destructs\n\t\t\t\t     html: 'Imported code from: '+url,\n\t\t\t\t     width: 200,\n\t\t\t\t     align: 'b'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tExt.Msg.show({\n\t\t\t\t\ttitle: 'Error importing code from: '+url,\n\t\t\t\t\tmessage: error,\n\t\t\t\t\ticon: Ext.Msg.ERROR,\n\t\t\t\t\tbuttons: Ext.Msg.OK\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tlet result = undefined\n\t\ttry {\n\t\t\tresult = eval.call(window, code);\n\t\t} catch(e) {\n\t\t\treturn e\n\t\t}\n\t\tif (result !== undefined) {\n\t\t\tconsole.log(result)\n\t\t}\n\t\treturn result; // could be a promise?\n\t}\n}\n\nexport { Notebook }\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Util {\n\t/**\n\t * Generates a random ID of the specified length.\n\t * @static\n\t * @param {number} len The length of the ID to generate?\n\t * @returns {string}\n\t */\n\tstatic id(len) {\n\t\tlen = len || 8;\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n\t\treturn Math.random().toString(36).substring(2, 2+len) + Math.random().toString(36).substring(2, 2+len)\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} contents \n\t * @param {*} config \n\t * @returns {string}\n\t */\n\tstatic toString(contents, config) {\n\t\tif (contents.constructor === Array || contents.constructor===Object) {\n\t\t\tcontents = JSON.stringify(contents);\n\t\t\tif (contents.length>500) {\n\t\t\t\tcontents = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn contents.toString();\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} before \n\t * @param {*} more \n\t * @param {*} after \n\t */\n\tstatic more(before, more, after) {\n\t\treturn before + '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\n\t}\n}\n\nexport { Util }\n","/**\n * A class for storing Notebook metadata\n * @memberof Spyral\n */\nclass Metadata {\n\t/**\n\t * The Metadata config object\n\t * @typedef {object} MetadataConfig\n\t * @property {string} title The title of the Corpus\n\t * @property {string} author The author of the Corpus\n\t * @property {string} description The description of the Corpus\n\t * @property {array} keywords The keywords for the Corpus\n\t * @property {string} created When the Corpus was created\n\t * @property {string} language The language of the Corpus\n\t * @property {string} license The license for the Corpus\n\t */\n\n\t/** \n\t * The metadata constructor.\n\t * @constructor\n\t * @param {MetadataConfig} config The metadata config object\n\t */\n\tconstructor(config) {\n\t\t['title', 'author', 'description', 'keywords', 'modified', 'created', 'language', 'license'].forEach(key => {\n\t\t\tthis[key] = undefined;\n\t\t})\n\t\tthis.version = \"0.1\"; // may be changed by config\n\t\tif (config instanceof HTMLDocument) {\n\t\t\tconfig.querySelectorAll(\"meta\").forEach(function(meta) {\n\t\t\t\tvar name =  meta.getAttribute(\"name\");\n\t\t\t\tif (name && this.hasOwnProperty(name)) {\n\t\t\t\t\tvar content = meta.getAttribute(\"content\");\n\t\t\t\t\tif (content) {\n\t\t\t\t\t\tthis[name] = content;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthis.set(config);\n\t\t}\n\t\tif (!this.created) {this.setDateNow(\"created\")}\n\t}\n\n\t/**\n\t * Set metadata properties.\n\t * @param {object} config A config object\n\t */\n\tset(config) {\n\t\tfor (var key in config) {\n\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\tthis[key] = config[key];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the specified field to the current date and time.\n\t * @param {string} field \n\t */\n\tsetDateNow(field) {\n\t\tthis[field] = new Date().toISOString();\n\t}\n\n\t/**\n\t * Gets the specified field as a short date.\n\t * @param {string} field\n\t * @returns {string|undefined}\n\t */\n\tshortDate(field) {\n\t\treturn this[field] ? (new Date(Date.parse(this[field])).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })) : undefined;\n\t}\n\n\t/**\n\t * Gets the fields as a set of HTML meta tags.\n\t * @returns {string}\n\t */\n\tgetHeaders() {\n\t\tvar quotes = /\"/g, newlines = /(\\r\\n|\\r|\\n)/g, tags = /<\\/?\\w+.*?>/g,\n\t\t\theaders = \"<title>\"+(this.title || \"\").replace(tags,\"\")+\"</title>\\n\"\n\t\tfor (var key in this) {\n\t\t\tif (this[key]) {\n\t\t\t\theaders+='<meta name=\"'+key+'\" content=\"'+this[key].replace(quotes, \"&quot;\").replace(newlines, \" \")+'\">';\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n}\n\nexport { Metadata }\n","import {Corpus, Table, Load, Chart, CategoriesManager} from 'voyant';\n\nimport {Notebook} from './notebook';\nimport {Util} from './util';\nimport {Metadata} from './metadata';\n\n/**\n * @namespace Spyral\n */\nconst Spyral = {\n\tNotebook,\n\tUtil,\n\tMetadata,\n\tCorpus,\n\tTable,\n\tLoad,\n\tChart,\n\tCategoriesManager\n};\n\nexport default Spyral;\n"],"names":["Load","baseUrl","config","params","url","URL","trombone","all","key","undefined","searchParams","Object","keys","map","encodeURIComponent","join","opt","length","set","method","headers","body","fetch","toString","then","response","ok","json","text","Voyant","util","DetailedError","msg","error","split","shift","details","showMsg","alert","window","console","Error","urlToFetch","err","DOMParser","parseFromString","load","isDocumentsMode","mode","Corpus","id","corpusid","me","Promise","resolve","tool","corpus","data","documentsMetadata","documents","metadata","alias","documentsCount","toLocaleString","lexicalTokensCount","lexicalTypesCount","doc","title","texts","documentTerms","terms","corpusTerms","documentTokens","tokens","limit","noOthers","t","term","query","warn","documentContexts","contexts","corpusCollocates","collocates","documentNgrams","ngrams","corpusNgrams","termCorrelations","correlations","_tool","reject","isTool","obj","test","isConfig","lastArg","arguments","val","defaultAttributes","width","height","style","out","i","forTool","attr","voyantUrl","append","assign","forEach","Array","isArray","summary","setBaseUrl","api","phrases","promise","input","name","args","apply","Chart","target","Highcharts","chart","setSeriesData","bar","line","scatter","plotOptions","networkgraph","layoutAlgorithm","enableSimulation","subtitle","credits","xAxis","yAxis","type","series","subArray","setDefaultChartType","Table","other","_rows","_headers","_rowKeyColumnIndex","rows","concat","filter","v","from","every","a","indexOf","String","format","trim","values","parseCsvLine","isNaN","setHeaders","push","Number","hasHeaders","count","freqs","counts","item","addRow","rowSort","b","cmp","columnSort","cell","addRows","rowKeyColumn","columns","rowKeyColum","h","addColumn","row","setRow","ind","create","rowIndex","getRowIndex","d","setCell","column","hasColumn","columnIndex","getColumnIndex","value","overwrite","rowInd","colInd","updateCell","findIndex","r","arr","header","col","colIndex","inds","asObj","zip","len","k","fill","_","fn","Math","min","max","sum","mean","neighbors","means","rollingMean","setColumn","variance","standardDeviation","zScores","localeCompare","sort","asObject","c","reverse","includes","j","quote","replace","noHeaders","html","document","querySelector","innerHTML","caption","Spyral","Notebook","getTarget","createElement","appendChild","columnsCount","rowsCount","isHeadersCategories","categories","dataFrom","splice","seriesFrom","status","statusText","vals","reduce","idx","start","end","subset","slice","m","num","pow","sqrt","s","regex","m0","m1","m2","m3","CategoriesManager","_categories","_features","_featureDefaults","getCategories","getCategoryTerms","addCategory","renameCategory","oldName","newName","addTerms","feature","setCategoryFeature","removeCategory","addTerm","category","removeTerm","removeTerms","index","getCategoryForTerm","getFeatureForTerm","getCategoryFeature","getFeatures","addFeature","defaultValue","removeFeature","categoryName","featureName","featureValue","getCategoryExportData","features","loadCategoryData","Ext","dfd","Deferred","Ajax","request","application","getTromboneUrl","retrieveResourceId","failQuietly","getCorpus","getId","decode","responseText","storedCategories","resource","showError","saveCategoryData","dataString","encode","storeResource","JSON","storedResource","getBlock","notebook","currentNotebook","contents","Util","Show","show","currentBlock","results","getEl","dom","isFullNotebook","isAbsoluteUrl","notebookId","cellId","urlParts","match","action","noCache","parser","htmlDoc","code","classList","contains","textContent","querySelectorAll","toast","align","Msg","message","icon","ERROR","buttons","OK","result","eval","call","log","random","substring","constructor","stringify","before","more","after","Metadata","version","HTMLDocument","meta","getAttribute","hasOwnProperty","content","created","setDateNow","field","Date","toISOString","parse","toLocaleDateString","year","month","day","quotes","newlines","tags"],"mappings":"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"}