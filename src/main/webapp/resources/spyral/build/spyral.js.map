{"version":3,"file":"spyral.js","sources":["../../../../../../../voyantjs/src/load.js","../../../../../../../voyantjs/src/corpus.js","../../../../../../../voyantjs/src/chart.js","../../../../../../../voyantjs/src/table.js","../src/notebook.js","../src/util.js","../src/metadata.js","../src/index.js"],"sourcesContent":["/**\n * Class embodying Load functionality.\n * @memberof Spyral\n * @class\n */\nclass Load {\n\tstatic baseUrl;\n\tstatic setBaseUrl(baseUrl) {\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\tstatic trombone(config = {}, params) {\n\t\tlet url = new URL(config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\tlet all = { ...config, ...params };\n\t\tfor (var key in all) {\n\t\t\tif (all[key] === undefined) { delete all[key] }\n\t\t}\n\t\tlet searchParams = Object.keys(all).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(all[key])).join(\"&\")\n\t\tlet opt = {};\n\t\tif (searchParams.length < 800 || (\"method\" in all && all[\"method\"] == \"GET\")) {\n\t\t\tfor (var key in all) { url.searchParams.set(key, all[key]); }\n\t\t} else {\n\t\t\topt = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n\t\t\t\tbody: searchParams\n\t\t\t}\n\t\t}\n\t\treturn fetch(url, opt).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json()\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\tmsg: \"\",\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\n\n\t}\n\n\tstatic load(urlToFetch, config) {\n\t\tlet url = new URL(config && config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\turl.searchParams.set(\"fetchData\", urlToFetch);\n\t\treturn fetch(url).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(err => { throw err })\n\t}\n\n\tstatic html(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/html'));\n\t}\n\tstatic xml(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/xml'));\n\t}\n\tstatic json(url) {\n\t\treturn this.load(url).then(response => response.json());\n\t}\n\tstatic text(url) {\n\t\treturn this.load(url).then(response => response.text());\n\t}\n}\n\nexport default Load\n","import Load from './load';\n\nfunction isDocumentsMode(config) {\n\treturn config && ((config.mode && config.mode === \"documents\") || config.documents);\n}\n\n/**\n * Class representing a Corpus.\n * @memberof Spyral\n * @class\n */\nclass Corpus {\n\t/**\n\t * Create a new Corpus using the specified Corpus ID\n\t * @constructor\n\t * @param {string} id The Corpus ID\n\t */\n\tconstructor(id) {\n\t\tthis.corpusid = id;\n\t}\n\n\tstatic Load = Load;\n\n\tstatic setBaseUrl(baseUrl) {\n\t\tLoad.setBaseUrl(baseUrl);\n\t}\n\n\t/**\n\t * Get the ID\n\t * @return {string} The ID\n\t */\n\tid() {\n\t\tlet me = this\n\t\treturn new Promise(resolve => resolve(me.corpusid));\n\t}\n\n\t/**\n\t * Create a Corpus and return the ID\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic id(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.id(api || config));\n\t}\n\n\t/**\n\t * Load the metadata\n\t * @param {*} config \n\t * @param {*} params \n\t */\n\tmetadata(config, params) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentsMetadata\" : \"corpus.CorpusMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => isDocumentsMode(config) ? data.documentsMetadata.documents : data.corpus.metadata)\n\t}\n\n\t/**\n\t * Create a Corpus and return the metadata\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic metadata(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.metadata(api || config));\n\t}\n\t\n\tsummary(config) {\n\t\treturn this.metadata().then(data => {\n\t\t\t// TODO: make this a template\n\t\t\treturn `This corpus (${data.alias ? data.alias : data.id}) has ${data.documentsCount.toLocaleString()} documents with ${data.lexicalTokensCount.toLocaleString()} total words and ${data.lexicalTypesCount.toLocaleString()} unique word forms.`\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the summary\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic summary(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.summary(api || config));\n\t}\n\t\n\ttitles(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentsMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => data.documentsMetadata.documents.map(doc => doc.title))\n\t}\n\n\t/**\n\t * Create a Corpus and return the titles\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic titles(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.titles(api || config));\n\t}\n\t\n\t/**\n\t * Get the text\n\t * @param {*} config \n\t */\n\ttext(config) {\n\t\treturn this.texts(config).then(data => data.join(\"\\n\"))\n\t}\n\n\t/**\n\t * Create a Corpus and return the text\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic text(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.text(api || config));\t\n\t}\n\t\n\ttexts(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusTexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.texts.texts)\n\t}\n\n\t/**\n\t * Create a Corpus and return the texts\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic texts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.texts(api || config));\t\n\t}\n\t\n\tterms(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTerms\" : \"corpus.CorpusTerms\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentTerms.terms : data.corpusTerms.terms)\n\t}\n\n\t/**\n\t * Create a Corpus and return the terms\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic terms(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.terms(api || config));\n\t}\n\t\n\ttokens(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens)\n\t}\n\n\t/**\n\t * Create a Corpus and return the tokens\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tokens(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tokens(api || config));\n\t}\n\n\twords(config = {}) {\n\t\t// by default DocumentTokens limits to 50 which probably isn't expected\n\t\tif (!(\"limit\" in config)) {config.limit=0;}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tnoOthers: true,\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens)\n\t}\n\n\t/**\n\t * Create a Corpus and return the words\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic words(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.words(api || config));\n\t}\n\t\n\tcontexts(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for contexts request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentContexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentContexts.contexts)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the contexts\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic contexts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.contexts(api || config));\n\t}\n\t\n\tcollocates(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for collocates request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusCollocates\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.corpusCollocates.collocates)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the collocates\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic collocates(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.collocates(api || config));\n\t}\n\n\tphrases(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentNgrams\" : \"corpus.CorpusNgrams\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentNgrams.ngrams : data.corpusNgrams.ngrams)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the phrases\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic phrases(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.phrases(api || config));\n\t}\n\t\n\tcorrelations(config) {\n\t\tif ((!config || !config.query) && console) {\n\t\t\tconsole.warn(\"No query provided for correlations request.\")\n\t\t\tif (!isDocumentsMode(config)) {\n\t\t\t\tthrow new Error(\"Unable to run correlations for a corpus without a query.\")\n\t\t\t}\n\t\t}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTermCorrelations\" : \"corpus.CorpusTermCorrelations\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.termCorrelations.correlations)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the correlations\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic correlations(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.correlations(api || config));\n\t}\n\t\n\ttool(tool, config = {}) {\n\t\tlet me = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tconfig = config || {};\n\t\t\t\n\t\t\t// determine if we're calling one tool or multiple\n\t\t\tlet tools = Array.isArray(tool) ? tool : [tool];\n\t\t\tif (typeof config === \"string\") {\n\t\t\t\ttools.push({forTool: config});\n\t\t\t\tconfig = {};\n\t\t\t} else if (\"forTool\" in config) {\n\t\t\t\ttools.push(config);\n\t\t\t\tconfig = {};\n\t\t\t}\n\t\t\tif (arguments.length>2) {\n\t\t\t\tfor (let i=2; i<arguments.length; i++) {\n\t\t\t\t\tif (typeof arguments[i]==\"string\") {\n\t\t\t\t\t\ttools.push({forTool: arguments[i]})\n\t\t\t\t\t} else if (typeof arguments[i] == \"object\") {\n\t\t\t\t\t\tif (\"forTool\" in arguments[i]) {\n\t\t\t\t\t\t\ttools.push(arguments[i]);\n\t\t\t\t\t\t\tconfig = {};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconfig = arguments[i]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet defaultAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tstyle: \"width: 400px; height: 400px\",\n\t\t\t\tfloat: \"right\"\n\t\t\t}\n\t\t\t\n\t\t\tlet out = \"\";\n\t\t\ttools.forEach(t => {\n\t\t\t\tt = typeof t === \"string\" ? {forTool: t} : t;\n\t\t\t\tout += \"<iframe \";\n\t\t\t\t\n\t\t\t\t// add attributes\n\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\tvar val = (attr in t ? t[attr] : undefined) || (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// construct src URL\n\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl) + \"tool/\"+t.forTool+\"/\");\n\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\tlet all = Object.assign(t,config);\n\t\t\t\tObject.keys(all).forEach(key => {\n\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\turl.searchParams.append(key, all[key])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// add url\n\t\t\t\tout+=' src=\"'+url+'\"></iframe>'\n\t\t\t})\n\t\t\t\n\t\t\tresolve(out);\n\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the tool\n\t * @param {*} tool \n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tool(tool, config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tool(tool, config, api));\n\t}\n\n\ttoString() {\n\t\treturn this.summary()\n\t}\n\t\t\n\t/**\n\t * Create a new Corpus using the provided config\n\t * @param {object} config \n\t */\n\tstatic create(config) {\n\t\treturn Corpus.load(config);\n\t}\n\n\t/**\n\t * Load a Corpus using the provided config\n\t * @param {object} config The Corpus config\n\t */\n\tstatic load(config) {\n\t\tconst promise = new Promise(function(resolve, reject) {\n\t\t\tif (config instanceof Corpus) {\n\t\t\t\tresolve(config);\n\t\t\t} else if (typeof config === \"string\" && config.length>0 && /\\W/.test(config)===false) {\n\t\t\t\tresolve(new Corpus(config)); \n\t\t\t} else if (typeof config === \"object\" && config.corpus) {\n\t\t\t\tresolve(new Corpus(config.corpus))\n\t\t\t} else {\n\t\t\t\tif (typeof config === \"string\") {config = {input: config}}\n\t\t\t\tif (config && config.input) {\n\t\t\t\t\tLoad.trombone(config, {tool: \"corpus.CorpusMetadata\"})\n\t\t\t\t\t.then(data => resolve(new Corpus(data.corpus.metadata.id)))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t[\"id\",\"metadata\",\"summary\",\"titles\",\"text\",\"texts\",\"terms\",\"tokens\",\"words\",\"contexts\",\"collocates\",\"phrases\",\"correlations\",\"tool\"].forEach(name => {\n\t\t\tpromise[name] = function() {\n\t\t\t\tvar args = arguments\n\t\t\t\treturn promise.then(corpus => {return corpus[name].apply(corpus, args)})\n\t\t\t}\n\t\t})\n\t\tpromise.assign = function(name) {\n\t\t\tthis.then(corpus => {window[name] = corpus; return corpus})\n\t\t}\n\n\t\treturn promise;\n\t}\n}\n\nexport default Corpus\n","import * as Highcharts from 'highcharts';\n\nexport function chart(target, config) {\n\t\n\t// convert title and suppress if not provided\n\tif (\"title\" in config) {\n\t\tif (typeof config.title == \"string\") {\n\t\t\tconfig.title = {text: config.title};\n\t\t}\n\t} else {\n\t\tconfig.title = false;\n\t}\n\t\n\t// convert subtitle and convert if not provided\n\tif (\"subtitle\" in config) {\n\t\tif (typeof config.subtitle == \"string\") {\n\t\t\tconfig.subtitle = {text: config.subtitle};\n\t\t}\n\t} else {\n\t\tconfig.subtitle = false;\n\t}\n\t\n\t// convert credits\n\tif (!(\"credits\" in config)) {\n\t\tconfig.credits = false;\n\t}\n\t\n\t// suppress xAxis title unless provided\n\tif (!(\"xAxis\" in config)) {config.xAxis = {}}\n\tif (!(\"title\" in config.xAxis)) {\n\t\t//config.xAxis.title = false;\n\t}\n\n\t// suppress xAxis title unless provided\n\tif (!(\"yAxis\" in config)) {config.yAxis = {}}\n\tif (!(\"title\" in config.yAxis)) {\n\t\tconfig.yAxis.title = false;\n\t}\n\t\n\treturn Highcharts.chart(target, config);\n}\n\nexport function setDefaultChartType(config, type) {\n\tif (\"type\" in config) {\n\t\tconfig.chart.type = config.type;\n\t\tdelete config.type;\n\t\treturn\n\t}\n\t// TODO: check plot options and series?\n\tif (\"chart\" in config && \"type\" in config.chart) {return} // already set\n\tconfig.chart.type = type;\n\treturn;\n}\n\n\nclass Chart {\n    constructor(target, data) {\n\t    this.target = target;\n\t    this.data = data;\n    }\n\tchart(target, config) {\n\t\tHighcharts.chart(target, config);\n\t}\n    bar(config) {\n    }\n    line(config) {\n    }\n    scatter(config) {\n    }\n}","import * as Chart from \"./chart.js\";\n\n/**\n * Class representing a Table.\n * @memberof Spyral\n * @class\n */\nclass Table {\n\n\tconstructor(data, config, ...other) {\n\n\t\tthis._rows = [];\n\t\tthis._headers = {};\n\t\tthis._rowKeyColumnIndex = 0;\n\t\t\n\t\t// we have a configuration object followed by values: create({headers: []}, 1,2,3) …\n\t\tif (data && typeof data == \"object\" && (typeof config == \"string\" || typeof config == \"number\" || Array.isArray(config))) {\n\t\t\tdata.rows = [config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// we have a simple variable set of arguments: create(1,2,3) …\n\t\tif (arguments.length>0 && Array.from(arguments).every(a => a!==undefined && !Array.isArray(a) && typeof a != \"object\")) {\n\t\t\tdata = [data,config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// could be CSV or TSV\n\t\tif (Array.isArray(data) && data.length==1 && typeof data[0] == \"string\"  && (data[0].indexOf(\",\")>-1 || data[0].indexOf(\"\\t\")>-1)) {\n\t\t\tdata = data[0];\n\t\t}\n\n\t\t// first check if we have a string that might be delimited data\n\t\tif (data && (typeof data == \"string\" || typeof data ==\"number\")) {\n\t\t\tif (typeof data == \"number\") {data = String(data)} // convert to string for split\n\t\t\tlet rows = [];\n\t\t\tlet format = config && \"format\" in config ? config.format : undefined;\n\t\t\tdata.split(/(\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])+/g).forEach((line,i) => {\n\t\t\t\tif (line.trim().length>0) {\n\t\t\t\t\tlet values;\n\t\t\t\t\tif ((format && format==\"tsv\") || line.indexOf(\"\\t\")>-1) {\n\t\t\t\t\t\tvalues = line.split(/\\t/);\n\t\t\t\t\t} else if ((format && format==\"csv\") || line.indexOf(\",\")>-1) {\n\t\t\t\t\t\tvalues = parseCsvLine(line)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues = [line]\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// if we can't find any config information for headers then we try to guess\n\t\t\t\t\t// if the first line doesn't have any numbers - this heuristic may be questionable\n\t\t\t\t\tif (i==0 && values.every(v => isNaN(v)) && \n\t\t\t\t\t\t((typeof config != \"object\") || (typeof config == \"object\" && !(\"hasHeaders\" in config) && !(\"headers\" in config)))) {\n\t\t\t\t\t\tthis.setHeaders(values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(values.map(v => isNaN(v) ? v : Number(v)))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tdata = rows;\n\t\t}\n\t\t\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (config) {\n\t\t\t\tif (Array.isArray(config)) {\n\t\t\t\t\tthis.setHeaders(config);\n\t\t\t\t} else if (typeof config == \"object\") {\n\t\t\t\t\tif (\"headers\" in config) {\n\t\t\t\t\t\tthis.setHeaders(config.headers)\n\t\t\t\t\t} else if (\"hasHeaders\" in config && config.hasHeaders) {\n\t\t\t\t\t\tthis.setHeaders(data.shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (config && \"count\" in config && config.count) {\n\t\t\t\tlet freqs = Table.counts(data);\n\t\t\t\tif (config.count==\"vertical\" || (\"orientation\" in config && config.orientation==\"vertical\")) {\n\t\t\t\t\tfor (let item in freqs) {\n\t\t\t\t\t\tthis.addRow(item, freqs[item])\n\t\t\t\t\t}\n\t\t\t\t\tthis.rowSort((a,b) => Table.cmp(b[1],a[1]))\n\t\t\t\t} else {\n\t\t\t\t\tthis._headers = []; // reset and use the terms as headers\n\t\t\t\t\tthis.addRow(freqs)\n\t\t\t\t\tthis.columnSort((a,b) => Table.cmp(this.cell(0,b),this.cell(0,a)))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.addRows(data);\n\t\t\t}\n\t\t} else if (data && typeof data == \"object\") {\n\t\t\tif (\"headers\" in data && Array.isArray(data.headers)) {\n\t\t\t\tthis.setHeaders(data.headers);\n\t\t\t} else if (\"hasHeaders\" in data && \"rows\" in data) {\n\t\t\t\tthis.setHeaders(data.rows.shift())\n\t\t\t}\n\t\t\tif (\"rows\" in data && Array.isArray(data.rows)) {\n\t\t\t\tthis.addRows(data.rows)\n\t\t\t}\n\t\t\tif (\"rowKeyColumn\" in data) {\n\t\t\t\tif (typeof data.rowKeyColumn == \"number\") {\n\t\t\t\t\tif (data.rowKeyColumn < this.columns()) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = data.rowKeyColumn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"The rowKeyColumn value is higher than the number headers designated: \"+data.rowKeyColum);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof data.rowKeyColumn == \"string\") {\n\t\t\t\t\tif (data.rowKeyColumn in this._headers) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = this._headers[data.rowKeyColumn];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unable to find column designated by rowKeyColumn: \"+data.rowKeyColumn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsetHeaders(data) {\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach(h => this.addColumn(h), this);\n\t\t} else if (typeof data == \"object\") {\n\t\t\tif (this.columns()==0 || Object.keys(data).length==this.columns()) {\n\t\t\t\tthis._headers = data;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The number of columns don't match: \");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized argument for headers, it should be an array or an object.\"+data)\n\t\t}\n\t\treturn this;\n\t}\n\t\n\taddRows(data) {\n\t\tdata.forEach(row => this.addRow(row), this);\n\t\treturn this;\n\t}\n\t\n\taddRow(data, ...other) {\n\t\t\n\t\t// we have multiple arguments, so call again as an array\n\t\tif (other.length>0) {\n\t\t\treturn this.addRow([data].concat(other))\n\t\t}\n\n\t\tthis.setRow(this.rows(), data, true);\n\t\treturn this;\n\t}\n\t\n\tsetRow(ind, data, create) {\n\n\t\tlet rowIndex = this.getRowIndex(ind, create);\n\t\tif (rowIndex>=this.rows() && !create) {\n\t\t\tthrow new Error(\"Attempt to set row values for a row that does note exist: \"+ind+\". Maybe use addRow() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (data.length>this.columns()) {\n\t\t\t\tif (create) {\n\t\t\t\t\tfor (let i = this.columns(); i<data.length; i++) {\n\t\t\t\t\t\tthis.addColumn();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"The row that you've created contains more columns than the current table. Maybe use addColunm() first?\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.forEach((d,i) => this.setCell(rowIndex, i, d), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let column in data) {\n\t\t\t\tif (!this.hasColumn(column)) {\n\t\t\t\t}\n\t\t\t\tthis.setCell(rowIndex, column, data[column]);\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if (this.columns()<2 && create) { // hopefully some scalar value\n\t\t\tif (this.columns()==0) {\n\t\t\t\tthis.addColumn(); // create first column if it doesn't exist\n\t\t\t}\n\t\t\tthis.setCell(rowIndex,0,data);\n\t\t} else {\n\t\t\tthrow new Error(\"setRow() expects an array or an object, maybe setCell()?\")\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\t\n\tsetColumn(ind, data, create) {\n\n\t\tlet columnIndex = this.getColumnIndex(ind, create);\n\t\tif (columnIndex>=this.columns() && !create) {\n\t\t\tthrow new Error(\"Attempt to set column values for a column that does note exist: \"+ind+\". Maybe use addColumn() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach((d,i) => this.setCell(i, columnIndex, d, create), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let row in data) {\n\t\t\t\tthis.setCell(row, columnIndex, data[column], create);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// hope we have a scalar value to assign to the first row\n\t\telse {\n\t\t\tthis.setCell(0,columnIndex,data, create);\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\n\t\n\t\n\tupdateCell(row, column, value, overwrite) {\n\t\tlet rowIndex = this.getRowIndex(row, true);\n\t\tlet columnIndex = this.getColumnIndex(column, true);\n\t\tlet val = this.cell(rowIndex, columnIndex);\n\t\tthis._rows[rowIndex][columnIndex] = val && !overwrite ? val+value : value;\n\t\treturn this;\n\t}\n\t\n\tcell(rowInd, colInd) {\n\t\treturn this._rows[this.getRowIndex(rowInd)][this.getColumnIndex(colInd)];\n\t}\n\n\tsetCell(row, column, value) {\n\t\tthis.updateCell(row,column,value,true);\n\t\treturn this;\n\t}\n\t\t\n\tgetRowIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this._rows.length) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis._rows[ind] = Array(this.columns());\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested row does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tlet row = this._rows.findIndex(r => r[this._rowKeyColumnIndex] === ind, this);\n\t\t\tif (row>-1) {return row;}\n\t\t\telse if (create) {\n\t\t\t\tlet arr = Array(this.columns());\n\t\t\t\tarr[this._rowKeyColumnIndex] = ind;\n\t\t\t\tthis.addRow(arr);\n\t\t\t\treturn this.rows();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(\"Unable to find the row named \"+ind);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Please provide a valid row (number or named row)\");\n\t}\n\t\n\tgetColumnIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this.columns()) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn(ind)\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested column does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tif (ind in this._headers) {\n\t\t\t\treturn this._headers[ind];\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn({header: ind});\n\t\t\t\treturn this._headers[ind];\n\t\t\t}\n\t\t\tthrow new Error(\"Unable to find column named \"+ind);\n\t\t}\n\t\tthrow new Error(\"Please provide a valid column (number or named column)\");\n\t}\n\t\n\taddColumn(config, ind) {\n\t\n\t\t// determine col\n\t\tlet col = this.columns(); // default\n\t\tif (config && typeof config == \"string\") {col=config}\n\t\telse if (config && (typeof config == \"object\") && (\"header\" in config)) {col = config.header}\n\t\telse if (ind!==undefined) {col=ind}\n\n\t\t// check if it exists\n\t\tif (col in this._headers) {\n\t\t\tthrow new Error(\"This column exists already: \"+config.header)\n\t\t}\n\t\t\n\t\t// add column\n\t\tlet colIndex = this.columns();\n\t\tthis._headers[col] = colIndex;\n\t\t\n\t\t// determine data\n\t\tlet data = [];\n\t\tif (config && typeof config == \"object\" && \"rows\" in config) {data=config.rows}\n\t\telse if (Array.isArray(config)) {data = config;}\n\t\t\n\t\t// add data to each row\n\t\tthis._rows.forEach((r,i) => r[colIndex] = data[i])\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of rows in this table.\n\t * When the first argument is the boolean value `true` all rows are returned.\n\t * When the first argument is a an array then the rows corresponding to the row\n\t * indices or names are returned. When all arguments except are numbers or strings\n\t * then each of those is returned. \n\t */\n\trows(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._rows.length;\n\t\t}\n\t\t\n\t\tlet rows = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\trows = this._rows.map((r,i) => this.row(i, asObj))\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\telse if (Array.isArray(inds)) {\n\t\t\trows = inds.map(ind => this.row(ind));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\trows.push(this.row(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// zip if requested\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (rows.length<2) {throw new Error(\"Only one row available, can't zip\")}\n\t\t\treturn Table.zip(rows);\n\t\t}\n\t\telse {\n\t\t\treturn rows;\n\t\t}\n\t}\n\t\n\trow(ind, asObj) {\n\t\tlet row = this._rows[this.getRowIndex(ind)];\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tfor (let key in this._headers) {\n\t\t\t\tobj[key] = row[this._headers[key]]\n\t\t\t}\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn row;\n\t\t}\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of columns in this table.\n\t * When the first argument is the boolean value `true` all columns are returned.\n\t * When the first argument is a number a slice of the columns is returned and if\n\t * the second argument is a number it is treated as the length of the slice to\n\t * return (note that it isn't the `end` index like with Array.slice()).\n\t */\n\tcolumns(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\t\t\n\t\tlet columns = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all columns\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tfor (let i=0, len=this.columns(); i<len; i++) {\n\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// return specified columns\n\t\telse if (Array.isArray(inds)) {\n\t\t\tinds.forEach(i => columns.push(this.column(i, asObj)), this);\n\t\t}\n\t\t\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\tcolumns.push(column(ind, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (columns.length<2) {throw new Error(\"Only one column available, can't zip\")}\n\t\t\treturn Table.zip(columns);\n\t\t}\n\t\telse {\n\t\t\treturn columns;\n\t\t}\n\t}\n\t\n\tcolumn(ind, asObj) {\n\t\tlet column = this.getColumnIndex(ind);\n\t\tlet data = this._rows.forEach(r => r[column]);\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tthis._rows.forEach(r => {\n\t\t\t\tobj[r[this._rowKeyColumnIndex]] = r[column];\n\t\t\t})\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn this._rows.map(r => r[column]);\n\t\t}\n\t}\n\t\n\theader(ind) {\n\t\tlet keys = Object.keys(this._headers);\n\t\tlet i = this.getColumnIndex(ind);\n\t\treturn keys[keys.findIndex(k => i==this._headers[k])]\n\t}\n\t\n\theaders(inds, ...other) {\n\t\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._headers.length;\n\t\t}\n\n\t\tlet headers = [];\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tinds = Array(Object.keys(this._headers).length).fill().map((_,i) => i);\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn inds.map(i => this.header(i));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\treturn [inds, ...other].map(i => this.header(i));\n\t\t}\n\t}\n\n\thasColumn(ind) {\n\t\treturn ind in this._headers;\n\t}\n\t\n\tforEach(fn) {\n\t\tthis._rows.forEach((r,i) => fn(r,i));\n\t}\n\t\n\trowMin(ind) {\n\t\treturn Math.min.apply(null, this.row(ind));\n\t}\n\t\n\trowMax(ind) {\n\t\treturn Math.max.apply(null, this.row(ind));\n\t}\n\t\n\tcolumnMin(ind) {\n\t\treturn Math.min.apply(null, this.column(ind));\n\t}\n\t\n\tcolumnMax(ind) {\n\t\treturn Math.max.apply(null, this.column(ind));\n\t}\n\t\n\trowSum(ind) {\n\t\treturn Table.sum(this.row(ind));\n\t}\n\t\n\tcolumnSum(ind) {\n\t\treturn Table.sum(this.column(ind));\n\t}\n\n\trowMean(ind) {\n\t\treturn Table.mean(this.row(ind));\n\t}\n\t\n\tcolumnMean(ind) {\n\t\treturn Table.mean(this.column(ind));\n\t}\n\t\n\trowCounts(ind) {\n\t\treturn Table.counts(this.row(ind));\n\t}\n\t\n\tcolumnCounts(ind) {\n\t\treturn Table.counts(this.column(ind));\n\t}\n\t\n\trowRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.row(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setRow(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\tcolumnRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.column(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setColumn(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\trowVariance(ind) {\n\t\treturn Table.variance(this.row(ind));\n\t}\n\t\n\tcolumnVariance(ind) {\n\t\treturn Table.variance(this.column(ind));\n\t}\n\t\n\trowStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.row(ind));\n\t}\n\t\n\tcolumnStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.column(ind));\n\t}\n\t\n\trowZScores(ind) {\n\t\treturn Table.zScores(this.row(ind));\n\t}\n\t\n\tcolumnZScores(ind) {\n\t\treturn Table.zScores(this.column(ind));\n\t}\n\t\n\trowSort(inds, config) {\n\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i)\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn this.rowSort((a,b) => {\n\t\t\t\tlet ind;\n\t\t\t\tfor (let i=0, len=inds.length; i<len; i++) {\n\t\t\t\t\tind = this.getColumnIndex(inds[i]);\n\t\t\t\t\tif (a!=b) {\n\t\t\t\t\t\tif (typeof a[ind] == \"string\" && typeof b[ind] == \"string\") {\n\t\t\t\t\t\t\treturn a[ind].localeCompare(b[ind]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn a[ind]-b[ind];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, config)\n\t\t}\n\n\t\tif (typeof inds == \"function\") {\n\t\t\tthis._rows.sort((a,b) => {\n\t\t\t\tif (config && \"asObject\" in config && config.asObject) {\n\t\t\t\t\tlet c = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\tc[k] = a[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\tlet d = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\td[k] = b[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\treturn inds.apply(this, [c,d]);\n\t\t\t\t} else {\n\t\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (config && \"reverse\" in config && config.reverse) {\n\t\t\t\tthis._rows.reverse(); // in place\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\t\n\tcolumnSort(inds, config) {\n\t\t\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i);\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\t\t\n\t\tif (Array.isArray(inds)) {\n\t\t\t\n\t\t\t// convert to column names\n\t\t\tlet headers = inds.map(ind => this.header(ind));\n\t\t\t\n\t\t\t// make sure we have all columns\n\t\t\tObject.keys(this._headers).forEach(h => {\n\t\t\t\tif (!headers.includes(h)) {headers.push(h)}\n\t\t\t});\n\t\t\t\n\t\t\t// sort names alphabetically\n\t\t\theaders.sort((a,b) => a.localeCompare(b))\n\t\t\t\n\t\t\t// reorder by columns\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t\t\n\t\t}\n\t\t\n\t\tif (typeof inds == \"function\") {\n\t\t\tlet headers = Object.keys(this._headers);\n\t\t\tif (config && \"asObject\" in headers && headers.asObject) {\n\t\t\t\theaders = headers.map((h,i) => {\n\t\t\t\t\treturn {header: h, data: this._rows.map((r,j) => this.cell(i,j))}\n\t\t\t\t})\n\t\t\t}\n\t\t\theaders.sort((a,b) => {\n\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t})\n\t\t\theaders = headers.map(h => typeof h == \"object\" ? h.header : h); // convert back to string\n\t\t\t\n\t\t\t// make sure we have all keys\n\t\t\tObject.keys(this._headers).forEach(k => {\n\t\t\t\tif (headers.indexOf(k)==-1) {headers.push(k)}\n\t\t\t})\n\t\t\t\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t}\n\t\t\n\t}\n\t\n\tchart(target, config) {\n\t\tChart.chart(target, config);\n\t}\n\t\n\ttoCsv(config) {\n\t\tconst cell = function(c) {\n\t\t\tlet quote = /\"/g;\n\t\t\treturn typeof c == \"string\" && (c.indexOf(\",\")>-1 || c.indexOf('\"')>-1) ? '\"'+c.replace(quote,'\\\"')+'\"' : c;\n\t\t}\n\t\treturn (config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).map(h => cell(h)).join(\",\") + \"\\n\") +\n\t\t\tthis._rows.map(row => row.map(c => cell(c)).join(\",\")).join(\"\\n\")\n\t}\n\t\n\ttoTsv(config) {\n\t\treturn config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).join(\"\\t\") + \"\\n\" +\n\t\t\tthis._rows.map(row => row.join(\"\\t\")).join(\"\\n\");\n\t}\n\t\n\thtml(target, config) {\n\t\tlet html = this.toString();\n\t\tif (typeof target == \"function\") {\n\t\t\ttarget(html)\n\t\t} else {\n\t\t\tif (typeof target == \"string\") {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t\tif (!target) {\n\t\t\t\t\tthrow \"Unable to find specified target: \"+target;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof target == \"object\" && \"innerHTML\" in target) {\n\t\t\t\ttarget.innerHTML = html;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t\n\ttoString(config) {\n\t\treturn \"<table class='voyantTable'>\" +\n\t\t\t((config && \"caption\" in config && typeof config.caption == \"string\") ?\n\t\t\t\t\t\"<caption>\"+config.caption+\"</caption>\" : \"\") +\n\t\t\t((config && \"noHeaders\" in config && config.noHeaders) ? \"\" : (\"<thead><tr>\"+this.headers(true).map(c => \"<th>\"+c+\"</th>\").join(\"\")+\"</tr></thead>\"))+\n\t\t\t\"<tbody>\"+\n\t\t\tthis._rows.map(row => \"<tr>\"+row.map(c => \"<td>\"+(typeof c === \"number\" ? c.toLocaleString() : c)+\"</td>\").join(\"\")+\"</tr>\").join(\"\") +\n\t\t\t\"</tbody></table>\";\n\t}\n\t\n\tchart(config = {}) {\n\t\t\n\t\tlet target = config.target;\n\t\tif (target === undefined) {\n\t\t\tif (Spyral && Spyral.Notebook) {\n\t\t\t\ttarget = Spyral.Notebook.getTarget().results.el.dom;\n\t\t\t} else {\n\t\t\t\ttarget = document.createElement(\"div\");\n\t\t\t\tdocument.body.appendChild(target);\n\t\t\t}\n\t\t}\n\n\t\tconfig.chart = config.chart || {};\n\t\t\n\t\tlet columnsCount = this.columns();\n\t\tlet rowsCount = this.rows();\n\t\tlet headers = this.headers(config.columns ? config.columns : true);\n\t\tlet isHeadersCategories = headers.every(h => isNaN(h));\n\n\t\tif (isHeadersCategories) {\n\t\t\tChart.setDefaultChartType(config, \"column\");\n\t\t}\n\n\t\t// set categories if not set\n\t\tconfig.xAxis = config.xAxis || {};\n\t\tconfig.xAxis.categories = config.xAxis.categories || headers;\n\t\t\n\t\t// start filling in series\n\t\tconfig.series = config.series || [];\n\t\t\n\t\t// one row, so let's take series from rows\n\t\tif (rowsCount==1) {\n\t\t\tconfig.seriesFrom = config.seriesFrom || \"rows\";\n\t\t}\n\t\t\n\t\tif (config.seriesFrom === \"rows\") {\n\t\t\tthis.rows(config.rows ? config.rows : true).forEach((row, i) => {\n\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\tconfig.series[i].data = headers.map(h => this.cell(i, h));\n\t\t\t})\n\t\t} else if (config.seriesFrom === \"columns\") {\n\t\t\tthis.columns(config.columns ? config.columns : true).forEach((col, i) => {\n\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\tconfig.series[i].data = [];\n\t\t\t\tfor (let r = 0; r < rowsCount; r++) {\n\t\t\t\t\tconfig.series[i].data.push(this.cell(r, i));\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\t\n\t\t}\n\t\t\n\t\treturn Chart.chart(target, config);\n\t}\n\n\tstatic create(data, config, ...other) {\n\t\treturn new Table(data, config, ...other);\n\t}\n\t\n\tstatic fetch(input, api, config) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\twindow.fetch(input, api).then(response => {\n\t\t\t\tif (!response.ok) {throw new Error(response.status + \" \" + response.statusText);}\n\t\t\t\tresponse.text().then(text => {\n\t\t\t\t\tresolve(Table.create(text, config || api))\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\tstatic counts(data) {\n\t\tlet vals = {};\n\t\tdata.forEach(v => v in vals ? vals[v]++ : vals[v]=1);\n\t\treturn vals;\n\t}\n\t\n\tstatic cmp(a, b) {\n\t\treturn typeof a == \"string\" && typeof b == \"string\" ? a.localeCompare(b) : a-b;\n\t}\n\n\tstatic sum(data) {\n\t\treturn data.reduce((a,b) => a+b, 0);\n\t}\n\t\n\tstatic mean(data) {\n\t\treturn Table.sum(data) / data.length;\n\t}\n\t\n\tstatic rollingMean(data, neighbors) {\n\t\t// https://stackoverflow.com/questions/41386083/plot-rolling-moving-average-in-d3-js-v4/41388581#41387286\n\t\treturn data.map((val, idx, arr) => {\n\t\t\tlet start = Math.max(0, idx - neighbors), end = idx + neighbors\n\t\t\tlet subset = arr.slice(start, end + 1)\n\t\t\tlet sum = subset.reduce((a,b) => a + b)\n\t\t\treturn sum / subset.length\n\t\t});\n\t}\n\t\n\tstatic variance(data) {\n\t\tlet m = Table.mean(data);\n\t\treturn Table.mean(data.map(num => Math.pow(num-m, 2)));\n\t}\n\t\n\tstatic standardDeviation(data) {\n\t\treturn Math.sqrt(Table.variance(data));\n\t}\n\t\n\tstatic zScores(data) {\n\t\tlet m = Table.mean(data);\n\t\tlet s = Table.standardDeviation(data);\n\t\treturn data.map(num => (num-m) / s);\n\t}\n\t\n\tstatic zip(...data) {\n\t\n\t\t// we have a single nested array, so let's recall with flattened arguments\n\t\tif (data.length==1 && Array.isArray(data) && data.every(d => Array.isArray(d))) {\n\t\t\treturn Table.zip.apply(null, ...data);\n\t\t}\n\t\t\n\t\t// allow arrays to be of different lengths\n\t\tlet len = Math.max.apply(null, data.map(d => d.length));\n\t\treturn new Array(len).fill().map((_,i) => data.map(d => d[i]));\n\t}\n}\n\n// this seems like a good balance between a built-in flexible parser and a heavier external parser\n// https://lowrey.me/parsing-a-csv-file-in-es6-javascript/\nconst regex = /(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*))\\s*(?:,|$)/g;\nfunction parseCsvLine(line) {\n\tlet arr = [];\n\tline.replace(regex, (m0, m1, m2, m3) => {\n\t\tif (m1 !== undefined) {\n\t\t\tarr.push(m1.replace(/\\\\'/g, \"'\"));\n\t\t} else if (m2 !== undefined) {\n\t\t\tarr.push(m2.replace(/\\\\\"/g, \"\\\"\"));\n\t\t} else if (m3 !== undefined) {\n\t\t\tarr.push(m3);\n\t\t}\n\t\treturn \"\";\n\t});\n\tif (/,\\s*$/.test(line)) {arr.push(\"\");}\n\treturn arr;\n\t\n}\n\nexport default Table\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Notebook {\n\t/**\n\t * Returns the previous block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getPreviousBlock() {\n\t\treturn Spyral.Notebook.getBlock(-1);\n\t}\n\t/**\n\t * Returns the next block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getNextBlock() {\n\t\treturn Spyral.Notebook.getBlock(1);\n\t}\n\t/**\n\t * Returns the current block.\n\t * @static\n\t * @params {number} [offset] If specified, returns the block whose position is offset from the current block\n\t * @returns {string}\n\t */\n\tstatic getBlock() {\n\t\tif (Voyant && Voyant.notebook) {\n\t\t\treturn Voyant.notebook.Notebook.currentNotebook.getBlock.apply(Voyant.notebook.Notebook.currentNotebook, arguments)\n\t\t}\n\t}\n\t/**\n\t * \n\t * @param {*} contents \n\t * @param {*} config \n\t */\n\tstatic show(contents, config) {\n\t\tvar contents = Spyral.Util.toString(contents, config);\n\t\tif (contents instanceof Promise) {\n\t\t\tcontents.then(c => Voyant.notebook.util.Show.show(c))\n\t\t} else {\n\t\t\tVoyant.notebook.util.Show.show(contents);\n\t\t}\n\t}\n\t/**\n\t * @returns {string|element}\n\t */\n\tstatic getTarget() {\n\t\tif (Voyant && Voyant.notebook && Voyant.notebook.Notebook.currentBlock) {\n\t\t\treturn Voyant.notebook.Notebook.currentBlock;\n\t\t} else {\n\t\t\tconst target = document.createElement(\"div\");\n\t\t\tdocument.body.appendChild(target);\n\t\t\treturn target;\n\t\t}\n\t}\n}\n\nexport { Notebook }\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Util {\n\t/**\n\t * Generates a random ID of the specified length.\n\t * @static\n\t * @param {number} len The length of the ID to generate?\n\t * @returns {string}\n\t */\n\tstatic id(len) {\n\t\tlen = len || 8;\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n\t\treturn Math.random().toString(36).substring(2, 2+len) + Math.random().toString(36).substring(2, 2+len)\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} contents \n\t * @param {*} config \n\t * @returns {string}\n\t */\n\tstatic toString(contents, config) {\n\t\tif (contents.constructor === Array || contents.constructor===Object) {\n\t\t\tcontents = JSON.stringify(contents);\n\t\t\tif (contents.length>500) {\n\t\t\t\tcontents = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn contents.toString();\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} before \n\t * @param {*} more \n\t * @param {*} after \n\t */\n\tstatic more(before, more, after) {\n\t\treturn before + '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\n\t}\n}\n\nexport { Util }\n","/**\n * A class for storing Notebook metadata\n * @memberof Spyral\n */\nclass Metadata {\n\t/**\n\t * The Metadata config object\n\t * @typedef {object} MetadataConfig\n\t * @property {string} title The title of the Corpus\n\t * @property {string} author The author of the Corpus\n\t * @property {string} description The description of the Corpus\n\t * @property {array} keywords The keywords for the Corpus\n\t * @property {string} created When the Corpus was created\n\t * @property {string} language The language of the Corpus\n\t * @property {string} license The license for the Corpus\n\t */\n\n\t/** \n\t * The metadata constructor.\n\t * @constructor\n\t * @param {MetadataConfig} config The metadata config object\n\t */\n\tconstructor(config) {\n\t\t['title', 'author', 'description', 'keywords', 'modified', 'created', 'language', 'license'].forEach(key => {\n\t\t\tthis[key] = undefined;\n\t\t})\n\t\tthis.version = \"0.1\"; // may be changed by config\n\t\tif (config instanceof HTMLDocument) {\n\t\t\tconfig.querySelectorAll(\"meta\").forEach(function(meta) {\n\t\t\t\tvar name =  meta.getAttribute(\"name\");\n\t\t\t\tif (name && this.hasOwnProperty(name)) {\n\t\t\t\t\tvar content = meta.getAttribute(\"content\");\n\t\t\t\t\tif (content) {\n\t\t\t\t\t\tthis[name] = content;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthis.set(config);\n\t\t}\n\t\tif (!this.created) {this.setDateNow(\"created\")}\n\t}\n\n\t/**\n\t * Set metadata properties.\n\t * @param {object} config A config object\n\t */\n\tset(config) {\n\t\tfor (var key in config) {\n\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\tthis[key] = config[key];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the specified field to the current date and time.\n\t * @param {string} field \n\t */\n\tsetDateNow(field) {\n\t\tthis[field] = new Date().toISOString();\n\t}\n\n\t/**\n\t * Gets the specified field as a short date.\n\t * @param {string} field\n\t * @returns {string|undefined}\n\t */\n\tshortDate(field) {\n\t\treturn this[field] ? (new Date(Date.parse(this[field])).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })) : undefined;\n\t}\n\n\t/**\n\t * Gets the fields as a set of HTML meta tags.\n\t * @returns {string}\n\t */\n\tgetHeaders() {\n\t\tvar quotes = /\"/g, newlines = /(\\r\\n|\\r|\\n)/g, tags = /<\\/?\\w+.*?>/g,\n\t\t\theaders = \"<title>\"+(this.title || \"\").replace(tags,\"\")+\"</title>\\n\"\n\t\tfor (var key in this) {\n\t\t\tif (this[key]) {\n\t\t\t\theaders+='<meta name=\"'+key+'\" content=\"'+this[key].replace(quotes, \"&quot;\").replace(newlines, \" \")+'\">';\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n}\n\nexport { Metadata }\n","import {Corpus, Table, Load} from 'voyant';\n\nimport {Notebook} from './notebook';\nimport {Util} from './util';\nimport {Metadata} from './metadata';\n\n/**\n * @namespace Spyral\n */\nconst Spyral = {\n\tNotebook,\n\tUtil,\n\tMetadata,\n\tCorpus,\n\tTable,\n\tLoad\n};\n\nexport default Spyral;\n"],"names":["Load","baseUrl","config","params","url","URL","trombone","all","key","undefined","searchParams","Object","keys","map","encodeURIComponent","join","opt","length","set","method","headers","body","fetch","then","response","ok","json","text","Voyant","util","DetailedError","msg","error","split","shift","details","showMsg","alert","window","console","Error","urlToFetch","err","DOMParser","parseFromString","load","isDocumentsMode","mode","documents","Corpus","id","corpusid","me","Promise","resolve","tool","corpus","data","documentsMetadata","metadata","alias","documentsCount","toLocaleString","lexicalTokensCount","lexicalTypesCount","doc","title","texts","documentTerms","terms","corpusTerms","documentTokens","tokens","limit","noOthers","query","warn","documentContexts","contexts","corpusCollocates","collocates","documentNgrams","ngrams","corpusNgrams","termCorrelations","correlations","reject","tools","Array","isArray","push","forTool","arguments","i","defaultAttributes","width","height","style","out","forEach","t","attr","val","voyantUrl","append","assign","summary","setBaseUrl","api","titles","words","phrases","promise","test","input","name","args","apply","chart","target","subtitle","credits","xAxis","yAxis","Highcharts","setDefaultChartType","type","Table","other","_rows","_headers","_rowKeyColumnIndex","rows","concat","filter","v","from","every","a","indexOf","String","format","line","trim","values","parseCsvLine","isNaN","setHeaders","Number","hasHeaders","count","freqs","counts","orientation","item","addRow","rowSort","b","cmp","columnSort","cell","addRows","rowKeyColumn","columns","rowKeyColum","h","addColumn","row","setRow","ind","create","rowIndex","getRowIndex","d","setCell","column","hasColumn","columnIndex","getColumnIndex","value","overwrite","rowInd","colInd","updateCell","findIndex","r","arr","header","col","colIndex","inds","asObj","zip","obj","len","k","fill","_","fn","Math","min","max","sum","mean","neighbors","means","rollingMean","setColumn","variance","standardDeviation","zScores","localeCompare","sort","asObject","c","reverse","includes","j","Chart","quote","replace","noHeaders","html","toString","document","querySelector","innerHTML","caption","Spyral","Notebook","getTarget","results","el","dom","createElement","appendChild","columnsCount","rowsCount","isHeadersCategories","categories","series","seriesFrom","status","statusText","vals","reduce","idx","start","end","subset","slice","m","num","pow","sqrt","s","regex","m0","m1","m2","m3","getBlock","notebook","currentNotebook","contents","Util","Show","show","currentBlock","random","substring","constructor","JSON","stringify","before","more","after","Metadata","version","HTMLDocument","querySelectorAll","meta","getAttribute","hasOwnProperty","content","created","setDateNow","field","Date","toISOString","parse","toLocaleDateString","year","month","day","quotes","newlines","tags"],"mappings":"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"}