{"version":3,"file":"spyral.js","sources":["../../../../../../../voyantjs/src/load.js","../../../../../../../voyantjs/src/corpus.js","../../../../../../../voyantjs/src/chart.js","../../../../../../../voyantjs/src/table.js","../src/notebook.js","../src/util.js","../src/metadata.js","../src/index.js"],"sourcesContent":["/**\n * Class embodying Load functionality.\n * @memberof Spyral\n * @class\n */\nclass Load {\n\tstatic baseUrl;\n\n\t/**\n\t * Set the base URL for use with the Load class\n\t * @param {string} baseUrl \n\t */\n\tstatic setBaseUrl(baseUrl) {\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\t/**\n\t * Make a call to trombone\n\t * @param {object} config \n\t * @param {object} params\n\t * @returns {JSON}\n\t */\n\tstatic trombone(config = {}, params) {\n\t\tlet url = new URL(config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\tlet all = { ...config, ...params };\n\t\tfor (var key in all) {\n\t\t\tif (all[key] === undefined) { delete all[key] }\n\t\t}\n\t\tlet searchParams = Object.keys(all).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(all[key])).join(\"&\")\n\t\tlet opt = {};\n\t\tif (searchParams.length < 800 || (\"method\" in all && all[\"method\"] == \"GET\")) {\n\t\t\tfor (var key in all) { url.searchParams.set(key, all[key]); }\n\t\t} else {\n\t\t\topt = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n\t\t\t\tbody: searchParams\n\t\t\t}\n\t\t}\n\t\treturn fetch(url, opt).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json()\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\tmsg: \"\",\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Fetch content from a URL, often resolving cross-domain data constraints\n\t * @param {string} urlToFetch \n\t * @param {object} config\n\t * @returns {Response}\n\t */\n\tstatic load(urlToFetch, config) {\n\t\tlet url = new URL(config && config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\turl.searchParams.set(\"fetchData\", urlToFetch);\n\t\treturn fetch(url).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(err => { throw err })\n\t}\n\n\t/**\n\t * Fetch HTML content from a URL\n\t * @param {string} url \n\t * @returns {Document}\n\t */\n\tstatic html(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/html'));\n\t}\n\n\t/**\n\t * Fetch XML content from a URL\n\t * @param {string} url \n\t * @returns {XMLDocument}\n\t */\n\tstatic xml(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/xml'));\n\t}\n\n\t/**\n\t * Fetch JSON content from a URL\n\t * @param {string} url \n\t * @returns {JSON}\n\t */\n\tstatic json(url) {\n\t\treturn this.load(url).then(response => response.json());\n\t}\n\n\t/**\n\t * Fetch text content from a URL\n\t * @param {string} url \n\t * @returns {string}\n\t */\n\tstatic text(url) {\n\t\treturn this.load(url).then(response => response.text());\n\t}\n}\n\nexport default Load\n","import Load from './load';\n\nfunction isDocumentsMode(config) {\n\treturn config && ((config.mode && config.mode === \"documents\") || config.documents);\n}\n\n/**\n * Class representing a Corpus.\n * @memberof Spyral\n * @class\n */\nclass Corpus {\n\t/**\n\t * Create a new Corpus using the specified Corpus ID\n\t * @constructor\n\t * @param {string} id The Corpus ID\n\t */\n\tconstructor(id) {\n\t\tthis.corpusid = id;\n\t}\n\n\tstatic Load = Load;\n\n\tstatic setBaseUrl(baseUrl) {\n\t\tLoad.setBaseUrl(baseUrl);\n\t}\n\n\t/**\n\t * Get the ID\n\t * @return {string} The ID\n\t */\n\tid() {\n\t\tlet me = this\n\t\treturn new Promise(resolve => resolve(me.corpusid));\n\t}\n\n\t/**\n\t * Create a Corpus and return the ID\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic id(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.id(api || config));\n\t}\n\n\t/**\n\t * Load the metadata\n\t * @param {*} config \n\t * @param {*} params \n\t */\n\tmetadata(config, params) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentsMetadata\" : \"corpus.CorpusMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => isDocumentsMode(config) ? data.documentsMetadata.documents : data.corpus.metadata)\n\t}\n\n\t/**\n\t * Create a Corpus and return the metadata\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic metadata(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.metadata(api || config));\n\t}\n\t\n\tsummary(config) {\n\t\treturn this.metadata().then(data => {\n\t\t\t// TODO: make this a template\n\t\t\treturn `This corpus (${data.alias ? data.alias : data.id}) has ${data.documentsCount.toLocaleString()} documents with ${data.lexicalTokensCount.toLocaleString()} total words and ${data.lexicalTypesCount.toLocaleString()} unique word forms.`\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the summary\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic summary(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.summary(api || config));\n\t}\n\t\n\ttitles(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentsMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => data.documentsMetadata.documents.map(doc => doc.title))\n\t}\n\n\t/**\n\t * Create a Corpus and return the titles\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic titles(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.titles(api || config));\n\t}\n\t\n\t/**\n\t * Get the text\n\t * @param {*} config \n\t */\n\ttext(config) {\n\t\treturn this.texts(config).then(data => data.join(\"\\n\"))\n\t}\n\n\t/**\n\t * Create a Corpus and return the text\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic text(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.text(api || config));\t\n\t}\n\t\n\ttexts(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusTexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.texts.texts)\n\t}\n\n\t/**\n\t * Create a Corpus and return the texts\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic texts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.texts(api || config));\t\n\t}\n\t\n\tterms(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTerms\" : \"corpus.CorpusTerms\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentTerms.terms : data.corpusTerms.terms)\n\t}\n\n\t/**\n\t * Create a Corpus and return the terms\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic terms(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.terms(api || config));\n\t}\n\t\n\ttokens(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens)\n\t}\n\n\t/**\n\t * Create a Corpus and return the tokens\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tokens(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tokens(api || config));\n\t}\n\n\twords(config = {}) {\n\t\t// by default DocumentTokens limits to 50 which probably isn't expected\n\t\tif (!(\"limit\" in config)) {config.limit=0;}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tnoOthers: true,\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens.map(t => t.term))\n\t}\n\n\t/**\n\t * Create a Corpus and return an array of lexical forms (words) in document order.\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic words(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.words(api || config));\n\t}\n\t\n\tcontexts(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for contexts request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentContexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentContexts.contexts)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the contexts\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic contexts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.contexts(api || config));\n\t}\n\t\n\tcollocates(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for collocates request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusCollocates\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.corpusCollocates.collocates)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the collocates\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic collocates(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.collocates(api || config));\n\t}\n\n\tphrases(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentNgrams\" : \"corpus.CorpusNgrams\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentNgrams.ngrams : data.corpusNgrams.ngrams)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the phrases\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic phrases(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.phrases(api || config));\n\t}\n\t\n\tcorrelations(config) {\n\t\tif ((!config || !config.query) && console) {\n\t\t\tconsole.warn(\"No query provided for correlations request.\")\n\t\t\tif (!isDocumentsMode(config)) {\n\t\t\t\tthrow new Error(\"Unable to run correlations for a corpus without a query.\")\n\t\t\t}\n\t\t}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTermCorrelations\" : \"corpus.CorpusTermCorrelations\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.termCorrelations.correlations)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the correlations\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic correlations(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.correlations(api || config));\n\t}\n\t\n\ttool(_tool, config = {}) {\n\t\tlet me = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tlet isTool = function(obj) {return obj && (typeof obj==\"string\" && /\\W/.test(obj)==false) || (typeof obj == \"object\" && \"forTool\" in obj)}\n\t\t\tlet isConfig = function(obj) {return obj && typeof obj == \"object\" && !(\"forTool\" in obj)}\n\t\t\tlet lastArg = arguments[arguments.length-1];\n\t\t\tconfig = isConfig(lastArg) ? lastArg : {};\n\t\t\t\n\t\t\t// we have all tools and we'll show them individually\n\t\t\tif (isTool(_tool) && (isTool(lastArg) || isConfig(lastArg))) {\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 350px; height: 350px\",\n\t\t\t\t\tfloat: \"right\"\n\t\t\t\t}\n\t\t\t\tlet out = \"\";\n\t\t\t\tfor (let i=0; i<arguments.length; i++) {\n\t\t\t\t\tlet t = arguments[i];\n\t\t\t\t\tif (isTool(t)) {\n\t\t\t\t\t\tif (typeof t == \"string\") {t = {forTool: t}} // make sure we have object\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build iframe tag\n\t\t\t\t\t\tout+=\"<iframe \";\n\t\t\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\t\t\tvar val = (attr in t ? t[attr] : undefined) || (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build url\n\t\t\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl) + \"tool/\"+t.forTool+\"/\");\n\t\t\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\t\t\tlet all = Object.assign(t,config);\n\t\t\t\t\t\tObject.keys(all).forEach(key => {\n\t\t\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\t\t\turl.searchParams.append(key, all[key])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// finish tag\n\t\t\t\t\t\tout+=' src=\"'+url+'\"></iframe>'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn resolve(out);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(_tool)) {\n\t\t\t\t\t_tool = _tool.join(\";\")\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 90%; height: \"+(350*(_tool ? _tool : \"\").split(\";\").length)+\"px\"\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// build iframe tag\n\t\t\t\tlet out =\"<iframe \";\n\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\tvar val = (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// build url\n\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl)+(_tool ? (\"?view=customset&tableLayout=\"+_tool) : \"\"));\n\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\tObject.keys(config).forEach(key => {\n\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\turl.searchParams.append(key, config[key])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve(out+\" src='\"+url+\"'></iframe\");\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the tool\n\t * @param {*} tool \n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tool(tool, config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tool(tool, config, api));\n\t}\n\n\ttoString() {\n\t\treturn this.summary()\n\t}\n\t\t\n\t/**\n\t * Create a new Corpus using the provided config\n\t * @param {object} config \n\t */\n\tstatic create(config) {\n\t\treturn Corpus.load(config);\n\t}\n\n\t/**\n\t * Load a Corpus using the provided config\n\t * @param {object} config The Corpus config\n\t */\n\tstatic load(config) {\n\t\tconst promise = new Promise(function(resolve, reject) {\n\t\t\tif (config instanceof Corpus) {\n\t\t\t\tresolve(config);\n\t\t\t} else if (typeof config === \"string\" && config.length>0 && /\\W/.test(config)===false) {\n\t\t\t\tresolve(new Corpus(config)); \n\t\t\t} else if (typeof config === \"object\" && config.corpus) {\n\t\t\t\tresolve(new Corpus(config.corpus))\n\t\t\t} else {\n\t\t\t\tif (typeof config === \"string\") {config = {input: config}}\n\t\t\t\tif (config && config.input) {\n\t\t\t\t\tLoad.trombone(config, {tool: \"corpus.CorpusMetadata\"})\n\t\t\t\t\t.then(data => resolve(new Corpus(data.corpus.metadata.id)))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t[\"id\",\"metadata\",\"summary\",\"titles\",\"text\",\"texts\",\"terms\",\"tokens\",\"words\",\"contexts\",\"collocates\",\"phrases\",\"correlations\",\"tool\"].forEach(name => {\n\t\t\tpromise[name] = function() {\n\t\t\t\tvar args = arguments\n\t\t\t\treturn promise.then(corpus => {return corpus[name].apply(corpus, args)})\n\t\t\t}\n\t\t})\n\t\tpromise.assign = function(name) {\n\t\t\tthis.then(corpus => {window[name] = corpus; return corpus})\n\t\t}\n\n\t\treturn promise;\n\t}\n}\n\nexport default Corpus\n","import * as Highcharts from 'highcharts';\n\nclass Chart {\n\t/**\n\t * Construct a new Chart class\n\t * @constructor\n\t * @param {*} target \n\t * @param {*} data \n\t */\n    constructor(target, data) {\n\t    this.target = target;\n\t    this.data = data;\n\t}\n\n\t/**\n\t * Create a new chart\n\t * @param {*} target \n\t * @param {*} config \n\t */\n\tcreate(target, config) {\n\t\tHighcharts.chart(target, config);\n\t}\n\t\n\t/**\n\t * Create a new chart\n\t * @param {*} target \n\t * @param {*} config \n\t */\n\tstatic create(target, config) {\n\t\t// convert title and suppress if not provided\n\t\tif (\"title\" in config) {\n\t\t\tif (typeof config.title == \"string\") {\n\t\t\t\tconfig.title = {text: config.title};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.title = false;\n\t\t}\n\t\t\n\t\t// convert subtitle and convert if not provided\n\t\tif (\"subtitle\" in config) {\n\t\t\tif (typeof config.subtitle == \"string\") {\n\t\t\t\tconfig.subtitle = {text: config.subtitle};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.subtitle = false;\n\t\t}\n\t\t\n\t\t// convert credits\n\t\tif (!(\"credits\" in config)) {\n\t\t\tconfig.credits = false;\n\t\t}\n\t\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"xAxis\" in config)) {config.xAxis = {}}\n\t\tif (!(\"title\" in config.xAxis)) {\n\t\t\t//config.xAxis.title = false;\n\t\t}\n\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"yAxis\" in config)) {config.yAxis = {}}\n\t\tif (!(\"title\" in config.yAxis)) {\n\t\t\tconfig.yAxis.title = false;\n\t\t}\n\t\t\n\t\treturn Highcharts.chart(target, config);\n\t}\n\n\tstatic setDefaultChartType(config, type) {\n\t\tif (\"type\" in config) {\n\t\t\tconfig.chart.type = config.type;\n\t\t\tdelete config.type;\n\t\t\treturn\n\t\t}\n\t\t// TODO: check plot options and series?\n\t\tif (\"chart\" in config && \"type\" in config.chart) {return} // already set\n\t\tconfig.chart.type = type;\n\t\treturn;\n\t}\n\n    bar(config) {\n    }\n    line(config) {\n    }\n    scatter(config) {\n    }\n}\n\nexport default Chart\n","import Chart from \"./chart.js\";\n\n/**\n * Class representing a Table.\n * @memberof Spyral\n * @class\n */\nclass Table {\n\n\t/**\n\t * Create a new Table\n\t * @constructor\n\t * @param {(object|array|string|number)} data\n\t * @param {object} config\n\t */\n\tconstructor(data, config, ...other) {\n\n\t\tthis._rows = [];\n\t\tthis._headers = {};\n\t\tthis._rowKeyColumnIndex = 0;\n\t\t\n\t\t// we have a configuration object followed by values: create({headers: []}, 1,2,3) …\n\t\tif (data && typeof data == \"object\" && (typeof config == \"string\" || typeof config == \"number\" || Array.isArray(config))) {\n\t\t\tdata.rows = [config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// we have a simple variable set of arguments: create(1,2,3) …\n\t\tif (arguments.length>0 && Array.from(arguments).every(a => a!==undefined && !Array.isArray(a) && typeof a != \"object\")) {\n\t\t\tdata = [data,config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// could be CSV or TSV\n\t\tif (Array.isArray(data) && data.length==1 && typeof data[0] == \"string\"  && (data[0].indexOf(\",\")>-1 || data[0].indexOf(\"\\t\")>-1)) {\n\t\t\tdata = data[0];\n\t\t}\n\n\t\t// first check if we have a string that might be delimited data\n\t\tif (data && (typeof data == \"string\" || typeof data ==\"number\")) {\n\t\t\tif (typeof data == \"number\") {data = String(data)} // convert to string for split\n\t\t\tlet rows = [];\n\t\t\tlet format = config && \"format\" in config ? config.format : undefined;\n\t\t\tdata.split(/(\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])+/g).forEach((line,i) => {\n\t\t\t\tif (line.trim().length>0) {\n\t\t\t\t\tlet values;\n\t\t\t\t\tif ((format && format==\"tsv\") || line.indexOf(\"\\t\")>-1) {\n\t\t\t\t\t\tvalues = line.split(/\\t/);\n\t\t\t\t\t} else if ((format && format==\"csv\") || line.indexOf(\",\")>-1) {\n\t\t\t\t\t\tvalues = parseCsvLine(line)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues = [line]\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// if we can't find any config information for headers then we try to guess\n\t\t\t\t\t// if the first line doesn't have any numbers - this heuristic may be questionable\n\t\t\t\t\tif (i==0 && values.every(v => isNaN(v)) && \n\t\t\t\t\t\t((typeof config != \"object\") || (typeof config == \"object\" && !(\"hasHeaders\" in config) && !(\"headers\" in config)))) {\n\t\t\t\t\t\tthis.setHeaders(values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(values.map(v => isNaN(v) ? v : Number(v)))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tdata = rows;\n\t\t}\n\t\t\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (config) {\n\t\t\t\tif (Array.isArray(config)) {\n\t\t\t\t\tthis.setHeaders(config);\n\t\t\t\t} else if (typeof config == \"object\") {\n\t\t\t\t\tif (\"headers\" in config) {\n\t\t\t\t\t\tthis.setHeaders(config.headers)\n\t\t\t\t\t} else if (\"hasHeaders\" in config && config.hasHeaders) {\n\t\t\t\t\t\tthis.setHeaders(data.shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (config && \"count\" in config && config.count) {\n\t\t\t\tlet freqs = Table.counts(data);\n\t\t\t\tif (config.count==\"vertical\" || (\"orientation\" in config && config.orientation==\"vertical\")) {\n\t\t\t\t\tfor (let item in freqs) {\n\t\t\t\t\t\tthis.addRow(item, freqs[item])\n\t\t\t\t\t}\n\t\t\t\t\tthis.rowSort((a,b) => Table.cmp(b[1],a[1]))\n\t\t\t\t} else {\n\t\t\t\t\tthis._headers = []; // reset and use the terms as headers\n\t\t\t\t\tthis.addRow(freqs)\n\t\t\t\t\tthis.columnSort((a,b) => Table.cmp(this.cell(0,b),this.cell(0,a)))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.addRows(data);\n\t\t\t}\n\t\t} else if (data && typeof data == \"object\") {\n\t\t\tif (\"headers\" in data && Array.isArray(data.headers)) {\n\t\t\t\tthis.setHeaders(data.headers);\n\t\t\t} else if (\"hasHeaders\" in data && \"rows\" in data) {\n\t\t\t\tthis.setHeaders(data.rows.shift())\n\t\t\t}\n\t\t\tif (\"rows\" in data && Array.isArray(data.rows)) {\n\t\t\t\tthis.addRows(data.rows)\n\t\t\t}\n\t\t\tif (\"rowKeyColumn\" in data) {\n\t\t\t\tif (typeof data.rowKeyColumn == \"number\") {\n\t\t\t\t\tif (data.rowKeyColumn < this.columns()) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = data.rowKeyColumn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"The rowKeyColumn value is higher than the number headers designated: \"+data.rowKeyColum);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof data.rowKeyColumn == \"string\") {\n\t\t\t\t\tif (data.rowKeyColumn in this._headers) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = this._headers[data.rowKeyColumn];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unable to find column designated by rowKeyColumn: \"+data.rowKeyColumn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Set the headers for the Table\n\t * @param {(object|array)} data\n\t * @returns {Table}\n\t */\n\tsetHeaders(data) {\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach(h => this.addColumn(h), this);\n\t\t} else if (typeof data == \"object\") {\n\t\t\tif (this.columns()==0 || Object.keys(data).length==this.columns()) {\n\t\t\t\tthis._headers = data;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The number of columns don't match: \");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized argument for headers, it should be an array or an object.\"+data)\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add rows to the Table\n\t * @param {array} data\n\t * @returns {Table}\n\t */\n\taddRows(data) {\n\t\tdata.forEach(row => this.addRow(row), this);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add a row to the Table\n\t * @param {(array|object)} data\n\t * @returns {Table}\n\t */\n\taddRow(data, ...other) {\n\t\t\n\t\t// we have multiple arguments, so call again as an array\n\t\tif (other.length>0) {\n\t\t\treturn this.addRow([data].concat(other))\n\t\t}\n\n\t\tthis.setRow(this.rows(), data, true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Set a row\n\t * @param {(number|string)} ind The row index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetRow(ind, data, create) {\n\n\t\tlet rowIndex = this.getRowIndex(ind, create);\n\t\tif (rowIndex>=this.rows() && !create) {\n\t\t\tthrow new Error(\"Attempt to set row values for a row that does note exist: \"+ind+\". Maybe use addRow() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (data.length>this.columns()) {\n\t\t\t\tif (create) {\n\t\t\t\t\tfor (let i = this.columns(); i<data.length; i++) {\n\t\t\t\t\t\tthis.addColumn();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"The row that you've created contains more columns than the current table. Maybe use addColunm() first?\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.forEach((d,i) => this.setCell(rowIndex, i, d), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let column in data) {\n\t\t\t\tif (!this.hasColumn(column)) {\n\t\t\t\t}\n\t\t\t\tthis.setCell(rowIndex, column, data[column]);\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if (this.columns()<2 && create) { // hopefully some scalar value\n\t\t\tif (this.columns()==0) {\n\t\t\t\tthis.addColumn(); // create first column if it doesn't exist\n\t\t\t}\n\t\t\tthis.setCell(rowIndex,0,data);\n\t\t} else {\n\t\t\tthrow new Error(\"setRow() expects an array or an object, maybe setCell()?\")\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\t\n\t/**\n\t * Set a column\n\t * @param {(number|string)} ind The column index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetColumn(ind, data, create) {\n\n\t\tlet columnIndex = this.getColumnIndex(ind, create);\n\t\tif (columnIndex>=this.columns() && !create) {\n\t\t\tthrow new Error(\"Attempt to set column values for a column that does note exist: \"+ind+\". Maybe use addColumn() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach((d,i) => this.setCell(i, columnIndex, d, create), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let row in data) {\n\t\t\t\tthis.setCell(row, columnIndex, data[column], create);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// hope we have a scalar value to assign to the first row\n\t\telse {\n\t\t\tthis.setCell(0,columnIndex,data, create);\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Add to or set a cell value\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set/add\n\t * @param {boolean} overwrite True to set, false to add to current value\n\t */\n\tupdateCell(row, column, value, overwrite) {\n\t\tlet rowIndex = this.getRowIndex(row, true);\n\t\tlet columnIndex = this.getColumnIndex(column, true);\n\t\tlet val = this.cell(rowIndex, columnIndex);\n\t\tthis._rows[rowIndex][columnIndex] = val && !overwrite ? val+value : value;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value of a cell\n\t * @param {(number|string)} rowInd The row index\n\t * @param {(number|string)} colInd The column index\n\t * @returns {number}\n\t */\n\tcell(rowInd, colInd) {\n\t\treturn this._rows[this.getRowIndex(rowInd)][this.getColumnIndex(colInd)];\n\t}\n\n\t/**\n\t * Set the value of a cell\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set\n\t * @returns {Table}\n\t */\n\tsetCell(row, column, value) {\n\t\tthis.updateCell(row,column,value,true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get (and create) the row index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetRowIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this._rows.length) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis._rows[ind] = Array(this.columns());\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested row does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tlet row = this._rows.findIndex(r => r[this._rowKeyColumnIndex] === ind, this);\n\t\t\tif (row>-1) {return row;}\n\t\t\telse if (create) {\n\t\t\t\tlet arr = Array(this.columns());\n\t\t\t\tarr[this._rowKeyColumnIndex] = ind;\n\t\t\t\tthis.addRow(arr);\n\t\t\t\treturn this.rows();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(\"Unable to find the row named \"+ind);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Please provide a valid row (number or named row)\");\n\t}\n\t\n\t/**\n\t * Get (and create) the column index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetColumnIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this.columns()) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn(ind)\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested column does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tif (ind in this._headers) {\n\t\t\t\treturn this._headers[ind];\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn({header: ind});\n\t\t\t\treturn this._headers[ind];\n\t\t\t}\n\t\t\tthrow new Error(\"Unable to find column named \"+ind);\n\t\t}\n\t\tthrow new Error(\"Please provide a valid column (number or named column)\");\n\t}\n\t\n\t/**\n\t * Add a column (at the specified index)\n\t * @param {(object|string)} config\n\t * @param {(number|string)} ind\n\t */\n\taddColumn(config, ind) {\n\t\t// determine col\n\t\tlet col = this.columns(); // default\n\t\tif (config && typeof config == \"string\") {col=config}\n\t\telse if (config && (typeof config == \"object\") && (\"header\" in config)) {col = config.header}\n\t\telse if (ind!==undefined) {col=ind}\n\n\t\t// check if it exists\n\t\tif (col in this._headers) {\n\t\t\tthrow new Error(\"This column exists already: \"+config.header)\n\t\t}\n\t\t\n\t\t// add column\n\t\tlet colIndex = this.columns();\n\t\tthis._headers[col] = colIndex;\n\t\t\n\t\t// determine data\n\t\tlet data = [];\n\t\tif (config && typeof config == \"object\" && \"rows\" in config) {data=config.rows}\n\t\telse if (Array.isArray(config)) {data = config;}\n\t\t\n\t\t// add data to each row\n\t\tthis._rows.forEach((r,i) => r[colIndex] = data[i])\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of rows in this table.\n\t * When the first argument is the boolean value `true` all rows are returned.\n\t * When the first argument is a an array then the rows corresponding to the row\n\t * indices or names are returned. When all arguments except are numbers or strings\n\t * then each of those is returned.\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\trows(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._rows.length;\n\t\t}\n\t\t\n\t\tlet rows = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\trows = this._rows.map((r,i) => this.row(i, asObj))\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\telse if (Array.isArray(inds)) {\n\t\t\trows = inds.map(ind => this.row(ind));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\trows.push(this.row(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// zip if requested\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (rows.length<2) {throw new Error(\"Only one row available, can't zip\")}\n\t\t\treturn Table.zip(rows);\n\t\t}\n\t\telse {\n\t\t\treturn rows;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified row\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\trow(ind, asObj) {\n\t\tlet row = this._rows[this.getRowIndex(ind)];\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tfor (let key in this._headers) {\n\t\t\t\tobj[key] = row[this._headers[key]]\n\t\t\t}\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn row;\n\t\t}\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of columns in this table.\n\t * When the first argument is the boolean value `true` all columns are returned.\n\t * When the first argument is a number a slice of the columns is returned and if\n\t * the second argument is a number it is treated as the length of the slice to\n\t * return (note that it isn't the `end` index like with Array.slice()).\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\tcolumns(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\t\t\n\t\tlet columns = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all columns\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tfor (let i=0, len=this.columns(); i<len; i++) {\n\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// return specified columns\n\t\telse if (Array.isArray(inds)) {\n\t\t\tinds.forEach(i => columns.push(this.column(i, asObj)), this);\n\t\t}\n\t\t\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\tcolumns.push(column(ind, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (columns.length<2) {throw new Error(\"Only one column available, can't zip\")}\n\t\t\treturn Table.zip(columns);\n\t\t}\n\t\telse {\n\t\t\treturn columns;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified column\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\tcolumn(ind, asObj) {\n\t\tlet column = this.getColumnIndex(ind);\n\t\tlet data = this._rows.forEach(r => r[column]); // TODO\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tthis._rows.forEach(r => {\n\t\t\t\tobj[r[this._rowKeyColumnIndex]] = r[column];\n\t\t\t})\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn this._rows.map(r => r[column]);\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified header\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\theader(ind) {\n\t\tlet keys = Object.keys(this._headers);\n\t\tlet i = this.getColumnIndex(ind);\n\t\treturn keys[keys.findIndex(k => i==this._headers[k])]\n\t}\n\t\n\t/**\n\t * Get the specified headers\n\t * @param {(boolean|array|number|string)} inds\n\t * @returns {(number|array)}\n\t */\n\theaders(inds, ...other) {\n\t\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._headers.length;\n\t\t}\n\n\t\tlet headers = [];\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tinds = Array(Object.keys(this._headers).length).fill().map((_,i) => i);\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn inds.map(i => this.header(i));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\treturn [inds, ...other].map(i => this.header(i));\n\t\t}\n\t}\n\n\t/**\n\t * Does the specified column exist\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\thasColumn(ind) {\n\t\treturn ind in this._headers;\n\t}\n\t\n\t/**\n\t * Runs the specified function on each row.\n\t * The function is passed the row and the row index.\n\t * @param {function} fn\n\t */\n\tforEach(fn) {\n\t\tthis._rows.forEach((r,i) => fn(r,i));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMin(ind) {\n\t\treturn Math.min.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMax(ind) {\n\t\treturn Math.max.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMin(ind) {\n\t\treturn Math.min.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMax(ind) {\n\t\treturn Math.max.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowSum(ind) {\n\t\treturn Table.sum(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnSum(ind) {\n\t\treturn Table.sum(this.column(ind));\n\t}\n\n\t/**\n\t * Get the mean of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMean(ind) {\n\t\treturn Table.mean(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the mean of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMean(ind) {\n\t\treturn Table.mean(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowCounts(ind) {\n\t\treturn Table.counts(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnCounts(ind) {\n\t\treturn Table.counts(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified row\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\trowRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.row(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setRow(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified column\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\tcolumnRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.column(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setColumn(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the variance for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowVariance(ind) {\n\t\treturn Table.variance(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the variance for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnVariance(ind) {\n\t\treturn Table.variance(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\trowZScores(ind) {\n\t\treturn Table.zScores(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\tcolumnZScores(ind) {\n\t\treturn Table.zScores(this.column(ind));\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified rows\n\t * @returns {Table}\n\t */\n\trowSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i)\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn this.rowSort((a,b) => {\n\t\t\t\tlet ind;\n\t\t\t\tfor (let i=0, len=inds.length; i<len; i++) {\n\t\t\t\t\tind = this.getColumnIndex(inds[i]);\n\t\t\t\t\tif (a!=b) {\n\t\t\t\t\t\tif (typeof a[ind] == \"string\" && typeof b[ind] == \"string\") {\n\t\t\t\t\t\t\treturn a[ind].localeCompare(b[ind]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn a[ind]-b[ind];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, config)\n\t\t}\n\n\t\tif (typeof inds == \"function\") {\n\t\t\tthis._rows.sort((a,b) => {\n\t\t\t\tif (config && \"asObject\" in config && config.asObject) {\n\t\t\t\t\tlet c = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\tc[k] = a[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\tlet d = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\td[k] = b[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\treturn inds.apply(this, [c,d]);\n\t\t\t\t} else {\n\t\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (config && \"reverse\" in config && config.reverse) {\n\t\t\t\tthis._rows.reverse(); // in place\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified columns\n\t * @returns {Table}\n\t */\n\tcolumnSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i);\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\t\t\n\t\tif (Array.isArray(inds)) {\n\t\t\t\n\t\t\t// convert to column names\n\t\t\tlet headers = inds.map(ind => this.header(ind));\n\t\t\t\n\t\t\t// make sure we have all columns\n\t\t\tObject.keys(this._headers).forEach(h => {\n\t\t\t\tif (!headers.includes(h)) {headers.push(h)}\n\t\t\t});\n\t\t\t\n\t\t\t// sort names alphabetically\n\t\t\theaders.sort((a,b) => a.localeCompare(b))\n\t\t\t\n\t\t\t// reorder by columns\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t\t\n\t\t}\n\t\t\n\t\tif (typeof inds == \"function\") {\n\t\t\tlet headers = Object.keys(this._headers);\n\t\t\tif (config && \"asObject\" in headers && headers.asObject) {\n\t\t\t\theaders = headers.map((h,i) => {\n\t\t\t\t\treturn {header: h, data: this._rows.map((r,j) => this.cell(i,j))}\n\t\t\t\t})\n\t\t\t}\n\t\t\theaders.sort((a,b) => {\n\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t})\n\t\t\theaders = headers.map(h => typeof h == \"object\" ? h.header : h); // convert back to string\n\t\t\t\n\t\t\t// make sure we have all keys\n\t\t\tObject.keys(this._headers).forEach(k => {\n\t\t\t\tif (headers.indexOf(k)==-1) {headers.push(k)}\n\t\t\t})\n\t\t\t\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t}\n\t}\n\t\n\t/**\n\t * TODO\n\t * Create a chart\n\t */\n\tchart(target, config) {\n\t\tChart.create(target, config);\n\t}\n\t\n\t/**\n\t * Get a CSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoCsv(config) {\n\t\tconst cell = function(c) {\n\t\t\tlet quote = /\"/g;\n\t\t\treturn typeof c == \"string\" && (c.indexOf(\",\")>-1 || c.indexOf('\"')>-1) ? '\"'+c.replace(quote,'\\\"')+'\"' : c;\n\t\t}\n\t\treturn (config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).map(h => cell(h)).join(\",\") + \"\\n\") +\n\t\t\tthis._rows.map(row => row.map(c => cell(c)).join(\",\")).join(\"\\n\")\n\t}\n\t\n\t/**\n\t * Get a TSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoTsv(config) {\n\t\treturn config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).join(\"\\t\") + \"\\n\" +\n\t\t\tthis._rows.map(row => row.join(\"\\t\")).join(\"\\n\");\n\t}\n\t\n\t/**\n\t * Set the target's contents to an HTML representation of the Table\n\t * @param {(function|string|object)} target\n\t * @param {object} [config]\n\t * @returns {Table}\n\t */\n\thtml(target, config) {\n\t\tlet html = this.toString();\n\t\tif (typeof target == \"function\") {\n\t\t\ttarget(html)\n\t\t} else {\n\t\t\tif (typeof target == \"string\") {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t\tif (!target) {\n\t\t\t\t\tthrow \"Unable to find specified target: \"+target;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof target == \"object\" && \"innerHTML\" in target) {\n\t\t\t\ttarget.innerHTML = html;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get an HTML representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoString(config) {\n\t\treturn \"<table class='voyantTable'>\" +\n\t\t\t((config && \"caption\" in config && typeof config.caption == \"string\") ?\n\t\t\t\t\t\"<caption>\"+config.caption+\"</caption>\" : \"\") +\n\t\t\t((config && \"noHeaders\" in config && config.noHeaders) ? \"\" : (\"<thead><tr>\"+this.headers(true).map(c => \"<th>\"+c+\"</th>\").join(\"\")+\"</tr></thead>\"))+\n\t\t\t\"<tbody>\"+\n\t\t\tthis._rows.map(row => \"<tr>\"+row.map(c => \"<td>\"+(typeof c === \"number\" ? c.toLocaleString() : c)+\"</td>\").join(\"\")+\"</tr>\").join(\"\") +\n\t\t\t\"</tbody></table>\";\n\t}\n\t\n\t/**\n\t * Show a chart representing the Table\n\t * @param {object} [config]\n\t */\n\tchart(config = {}) {\n\t\t\n\t\tlet target = config.target;\n\t\tif (target === undefined) {\n\t\t\tif (Spyral && Spyral.Notebook) {\n\t\t\t\ttarget = Spyral.Notebook.getTarget().results.el.dom;\n\t\t\t} else {\n\t\t\t\ttarget = document.createElement(\"div\");\n\t\t\t\tdocument.body.appendChild(target);\n\t\t\t}\n\t\t}\n\n\t\tconfig.chart = config.chart || {};\n\t\t\n\t\tlet columnsCount = this.columns();\n\t\tlet rowsCount = this.rows();\n\t\tlet headers = this.headers(config.columns ? config.columns : true);\n\t\tlet isHeadersCategories = headers.every(h => isNaN(h));\n\n\t\tif (isHeadersCategories) {\n\t\t\tChart.setDefaultChartType(config, \"column\");\n\t\t}\n\n\t\t// set categories if not set\n\t\tconfig.xAxis = config.xAxis || {};\n\t\tconfig.xAxis.categories = config.xAxis.categories || headers;\n\t\t\n\t\t// start filling in series\n\t\tconfig.series = config.series || [];\n\t\t\n\t\t// one row, so let's take series from rows\n\t\tif (rowsCount==1) {\n\t\t\tconfig.seriesFrom = config.seriesFrom || \"rows\";\n\t\t}\n\t\t\n\t\tif (config.seriesFrom === \"rows\") {\n\t\t\tthis.rows(config.rows ? config.rows : true).forEach((row, i) => {\n\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\tconfig.series[i].data = headers.map(h => this.cell(i, h));\n\t\t\t})\n\t\t} else if (config.seriesFrom === \"columns\") {\n\t\t\tthis.columns(config.columns ? config.columns : true).forEach((col, i) => {\n\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\tconfig.series[i].data = [];\n\t\t\t\tfor (let r = 0; r < rowsCount; r++) {\n\t\t\t\t\tconfig.series[i].data.push(this.cell(r, i));\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\t\n\t\t}\n\t\t\n\t\treturn Chart.create(target, config);\n\t}\n\n\t/**\n\t * Create a new Table\n\t * @param {(object|array|string|number)} data\n\t * @param {object} config\n\t * @returns {Table}\n\t */\n\tstatic create(data, config, ...other) {\n\t\treturn new Table(data, config, ...other);\n\t}\n\t\n\t/**\n\t * Fetch a Table from a source\n\t * @param {string|Request} input\n\t * @param {object} api\n\t * @param {object} config\n\t * @returns {Promise}\n\t */\n\tstatic fetch(input, api, config) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\twindow.fetch(input, api).then(response => {\n\t\t\t\tif (!response.ok) {throw new Error(response.status + \" \" + response.statusText);}\n\t\t\t\tresponse.text().then(text => {\n\t\t\t\t\tresolve(Table.create(text, config || api))\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Get the count of each unique value in the data\n\t * @param {array} data\n\t * @returns {object}\n\t */\n\tstatic counts(data) {\n\t\tlet vals = {};\n\t\tdata.forEach(v => v in vals ? vals[v]++ : vals[v]=1);\n\t\treturn vals;\n\t}\n\t\n\t/**\n\t * Compare two values\n\t * @param {(number|string)} a\n\t * @param {(number|string)} b\n\t * @returns {number}\n\t */\n\tstatic cmp(a, b) {\n\t\treturn typeof a == \"string\" && typeof b == \"string\" ? a.localeCompare(b) : a-b;\n\t}\n\n\t/**\n\t * Get the sum of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic sum(data) {\n\t\treturn data.reduce((a,b) => a+b, 0);\n\t}\n\t\n\t/**\n\t * Get the mean of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic mean(data) {\n\t\treturn Table.sum(data) / data.length;\n\t}\n\t\n\t/**\n\t * Get rolling mean for the provided values\n\t * @param {array} data\n\t * @param {number} neighbors\n\t * @returns {array}\n\t */\n\tstatic rollingMean(data, neighbors) {\n\t\t// https://stackoverflow.com/questions/41386083/plot-rolling-moving-average-in-d3-js-v4/41388581#41387286\n\t\treturn data.map((val, idx, arr) => {\n\t\t\tlet start = Math.max(0, idx - neighbors), end = idx + neighbors\n\t\t\tlet subset = arr.slice(start, end + 1)\n\t\t\tlet sum = subset.reduce((a,b) => a + b)\n\t\t\treturn sum / subset.length\n\t\t});\n\t}\n\t\n\t/**\n\t * Get the variance for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic variance(data) {\n\t\tlet m = Table.mean(data);\n\t\treturn Table.mean(data.map(num => Math.pow(num-m, 2)));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic standardDeviation(data) {\n\t\treturn Math.sqrt(Table.variance(data));\n\t}\n\t\n\t/**\n\t * Get the z scores for the provided values\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zScores(data) {\n\t\tlet m = Table.mean(data);\n\t\tlet s = Table.standardDeviation(data);\n\t\treturn data.map(num => (num-m) / s);\n\t}\n\t\n\t/**\n\t * Perform a zip operation of the provided arrays {@link https://en.wikipedia.org/wiki/Convolution_(computer_science)}\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zip(...data) {\n\t\n\t\t// we have a single nested array, so let's recall with flattened arguments\n\t\tif (data.length==1 && Array.isArray(data) && data.every(d => Array.isArray(d))) {\n\t\t\treturn Table.zip.apply(null, ...data);\n\t\t}\n\t\t\n\t\t// allow arrays to be of different lengths\n\t\tlet len = Math.max.apply(null, data.map(d => d.length));\n\t\treturn new Array(len).fill().map((_,i) => data.map(d => d[i]));\n\t}\n}\n\n// this seems like a good balance between a built-in flexible parser and a heavier external parser\n// https://lowrey.me/parsing-a-csv-file-in-es6-javascript/\nconst regex = /(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*))\\s*(?:,|$)/g;\nfunction parseCsvLine(line) {\n\tlet arr = [];\n\tline.replace(regex, (m0, m1, m2, m3) => {\n\t\tif (m1 !== undefined) {\n\t\t\tarr.push(m1.replace(/\\\\'/g, \"'\"));\n\t\t} else if (m2 !== undefined) {\n\t\t\tarr.push(m2.replace(/\\\\\"/g, \"\\\"\"));\n\t\t} else if (m3 !== undefined) {\n\t\t\tarr.push(m3);\n\t\t}\n\t\treturn \"\";\n\t});\n\tif (/,\\s*$/.test(line)) {arr.push(\"\");}\n\treturn arr;\n\t\n}\n\nexport default Table\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Notebook {\n\t/**\n\t * Returns the previous block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getPreviousBlock() {\n\t\treturn Spyral.Notebook.getBlock(-1);\n\t}\n\t/**\n\t * Returns the next block.\n\t * @static\n\t * @returns {string}\n\t */\n\tstatic getNextBlock() {\n\t\treturn Spyral.Notebook.getBlock(1);\n\t}\n\t/**\n\t * Returns the current block.\n\t * @static\n\t * @params {number} [offset] If specified, returns the block whose position is offset from the current block\n\t * @returns {string}\n\t */\n\tstatic getBlock() {\n\t\tif (Voyant && Voyant.notebook) {\n\t\t\treturn Voyant.notebook.Notebook.currentNotebook.getBlock.apply(Voyant.notebook.Notebook.currentNotebook, arguments)\n\t\t}\n\t}\n\t/**\n\t * \n\t * @param {*} contents \n\t * @param {*} config \n\t */\n\tstatic show(contents, config) {\n\t\tvar contents = Spyral.Util.toString(contents, config);\n\t\tif (contents instanceof Promise) {\n\t\t\tcontents.then(c => Voyant.notebook.util.Show.show(c))\n\t\t} else {\n\t\t\tVoyant.notebook.util.Show.show(contents);\n\t\t}\n\t}\n\t/**\n\t * @returns {string|element}\n\t */\n\tstatic getTarget() {\n\t\tif (Voyant && Voyant.notebook && Voyant.notebook.Notebook.currentBlock) {\n\t\t\treturn Voyant.notebook.Notebook.currentBlock;\n\t\t} else {\n\t\t\tconst target = document.createElement(\"div\");\n\t\t\tdocument.body.appendChild(target);\n\t\t\treturn target;\n\t\t}\n\t}\n}\n\nexport { Notebook }\n","/**\n * A helper for working with the Voyant Notebook app.\n * @memberof Spyral\n * @namespace\n */\nclass Util {\n\t/**\n\t * Generates a random ID of the specified length.\n\t * @static\n\t * @param {number} len The length of the ID to generate?\n\t * @returns {string}\n\t */\n\tstatic id(len) {\n\t\tlen = len || 8;\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n\t\treturn Math.random().toString(36).substring(2, 2+len) + Math.random().toString(36).substring(2, 2+len)\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} contents \n\t * @param {*} config \n\t * @returns {string}\n\t */\n\tstatic toString(contents, config) {\n\t\tif (contents.constructor === Array || contents.constructor===Object) {\n\t\t\tcontents = JSON.stringify(contents);\n\t\t\tif (contents.length>500) {\n\t\t\t\tcontents = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn contents.toString();\n\t}\n\t/**\n\t * \n\t * @static\n\t * @param {*} before \n\t * @param {*} more \n\t * @param {*} after \n\t */\n\tstatic more(before, more, after) {\n\t\treturn before + '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\n\n\t}\n}\n\nexport { Util }\n","/**\n * A class for storing Notebook metadata\n * @memberof Spyral\n */\nclass Metadata {\n\t/**\n\t * The Metadata config object\n\t * @typedef {object} MetadataConfig\n\t * @property {string} title The title of the Corpus\n\t * @property {string} author The author of the Corpus\n\t * @property {string} description The description of the Corpus\n\t * @property {array} keywords The keywords for the Corpus\n\t * @property {string} created When the Corpus was created\n\t * @property {string} language The language of the Corpus\n\t * @property {string} license The license for the Corpus\n\t */\n\n\t/** \n\t * The metadata constructor.\n\t * @constructor\n\t * @param {MetadataConfig} config The metadata config object\n\t */\n\tconstructor(config) {\n\t\t['title', 'author', 'description', 'keywords', 'modified', 'created', 'language', 'license'].forEach(key => {\n\t\t\tthis[key] = undefined;\n\t\t})\n\t\tthis.version = \"0.1\"; // may be changed by config\n\t\tif (config instanceof HTMLDocument) {\n\t\t\tconfig.querySelectorAll(\"meta\").forEach(function(meta) {\n\t\t\t\tvar name =  meta.getAttribute(\"name\");\n\t\t\t\tif (name && this.hasOwnProperty(name)) {\n\t\t\t\t\tvar content = meta.getAttribute(\"content\");\n\t\t\t\t\tif (content) {\n\t\t\t\t\t\tthis[name] = content;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\t\t} else {\n\t\t\tthis.set(config);\n\t\t}\n\t\tif (!this.created) {this.setDateNow(\"created\")}\n\t}\n\n\t/**\n\t * Set metadata properties.\n\t * @param {object} config A config object\n\t */\n\tset(config) {\n\t\tfor (var key in config) {\n\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\tthis[key] = config[key];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the specified field to the current date and time.\n\t * @param {string} field \n\t */\n\tsetDateNow(field) {\n\t\tthis[field] = new Date().toISOString();\n\t}\n\n\t/**\n\t * Gets the specified field as a short date.\n\t * @param {string} field\n\t * @returns {string|undefined}\n\t */\n\tshortDate(field) {\n\t\treturn this[field] ? (new Date(Date.parse(this[field])).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })) : undefined;\n\t}\n\n\t/**\n\t * Gets the fields as a set of HTML meta tags.\n\t * @returns {string}\n\t */\n\tgetHeaders() {\n\t\tvar quotes = /\"/g, newlines = /(\\r\\n|\\r|\\n)/g, tags = /<\\/?\\w+.*?>/g,\n\t\t\theaders = \"<title>\"+(this.title || \"\").replace(tags,\"\")+\"</title>\\n\"\n\t\tfor (var key in this) {\n\t\t\tif (this[key]) {\n\t\t\t\theaders+='<meta name=\"'+key+'\" content=\"'+this[key].replace(quotes, \"&quot;\").replace(newlines, \" \")+'\">';\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n}\n\nexport { Metadata }\n","import {Corpus, Table, Load} from 'voyant';\n\nimport {Notebook} from './notebook';\nimport {Util} from './util';\nimport {Metadata} from './metadata';\n\n/**\n * @namespace Spyral\n */\nconst Spyral = {\n\tNotebook,\n\tUtil,\n\tMetadata,\n\tCorpus,\n\tTable,\n\tLoad\n};\n\nexport default Spyral;\n"],"names":["Load","baseUrl","config","params","url","URL","trombone","all","key","undefined","searchParams","Object","keys","map","encodeURIComponent","join","opt","length","set","method","headers","body","fetch","then","response","ok","json","text","Voyant","util","DetailedError","msg","error","split","shift","details","showMsg","alert","window","console","Error","urlToFetch","err","DOMParser","parseFromString","load","isDocumentsMode","mode","documents","Corpus","id","corpusid","me","Promise","resolve","tool","corpus","data","documentsMetadata","metadata","alias","documentsCount","toLocaleString","lexicalTokensCount","lexicalTypesCount","doc","title","texts","documentTerms","terms","corpusTerms","documentTokens","tokens","limit","noOthers","t","term","query","warn","documentContexts","contexts","corpusCollocates","collocates","documentNgrams","ngrams","corpusNgrams","termCorrelations","correlations","_tool","reject","isTool","obj","test","isConfig","lastArg","arguments","val","defaultAttributes","width","height","style","out","i","forTool","attr","voyantUrl","append","assign","forEach","Array","isArray","summary","setBaseUrl","api","titles","words","phrases","promise","input","name","args","apply","Chart","target","Highcharts","subtitle","credits","xAxis","yAxis","type","chart","Table","other","_rows","_headers","_rowKeyColumnIndex","rows","concat","filter","v","from","every","a","indexOf","String","format","line","trim","values","parseCsvLine","isNaN","setHeaders","push","Number","hasHeaders","count","freqs","counts","orientation","item","addRow","rowSort","b","cmp","columnSort","cell","addRows","rowKeyColumn","columns","rowKeyColum","h","addColumn","row","setRow","ind","create","rowIndex","getRowIndex","d","setCell","column","hasColumn","columnIndex","getColumnIndex","value","overwrite","rowInd","colInd","updateCell","findIndex","r","arr","header","col","colIndex","inds","asObj","zip","len","k","fill","_","fn","Math","min","max","sum","mean","neighbors","means","rollingMean","setColumn","variance","standardDeviation","zScores","localeCompare","sort","asObject","c","reverse","includes","j","quote","replace","noHeaders","html","toString","document","querySelector","innerHTML","caption","Spyral","Notebook","getTarget","results","el","dom","createElement","appendChild","columnsCount","rowsCount","isHeadersCategories","setDefaultChartType","categories","series","seriesFrom","status","statusText","vals","reduce","idx","start","end","subset","slice","m","num","pow","sqrt","s","regex","m0","m1","m2","m3","getBlock","notebook","currentNotebook","contents","Util","Show","show","currentBlock","random","substring","constructor","JSON","stringify","before","more","after","Metadata","version","HTMLDocument","querySelectorAll","meta","getAttribute","hasOwnProperty","content","created","setDateNow","field","Date","toISOString","parse","toLocaleDateString","year","month","day","quotes","newlines","tags"],"mappings":"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"}