{"version":3,"file":"spyral.js","sources":["../node_modules/voyant/src/load.js","../node_modules/voyant/src/corpus.js","../node_modules/voyant/src/chart.js","../node_modules/voyant/src/table.js","../node_modules/voyant/src/categories.js","../src/notebook.js","../src/util.js","../src/metadata.js","../src/index.js"],"sourcesContent":["/**\n * Class embodying Load functionality.\n * @memberof Spyral\n * @class\n */\nclass Load {\n\tstatic baseUrl;\n\n\t/**\n\t * Set the base URL for use with the Load class\n\t * @param {string} baseUrl \n\t */\n\tstatic setBaseUrl(baseUrl) {\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\t/**\n\t * Make a call to trombone\n\t * @param {object} config \n\t * @param {object} params\n\t * @returns {JSON}\n\t */\n\tstatic trombone(config = {}, params) {\n\t\tlet url = new URL(config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\tlet all = { ...config, ...params };\n\t\tfor (var key in all) {\n\t\t\tif (all[key] === undefined) { delete all[key] }\n\t\t}\n\t\tlet searchParams = Object.keys(all).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(all[key])).join(\"&\")\n\t\tlet opt = {};\n\t\tif (searchParams.length < 800 || (\"method\" in all && all[\"method\"] == \"GET\")) {\n\t\t\tfor (var key in all) { url.searchParams.set(key, all[key]); }\n\t\t} else {\n\t\t\topt = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n\t\t\t\tbody: searchParams\n\t\t\t}\n\t\t}\n\t\treturn fetch(url.toString(), opt).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json()\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\tmsg: \"\",\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Fetch content from a URL, often resolving cross-domain data constraints\n\t * @param {string} urlToFetch \n\t * @param {object} config\n\t * @returns {Response}\n\t */\n\tstatic load(urlToFetch, config) {\n\t\tlet url = new URL(config && config.trombone ? config.trombone : this.baseUrl + \"trombone\");\n\t\turl.searchParams.set(\"fetchData\", urlToFetch);\n\t\treturn fetch(url.toString()).then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (Voyant && Voyant.util && Voyant.util.DetailedError) {\n\t\t\t\t\t\tnew Voyant.util.DetailedError({\n\t\t\t\t\t\t\terror: text.split(/(\\r\\n|\\r|\\n)/).shift(),\n\t\t\t\t\t\t\tdetails: text\n\t\t\t\t\t\t}).showMsg();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(text.split(/(\\r\\n|\\r|\\n)/).shift())\n\t\t\t\t\t\tif (window.console) { console.error(text) }\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(text);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(err => { throw err })\n\t}\n\n\t/**\n\t * Fetch HTML content from a URL\n\t * @param {string} url \n\t * @returns {Document}\n\t */\n\tstatic html(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/html'));\n\t}\n\n\t/**\n\t * Fetch XML content from a URL\n\t * @param {string} url \n\t * @returns {XMLDocument}\n\t */\n\tstatic xml(url) {\n\t\treturn this.text(url).then(text => new DOMParser().parseFromString(text, 'text/xml'));\n\t}\n\n\t/**\n\t * Fetch JSON content from a URL\n\t * @param {string} url \n\t * @returns {JSON}\n\t */\n\tstatic json(url) {\n\t\treturn this.load(url).then(response => response.json());\n\t}\n\n\t/**\n\t * Fetch text content from a URL\n\t * @param {string} url \n\t * @returns {string}\n\t */\n\tstatic text(url) {\n\t\treturn this.load(url).then(response => response.text());\n\t}\n}\n\nexport default Load\n","import Load from './load';\n\nfunction isDocumentsMode(config) {\n\treturn config && ((config.mode && config.mode === \"documents\") || config.documents);\n}\n\n/**\n * The Corpus class in Spyral. Here's a simple example:\n * \n * \tloadCorpus(\"Hello World!\").summary();\n * \n * This loads a corpus and returns an asynchronous `Promise`, but all of the methods\n * of Corpus are appended to the Promise, so {@link #summary} will be called\n * once the Corpus promise is fulfilled. It's equivalent to the following:\n *\n * \tloadCorpus(\"Hello World!\").then(corpus -> corpus.summary());\n *\n * The `loadCorpus` method is actually an alias, so the full form of this would actually be something like this:\n * \n * \tSpyral.Corpus.load(\"Hello World\").then(corpus -> corpus.summary());\n * \n * But we like our short-cuts, so the first form is the preferred form.\n * \n * There is a lot of flexibility in how corpora are created, here's a summary of the parameters:\n * \n * - **sources**: {@link #corpus}, {@link #input}\n * - **formats**:\n * \t- **Text**: {@link #inputRemoveFrom}, {@link #inputRemoveFromAfter}, {@link #inputRemoveUntil}, {@link #inputRemoveUntilAfter}\n * \t- **XML**: {@link #xmlAuthorXpath}, {@link #xmlCollectionXpath}, {@link #xmlContentXpath}, {@link #xmlExtraMetadataXpath}, {@link #xmlKeywordXpath}, {@link #xmlPubPlaceXpath}, {@link #xmlPublisherXpath}, {@link #xmlTitleXpath}\n * \t- **Tables**: {@link #tableAuthor}, {@link #tableContent}, {@link #tableDocuments}, {@link #tableNoHeadersRow}, {@link #tableTitle}\n * - **other**: {@link #inputFormat}, {@link #subTitle}, {@link #title}, {@link #tokenization}\n\n * @memberof Spyral\n * @class\n */\nclass Corpus {\n\t\n/**\n * @cfg {String} corpus The ID of a previously created corpus.\n * \n * A corpus ID can be used to try to retrieve a corpus that has been previously created.\n * Typically the corpus ID is used as a first string argument, with an optional second\n * argument for other parameters (especially those to recreate the corpus if needed).\n * \n * \t\tnew Corpus(\"goldbug\");\n * \n * \t\tnew Corpus(\"goldbug\", {\n *\t\t\t// if corpus ID \"goldbug\" isn't found, use the input\n * \t\t\tinput: \"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\",\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n */\n\n/**\n * @cfg {String/String[]} input Input sources for the corpus.\n * \n * The input sources can be either normal text or URLs (starting with `http`).\n * \n * Typically input sources are specified as a string or an array in the first argument, with an optional second argument for other parameters.\n * \n * \t\tnew Corpus(\"Hello Voyant!\"); // one document with this string\n * \n * \t\tnew Corpus([\"Hello Voyant!\", \"How are you?\"]); // two documents with these strings\n * \n * \t\tnew Corpus(\"http://hermeneuti.ca/\"); // one document from URL\n * \n * \t\tnew Corpus([\"http://hermeneuti.ca/\", \"https://en.wikipedia.org/wiki/Voyant_Tools\"]); // two documents from URLs\n * \n * \t\tnew Corpus(\"Hello Voyant!\", \"http://hermeneuti.ca/\"]); // two documents, one from string and one from URL\n * \n * \t\tnew Corpus(\"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\", {\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n * \n * \t\t// use a corpus ID but also specify an input source if the corpus can't be found\n * \t\tnew Corpus(\"goldbug\", {\n * \t\t\tinput: \"https://gist.githubusercontent.com/sgsinclair/84c9da05e9e142af30779cc91440e8c1/raw/goldbug.txt\",\n * \t\t\tinputRemoveUntil: 'THE GOLD-BUG',\n * \t\t\tinputRemoveFrom: 'FOUR BEASTS IN ONE'\n * \t\t});\n */\n\n/**\n * @cfg {String} inputFormat The input format of the corpus (the default is to auto-detect).\n * \n * The auto-detect format is usually reliable and inputFormat should only be used if the default\n * behaviour isn't desired. Most of the relevant values are used for XML documents:\n * \n * - **DTOC**: Dynamic Table of Contexts XML format\n * - **HTML**: Hypertext Markup Language\n * - **RSS**: Really Simple Syndication XML format\n * - **TEI**: Text Encoding Initiative XML format\n * - **TEICORPUS**: Text Encoding Initiative Corpus XML format\n * - **TEXT**: plain text\n * - **XML**: treat the document as XML (sometimes overridding auto-detect of XML vocabularies like RSS and TEI)\n * \n * Other formats include **PDF**, **MSWORD**, **XLSX**, **RTF**, **ODT**, and **ZIP** (but again, these rarely need to be specified).\n */\n\n/**\n * @cfg {String} tableDocuments Determine what is a document in a table (the entire table, by row, by column); only used for table-based documents.\n * \n * Possible values are:\n * \n * - **undefined or blank** (default): the entire table is one document\n * - **rows**: each row of the table is a separate document\n * - **columns**: each column of the table is a separate document\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableContent Determine how to extract body content from the table; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableAuthor Determine how to extract the author from each document; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableTitle Determine how to extract the title from each document; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableContent Determine how to extract body content from the table; only used for table-based documents.\n * \n * Columns are referred to by numbers, the first is column 1 (not 0).\n * You can specify separate columns by using a comma or you can combined the contents of columns/cells by using a plus sign.\n * \n * Some examples:\n * \n * - **1**: use column 1\n * - **1,2**: use columns 1 and 2 separately\n * - **1+2,3**: combine columns 1 and two and use column 3 separately\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tableNoHeadersRow Determine if the table has a first row of headers; only used for table-based documents.\n * \n * Provide a value of \"true\" if there is no header row, otherwise leave it blank or undefined (default).\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tables).\n */\n\n/**\n * @cfg {String} tokenization The tokenization strategy to use\n * \n * This should usually be undefined, unless specific behaviour is required. These are the valid values:\n * \n * - **undefined or blank**: use the default tokenization (which uses Unicode rules for word segmentation)\n * - **wordBoundaries**: use any Unicode character word boundaries for tokenization\n * - **whitespace**: tokenize by whitespace only (punctuation and other characters will be kept with words)\n * \n * See also [Creating a Corpus Tokenization](#!/guide/corpuscreator-section-tokenization).\n */\n\n/**\n * @cfg {String} xmlContentXpath The XPath expression that defines the location of document content (the body); only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><head>Hello world!</head><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlContentXpath: \"//body\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlTitleXpath The XPath expression that defines the location of each document's title; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><title>Hello world!</title><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlTitleXpath: \"//title\"\n * \t\t}); // title would be: \"Hello world!\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlAuthorXpath The XPath expression that defines the location of each document's author; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><author>Stéfan Sinclair</author><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlAuthorXpath: \"//author\"\n * \t\t}); // author would be: \"Stéfan Sinclair\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlPubPlaceXpath The XPath expression that defines the location of each document's publication place; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><pubPlace>Montreal</pubPlace><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlPubPlaceXpath: \"//pubPlace\"\n * \t\t}); // publication place would be: \"Montreal\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlPublisherXpath The XPath expression that defines the location of each document's publisher; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><publisher>The Owl</publisher><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlPublisherXpath: \"//publisher\"\n * \t\t}); // publisher would be: \"The Owl\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlKeywordXpath The XPath expression that defines the location of each document's keywords; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><keyword>text analysis</keyword><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlKeywordXpath: \"//keyword\"\n * \t\t}); // publisher would be: \"text analysis\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlCollectionXpath The XPath expression that defines the location of each document's collection name; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><collection>documentation</collection><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlCollectionXpath: \"//collection\"\n * \t\t}); // publisher would be: \"documentation\"\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlGroupByXpath The XPath expression that defines the location of each document's collection name; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><sp s='Juliet'>Hello!</sp><sp s='Romeo'>Hi!</sp><sp s='Juliet'>Bye!</sp></doc>\", {\n * \t\t\t xmlDocumentsXPath: '//sp',\n *           xmlGroupByXpath: \"//@s\"\n * \t\t}); // two docs: \"Hello! Bye!\" (Juliet) and \"Hi!\" (Romeo)\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlExtraMetadataXpath A value that defines the location of other metadata; only used for XML-based documents.\n * \n * \t\tnew Corpus(\"<doc><tool>Voyant</tool><phase>1</phase><body>This is Voyant!</body></doc>\", {\n * \t\t\t xmlExtraMetadataXpath: \"tool=//tool\\nphase=//phase\"\n * \t\t}); // tool would be \"Voyant\" and phase would be \"1\"\n * \n * Note that `xmlExtraMetadataXpath` is a bit different from the other XPath expressions in that it's\n * possible to define multiple values (each on its own line) in the form of name=xpath.\n * \n * See also [Creating a Corpus with XML](#!/guide/corpuscreator-section-xml).\n */\n\n/**\n * @cfg {String} xmlExtractorTemplate Pass the XML document through the XSL template located at the specified URL before extraction (this is ignored in XML-based documents).\n * \n * This is an advanced parameter that allows you to define a URL of an XSL template that can\n * be called *before* text extraction (in other words, the other XML-based parameters apply\n * after this template has been processed).\n */\n\n/**\n * @cfg {String} inputRemoveUntil Omit text up until the start of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tnew Corpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveUntil: \"This\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveUntilAfter Omit text up until the end of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tnew Corpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveUntilAfter: \"world!\"\n * \t\t}); // document would be: \"This is Voyant!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveFrom Omit text from the start of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tnew Corpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveFrom: \"This\"\n * \t\t}); // document would be: \"Hello world!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} inputRemoveFromAfter Omit text from the end of the matching regular expression (this is ignored in XML-based documents).\n * \n * \t\tnew Corpus(\"Hello world! This is Voyant!\", {\n * \t\t\t inputRemoveFromAfter: \"world!\"\n * \t\t}); // document would be: \"Hello world!\"\n * \n * See also [Creating a Corpus with Text](#!/guide/corpuscreator-section-text).\n */\n\n/**\n * @cfg {String} subTitle A sub-title for the corpus.\n * \n * This is currently not used, except in the Dynamic Table of Contexts skin. Still, it may be worth specifying a subtitle for later use.\n */\n\n/**\n * @cfg {String} title A title for the corpus.\n * \n * This is currently not used, except in the Dynamic Table of Contexts skin. Still, it may be worth specifying a title for later use.\n */\n \n /**\n * @cfg {String} curatorTsv a simple TSV of paths and labels for the DToC interface\n *\n * The DToC skin allows curation of XML tags and attributes in order to constrain the entries shown in the interface or to provide friendlier labels. This assumes plain text unicode input with one definition per line where the simple XPath expression is separated by a tab from a label.\n *\n *   \t p    \t paragraph\n *   \t ref[@target*=\"religion\"]    \t religion\n *\n  * For more information see the DToC documentation on [Curating Tags](http://cwrc.ca/Documentation/public/index.html#DITA_Files-Various_Applications/DToC/CuratingTags.html)\n */\n\t\n\t/*\n\t * Create a new Corpus using the specified Corpus ID\n\t * @constructor\n\t * @param {string} id The Corpus ID\n\t */\n\tconstructor(id) {\n\t\tthis.corpusid = id;\n\t}\n\n\tstatic Load = Load;\n\n\tstatic setBaseUrl(baseUrl) {\n\t\tLoad.setBaseUrl(baseUrl);\n\t}\n\n\t/**\n\t * Get the ID\n\t * @return {string} The ID\n\t */\n\tid() {\n\t\tlet me = this\n\t\treturn new Promise(resolve => resolve(me.corpusid));\n\t}\n\n\t/**\n\t * Create a Corpus and return the ID\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic id(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.id(api || config));\n\t}\n\n\t/**\n\t * Load the metadata\n\t * @param {*} config \n\t * @param {*} params \n\t */\n\tmetadata(config, params) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentsMetadata\" : \"corpus.CorpusMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => isDocumentsMode(config) ? data.documentsMetadata.documents : data.corpus.metadata)\n\t}\n\n\t/**\n\t * Create a Corpus and return the metadata\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic metadata(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.metadata(api || config));\n\t}\n\t\n\tsummary(config) {\n\t\treturn this.metadata().then(data => {\n\t\t\t// TODO: make this a template\n\t\t\treturn `This corpus (${data.alias ? data.alias : data.id}) has ${data.documentsCount.toLocaleString()} documents with ${data.lexicalTokensCount.toLocaleString()} total words and ${data.lexicalTypesCount.toLocaleString()} unique word forms.`\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the summary\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic summary(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.summary(api || config));\n\t}\n\t\n\ttitles(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentsMetadata\",\n\t\t\tcorpus: this.corpusid\n\t\t})\n\t\t.then(data => data.documentsMetadata.documents.map(doc => doc.title))\n\t}\n\n\t/**\n\t * Create a Corpus and return the titles\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic titles(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.titles(api || config));\n\t}\n\t\n\t/**\n\t * Get the text\n\t * @param {*} config \n\t */\n\ttext(config) {\n\t\treturn this.texts(config).then(data => data.join(\"\\n\"))\n\t}\n\n\t/**\n\t * Create a Corpus and return the text\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic text(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.text(api || config));\t\n\t}\n\t\n\ttexts(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusTexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.texts.texts)\n\t}\n\n\t/**\n\t * Create a Corpus and return the texts\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic texts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.texts(api || config));\t\n\t}\n\t\n\tterms(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTerms\" : \"corpus.CorpusTerms\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentTerms.terms : data.corpusTerms.terms)\n\t}\n\n\t/**\n\t * Create a Corpus and return the terms\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic terms(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.terms(api || config));\n\t}\n\t\n\ttokens(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens)\n\t}\n\n\t/**\n\t * Create a Corpus and return the tokens\n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tokens(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tokens(api || config));\n\t}\n\n\twords(config = {}) {\n\t\t// by default DocumentTokens limits to 50 which probably isn't expected\n\t\tif (!(\"limit\" in config)) {config.limit=0;}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentTokens\",\n\t\t\tnoOthers: true,\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentTokens.tokens.map(t => t.term))\n\t}\n\n\t/**\n\t * Create a Corpus and return an array of lexical forms (words) in document order.\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic words(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.words(api || config));\n\t}\n\t\n\tcontexts(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for contexts request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.DocumentContexts\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.documentContexts.contexts)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the contexts\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic contexts(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.contexts(api || config));\n\t}\n\t\n\tcollocates(config) {\n\t\tif ((!config || !config.query) && console) {console.warn(\"No query provided for collocates request.\")}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: \"corpus.CorpusCollocates\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.corpusCollocates.collocates)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the collocates\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic collocates(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.collocates(api || config));\n\t}\n\n\tphrases(config) {\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentNgrams\" : \"corpus.CorpusNgrams\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => isDocumentsMode(config) ? data.documentNgrams.ngrams : data.corpusNgrams.ngrams)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the phrases\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic phrases(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.phrases(api || config));\n\t}\n\t\n\tcorrelations(config) {\n\t\tif ((!config || !config.query) && console) {\n\t\t\tconsole.warn(\"No query provided for correlations request.\")\n\t\t\tif (!isDocumentsMode(config)) {\n\t\t\t\tthrow new Error(\"Unable to run correlations for a corpus without a query.\")\n\t\t\t}\n\t\t}\n\t\treturn Load.trombone(config, {\n\t\t\ttool: isDocumentsMode(config) ? \"corpus.DocumentTermCorrelations\" : \"corpus.CorpusTermCorrelations\",\n\t\t\tcorpus: this.corpusid\n\t\t}).then(data => data.termCorrelations.correlations)\n\t}\n\t\n\t/**\n\t * Create a Corpus and return the correlations\n\t * @param {object} config \n\t * @param {object} api \n\t */\n\tstatic correlations(config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.correlations(api || config));\n\t}\n\t\n\ttool(_tool, config = {}) {\n\t\tlet me = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tlet isTool = function(obj) {return obj && (typeof obj==\"string\" && /\\W/.test(obj)==false) || (typeof obj == \"object\" && \"forTool\" in obj)}\n\t\t\tlet isConfig = function(obj) {return obj && typeof obj == \"object\" && !(\"forTool\" in obj)}\n\t\t\tlet lastArg = arguments[arguments.length-1];\n\t\t\tconfig = isConfig(lastArg) ? lastArg : {};\n\t\t\t\n\t\t\t// we have all tools and we'll show them individually\n\t\t\tif (isTool(_tool) && (isTool(lastArg) || isConfig(lastArg))) {\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 350px; height: 350px\",\n\t\t\t\t\tfloat: \"right\"\n\t\t\t\t}\n\t\t\t\tlet out = \"\";\n\t\t\t\tfor (let i=0; i<arguments.length; i++) {\n\t\t\t\t\tlet t = arguments[i];\n\t\t\t\t\tif (isTool(t)) {\n\t\t\t\t\t\tif (typeof t == \"string\") {t = {forTool: t}} // make sure we have object\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build iframe tag\n\t\t\t\t\t\tout+=\"<iframe \";\n\t\t\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\t\t\tvar val = (attr in t ? t[attr] : undefined) || (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// build url\n\t\t\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl) + \"tool/\"+t.forTool+\"/\");\n\t\t\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\t\t\tlet all = Object.assign(t,config);\n\t\t\t\t\t\tObject.keys(all).forEach(key => {\n\t\t\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\t\t\turl.searchParams.append(key, all[key])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// finish tag\n\t\t\t\t\t\tout+=' src=\"'+url+'\"></iframe>'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn resolve(out);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(_tool)) {\n\t\t\t\t\t_tool = _tool.join(\";\")\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet defaultAttributes = {\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined,\n\t\t\t\t\tstyle: \"width: 90%; height: \"+(350*(_tool ? _tool : \"\").split(\";\").length)+\"px\"\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// build iframe tag\n\t\t\t\tlet out =\"<iframe \";\n\t\t\t\tfor (let attr in defaultAttributes) {\n\t\t\t\t\tvar val = (attr in config ? config[attr] : undefined) || (attr in defaultAttributes ? defaultAttributes[attr] : undefined);\n\t\t\t\t\tif (val!==undefined) {\n\t\t\t\t\t\tout+=' '+attr+'=\"'+val+'\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// build url\n\t\t\t\tvar url = new URL((config && config.voyantUrl ? config.voyantUrl : Load.baseUrl)+(_tool ? (\"?view=customset&tableLayout=\"+_tool) : \"\"));\n\t\t\t\turl.searchParams.append(\"corpus\", me.corpusid);\t\t\t\n\t\t\t\t// add API values from config (some may be ignored)\n\t\t\t\tObject.keys(config).forEach(key => {\n\t\t\t\t\tif (key !==\"input\" && !(key in defaultAttributes)) {\n\t\t\t\t\t\turl.searchParams.append(key, config[key])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve(out+\" src='\"+url+\"'></iframe\");\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Create a Corpus and return the tool\n\t * @param {*} tool \n\t * @param {*} config \n\t * @param {*} api \n\t */\n\tstatic tool(tool, config, api) {\n\t\treturn Corpus.load(config).then(corpus => corpus.tool(tool, config, api));\n\t}\n\n\ttoString() {\n\t\treturn this.summary()\n\t}\n\t\t\n\t/**\n\t * Create a new Corpus using the provided config\n\t * @param {object} config \n\t */\n\tstatic create(config) {\n\t\treturn Corpus.load(config);\n\t}\n\n\t/**\n\t * Load a Corpus using the provided config\n\t * @param {object} config The Corpus config\n\t */\n\tstatic load(config) {\n\t\tconst promise = new Promise(function(resolve, reject) {\n\t\t\tif (config instanceof Corpus) {\n\t\t\t\tresolve(config);\n\t\t\t} else if (typeof config === \"string\" && config.length>0 && /\\W/.test(config)===false) {\n\t\t\t\tresolve(new Corpus(config)); \n\t\t\t} else if (typeof config === \"object\" && config.corpus) {\n\t\t\t\tresolve(new Corpus(config.corpus))\n\t\t\t} else {\n\t\t\t\tif (typeof config === \"string\") {config = {input: config}}\n\t\t\t\tif (config && config.input) {\n\t\t\t\t\tLoad.trombone(config, {tool: \"corpus.CorpusMetadata\"})\n\t\t\t\t\t.then(data => resolve(new Corpus(data.corpus.metadata.id)))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t[\"id\",\"metadata\",\"summary\",\"titles\",\"text\",\"texts\",\"terms\",\"tokens\",\"words\",\"contexts\",\"collocates\",\"phrases\",\"correlations\",\"tool\"].forEach(name => {\n\t\t\tpromise[name] = function() {\n\t\t\t\tvar args = arguments\n\t\t\t\treturn promise.then(corpus => {return corpus[name].apply(corpus, args)})\n\t\t\t}\n\t\t})\n\t\tpromise.assign = function(name) {\n\t\t\tthis.then(corpus => {window[name] = corpus; return corpus})\n\t\t}\n\n\t\treturn promise;\n\t}\n}\n\nexport default Corpus\n","/**\n * Class representing a Chart.\n * @memberof Spyral\n * @class\n */\nclass Chart {\n\t/**\n\t * The Highcharts config object\n\t * @typedef {object} HighchartsConfig\n\t * @property {(string|object)} title\n\t * @property {(string|object)} subtitle\n\t * @property {object} credits\n\t * @property {object} xAxis\n\t * @property {object} yAxis\n\t * @property {object} chart\n\t * @property {array} series\n\t * @property {object} plotOptions\n\t */\n\n\t/**\n\t * Construct a new Chart class\n\t * @constructor\n\t * @param {element} target \n\t * @param {array} data \n\t */\n    constructor(target, data) {\n\t    this.target = target;\n\t    this.data = data;\n\t}\n\n\t/**\n\t * Create a new chart\n\t * See {@link https://api.highcharts.com/highcharts/} for full set of config options.\n\t * @param {(string|element)} target \n\t * @param {HighchartsConfig} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tcreate(target, config) {\n\t\treturn Highcharts.chart(target, config);\n\t}\n\t\n\t/**\n\t * Create a new chart\n\t * See {@link https://api.highcharts.com/highcharts/} for full set of config options.\n\t * @param {(string|element)} target \n\t * @param {HighchartsConfig} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tstatic create(target, config) {\n\t\t// convert title and suppress if not provided\n\t\tif (\"title\" in config) {\n\t\t\tif (typeof config.title == \"string\") {\n\t\t\t\tconfig.title = {text: config.title};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.title = false;\n\t\t}\n\t\t\n\t\t// convert subtitle and convert if not provided\n\t\tif (\"subtitle\" in config) {\n\t\t\tif (typeof config.subtitle == \"string\") {\n\t\t\t\tconfig.subtitle = {text: config.subtitle};\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.subtitle = false;\n\t\t}\n\t\t\n\t\t// convert credits\n\t\tif (!(\"credits\" in config)) {\n\t\t\tconfig.credits = false;\n\t\t}\n\t\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"xAxis\" in config)) {config.xAxis = {}}\n\t\tif (!(\"title\" in config.xAxis)) {\n\t\t\t//config.xAxis.title = false;\n\t\t}\n\t\n\t\t// suppress xAxis title unless provided\n\t\tif (!(\"yAxis\" in config)) {config.yAxis = {}}\n\t\tif (!(\"title\" in config.yAxis)) {\n\t\t\tconfig.yAxis.title = false;\n\t\t}\n\t\t\n\t\treturn Highcharts.chart(target, config);\n\t}\n\n\t/**\n\t * Sets the default chart type\n\t * @param {object} config The chart config object\n\t * @param {string} type The type of chart\n\t */\n\tstatic setDefaultChartType(config, type) {\n\t\tif (\"type\" in config) {\n\t\t\tconfig.chart.type = config.type;\n\t\t\tdelete config.type;\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// TODO: check plot options and series?\n\n\t\tif (\"chart\" in config) {\n\t\t\tif (\"type\" in config.chart) {return} // already set\n\t\t} else {\n\t\t\tconfig.chart = {}\n\t\t}\n\n\t\tconfig.chart.type = type;\n\t\treturn config;\n\t}\n\n\t/**\n\t * Add the provided data to the config as a series\n\t * @param {object} config \n\t * @param {array} data \n\t */\n\tstatic setSeriesData(config, data) {\n\t\tif (Array.isArray(data)) {\n\t\t\tif (Array.isArray(data[0])) {\n\t\t\t\tconfig.series = data.map(subArray => { return {data: subArray} })\n\t\t\t} else {\n\t\t\t\tconfig.series = [{data: data}]\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create a bar chart\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tbar(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.bar(this.target, config)\n\t}\n\t/**\n\t * Create a bar chart\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static bar(target, config) {\n\t\tChart.setDefaultChartType(config, 'bar')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a line chart\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tline(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.line(this.target, config)\n\t}\n\t/**\n\t * Create a line chart\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static line(target, config) {\n\t\tChart.setDefaultChartType(config, 'line')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a scatter plot\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tscatter(config={}) {\n\t\tChart.setSeriesData(config, this.data);\n\t\treturn Chart.scatter(this.target, config)\n\t}\n\t/**\n\t * Create a scatter plot\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n    static scatter(target, config) {\n\t\tChart.setDefaultChartType(config, 'scatter')\n\t\treturn Highcharts.chart(target, config)\n\t}\n\n\t/**\n\t * Create a network graph\n\t * @param {object} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tnetworkgraph(config={}) {\n\t\tconfig.plotOptions = {\n\t\t\tnetworkgraph: {\n\t\t\t\tlayoutAlgorithm: {\n\t\t\t\t\tenableSimulation: true\n\t\t\t\t},\n\t\t\t\tkeys: ['from', 'to']\n\t\t\t}\n\t\t}\n\t\tChart.setSeriesData(config, this.data);\n\n\t\treturn Chart.networkgraph(this.target, config)\n\t}\n\t/**\n\t * Create a network graph\n\t * @param {element} target \n\t * @param {object} config \n\t * @returns {Highcharts.Chart}\n\t */\n\tstatic networkgraph(target, config) {\n\t\tChart.setDefaultChartType(config, 'networkgraph')\n\t\treturn Highcharts.chart(target, config);\n\t}\n}\n\nexport default Chart\n","import Chart from \"./chart.js\";\n\n/**\n * Class representing a Table.\n * @memberof Spyral\n * @class\n */\nclass Table {\n\t/**\n\t * The Table config object\n\t * @typedef {object} TableConfig\n\t * @property {string} format The format of the provided data, either \"tsv\" or \"csv\"\n\t * @property {(object|array)} headers The table headers\n\t * @property {boolean} hasHeaders True if the headers are the first item in the data\n\t * @property {string} count Specify \"vertical\" or \"horizontal\" to create a table of unique item counts in the provided data\n\t */\n\n\n\t/**\n\t * Create a new Table\n\t * @constructor\n\t * @param {(object|array|string|number)} data\n\t * @param {TableConfig} config\n\t */\n\tconstructor(data, config, ...other) {\n\n\t\tthis._rows = [];\n\t\tthis._headers = {};\n\t\tthis._rowKeyColumnIndex = 0;\n\t\t\n\t\t// we have a configuration object followed by values: create({headers: []}, 1,2,3) …\n\t\tif (data && typeof data == \"object\" && (typeof config == \"string\" || typeof config == \"number\" || Array.isArray(config))) {\n\t\t\tdata.rows = [config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// we have a simple variable set of arguments: create(1,2,3) …\n\t\tif (arguments.length>0 && Array.from(arguments).every(a => a!==undefined && !Array.isArray(a) && typeof a != \"object\")) {\n\t\t\tdata = [data,config].concat(other).filter(v => v!==undefined)\n\t\t\tconfig = undefined;\n\t\t}\n\t\t\n\t\t// could be CSV or TSV\n\t\tif (Array.isArray(data) && data.length==1 && typeof data[0] == \"string\"  && (data[0].indexOf(\",\")>-1 || data[0].indexOf(\"\\t\")>-1)) {\n\t\t\tdata = data[0];\n\t\t}\n\n\t\t// first check if we have a string that might be delimited data\n\t\tif (data && (typeof data == \"string\" || typeof data ==\"number\")) {\n\t\t\tif (typeof data == \"number\") {data = String(data)} // convert to string for split\n\t\t\tlet rows = [];\n\t\t\tlet format = config && \"format\" in config ? config.format : undefined;\n\t\t\tdata.split(/(\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])+/g).forEach((line,i) => {\n\t\t\t\tif (line.trim().length>0) {\n\t\t\t\t\tlet values;\n\t\t\t\t\tif ((format && format==\"tsv\") || line.indexOf(\"\\t\")>-1) {\n\t\t\t\t\t\tvalues = line.split(/\\t/);\n\t\t\t\t\t} else if ((format && format==\"csv\") || line.indexOf(\",\")>-1) {\n\t\t\t\t\t\tvalues = parseCsvLine(line)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues = [line]\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// if we can't find any config information for headers then we try to guess\n\t\t\t\t\t// if the first line doesn't have any numbers - this heuristic may be questionable\n\t\t\t\t\tif (i==0 && values.every(v => isNaN(v)) && \n\t\t\t\t\t\t((typeof config != \"object\") || (typeof config == \"object\" && !(\"hasHeaders\" in config) && !(\"headers\" in config)))) {\n\t\t\t\t\t\tthis.setHeaders(values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(values.map(v => isNaN(v) ? v : Number(v)))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tdata = rows;\n\t\t}\n\t\t\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (config) {\n\t\t\t\tif (Array.isArray(config)) {\n\t\t\t\t\tthis.setHeaders(config);\n\t\t\t\t} else if (typeof config == \"object\") {\n\t\t\t\t\tif (\"headers\" in config) {\n\t\t\t\t\t\tthis.setHeaders(config.headers)\n\t\t\t\t\t} else if (\"hasHeaders\" in config && config.hasHeaders) {\n\t\t\t\t\t\tthis.setHeaders(data.shift())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (config && \"count\" in config && config.count) {\n\t\t\t\tlet freqs = Table.counts(data);\n\t\t\t\tif (config.count==\"vertical\") {\n\t\t\t\t\tfor (let item in freqs) {\n\t\t\t\t\t\tthis.addRow(item, freqs[item])\n\t\t\t\t\t}\n\t\t\t\t\tthis.rowSort((a,b) => Table.cmp(b[1],a[1]))\n\t\t\t\t} else {\n\t\t\t\t\tthis._headers = []; // reset and use the terms as headers\n\t\t\t\t\tthis.addRow(freqs)\n\t\t\t\t\tthis.columnSort((a,b) => Table.cmp(this.cell(0,b),this.cell(0,a)))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.addRows(data);\n\t\t\t}\n\t\t} else if (data && typeof data == \"object\") {\n\t\t\tif (\"headers\" in data && Array.isArray(data.headers)) {\n\t\t\t\tthis.setHeaders(data.headers);\n\t\t\t} else if (\"hasHeaders\" in data && \"rows\" in data) {\n\t\t\t\tthis.setHeaders(data.rows.shift())\n\t\t\t}\n\t\t\tif (\"rows\" in data && Array.isArray(data.rows)) {\n\t\t\t\tthis.addRows(data.rows)\n\t\t\t}\n\t\t\tif (\"rowKeyColumn\" in data) {\n\t\t\t\tif (typeof data.rowKeyColumn == \"number\") {\n\t\t\t\t\tif (data.rowKeyColumn < this.columns()) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = data.rowKeyColumn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"The rowKeyColumn value is higher than the number headers designated: \"+data.rowKeyColum);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof data.rowKeyColumn == \"string\") {\n\t\t\t\t\tif (data.rowKeyColumn in this._headers) {\n\t\t\t\t\t\tthis._rowKeyColumnIndex = this._headers[data.rowKeyColumn];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Unable to find column designated by rowKeyColumn: \"+data.rowKeyColumn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Set the headers for the Table\n\t * @param {(object|array)} data\n\t * @returns {Table}\n\t */\n\tsetHeaders(data) {\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach(h => this.addColumn(h), this);\n\t\t} else if (typeof data == \"object\") {\n\t\t\tif (this.columns()==0 || Object.keys(data).length==this.columns()) {\n\t\t\t\tthis._headers = data;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"The number of columns don't match: \");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unrecognized argument for headers, it should be an array or an object.\"+data)\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add rows to the Table\n\t * @param {array} data\n\t * @returns {Table}\n\t */\n\taddRows(data) {\n\t\tdata.forEach(row => this.addRow(row), this);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Add a row to the Table\n\t * @param {(array|object)} data\n\t * @returns {Table}\n\t */\n\taddRow(data, ...other) {\n\t\t\n\t\t// we have multiple arguments, so call again as an array\n\t\tif (other.length>0) {\n\t\t\treturn this.addRow([data].concat(other))\n\t\t}\n\n\t\tthis.setRow(this.rows(), data, true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Set a row\n\t * @param {(number|string)} ind The row index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetRow(ind, data, create) {\n\n\t\tlet rowIndex = this.getRowIndex(ind, create);\n\t\tif (rowIndex>=this.rows() && !create) {\n\t\t\tthrow new Error(\"Attempt to set row values for a row that does note exist: \"+ind+\". Maybe use addRow() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tif (data.length>this.columns()) {\n\t\t\t\tif (create) {\n\t\t\t\t\tfor (let i = this.columns(); i<data.length; i++) {\n\t\t\t\t\t\tthis.addColumn();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"The row that you've created contains more columns than the current table. Maybe use addColunm() first?\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.forEach((d,i) => this.setCell(rowIndex, i, d), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let column in data) {\n\t\t\t\tif (!this.hasColumn(column)) {\n\t\t\t\t}\n\t\t\t\tthis.setCell(rowIndex, column, data[column]);\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if (this.columns()<2 && create) { // hopefully some scalar value\n\t\t\tif (this.columns()==0) {\n\t\t\t\tthis.addColumn(); // create first column if it doesn't exist\n\t\t\t}\n\t\t\tthis.setCell(rowIndex,0,data);\n\t\t} else {\n\t\t\tthrow new Error(\"setRow() expects an array or an object, maybe setCell()?\")\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\t\n\t/**\n\t * Set a column\n\t * @param {(number|string)} ind The column index\n\t * @param {(object|array)} data\n\t * @param {boolean} create\n\t * @returns {Table}\n\t */\n\tsetColumn(ind, data, create) {\n\n\t\tlet columnIndex = this.getColumnIndex(ind, create);\n\t\tif (columnIndex>=this.columns() && !create) {\n\t\t\tthrow new Error(\"Attempt to set column values for a column that does note exist: \"+ind+\". Maybe use addColumn() instead?\");\n\t\t}\n\t\t\n\t\t// we have a simple array, so we'll just push to the rows\n\t\tif (data && Array.isArray(data)) {\n\t\t\tdata.forEach((d,i) => this.setCell(i, columnIndex, d, create), this);\n\t\t}\n\t\t\n\t\t// we have an object so we'll use the headers\n\t\telse if (typeof data == \"object\") {\n\t\t\tfor (let row in data) {\n\t\t\t\tthis.setCell(row, columnIndex, data[column], create);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// hope we have a scalar value to assign to the first row\n\t\telse {\n\t\t\tthis.setCell(0,columnIndex,data, create);\n\t\t}\n\t\t\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Add to or set a cell value\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set/add\n\t * @param {boolean} overwrite True to set, false to add to current value\n\t */\n\tupdateCell(row, column, value, overwrite) {\n\t\tlet rowIndex = this.getRowIndex(row, true);\n\t\tlet columnIndex = this.getColumnIndex(column, true);\n\t\tlet val = this.cell(rowIndex, columnIndex);\n\t\tthis._rows[rowIndex][columnIndex] = val && !overwrite ? val+value : value;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value of a cell\n\t * @param {(number|string)} rowInd The row index\n\t * @param {(number|string)} colInd The column index\n\t * @returns {number}\n\t */\n\tcell(rowInd, colInd) {\n\t\treturn this._rows[this.getRowIndex(rowInd)][this.getColumnIndex(colInd)];\n\t}\n\n\t/**\n\t * Set the value of a cell\n\t * @param {(number|string)} row The row index\n\t * @param {(number|string)} column The column index\n\t * @param {number} value The value to set\n\t * @returns {Table}\n\t */\n\tsetCell(row, column, value) {\n\t\tthis.updateCell(row,column,value,true);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get (and create) the row index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetRowIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this._rows.length) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis._rows[ind] = Array(this.columns());\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested row does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tlet row = this._rows.findIndex(r => r[this._rowKeyColumnIndex] === ind, this);\n\t\t\tif (row>-1) {return row;}\n\t\t\telse if (create) {\n\t\t\t\tlet arr = Array(this.columns());\n\t\t\t\tarr[this._rowKeyColumnIndex] = ind;\n\t\t\t\tthis.addRow(arr);\n\t\t\t\treturn this.rows();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(\"Unable to find the row named \"+ind);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Please provide a valid row (number or named row)\");\n\t}\n\t\n\t/**\n\t * Get (and create) the column index\n\t * @param {(number|string)} ind The index\n\t * @param {boolean} create\n\t * @returns {number}\n\t */\n\tgetColumnIndex(ind, create) {\n\t\tif (typeof ind == \"number\") {\n\t\t\tif (ind < this.columns()) {\n\t\t\t\treturn ind;\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn(ind)\n\t\t\t\treturn ind;\n\t\t\t}\n\t\t\tthrow new Error(\"The requested column does not exist: \"+ind)\n\t\t} else if (typeof ind == \"string\") {\n\t\t\tif (ind in this._headers) {\n\t\t\t\treturn this._headers[ind];\n\t\t\t} else if (create) {\n\t\t\t\tthis.addColumn({header: ind});\n\t\t\t\treturn this._headers[ind];\n\t\t\t}\n\t\t\tthrow new Error(\"Unable to find column named \"+ind);\n\t\t}\n\t\tthrow new Error(\"Please provide a valid column (number or named column)\");\n\t}\n\t\n\t/**\n\t * Add a column (at the specified index)\n\t * @param {(object|string)} config\n\t * @param {(number|string)} ind\n\t */\n\taddColumn(config, ind) {\n\t\t// determine col\n\t\tlet col = this.columns(); // default\n\t\tif (config && typeof config == \"string\") {col=config}\n\t\telse if (config && (typeof config == \"object\") && (\"header\" in config)) {col = config.header}\n\t\telse if (ind!==undefined) {col=ind}\n\n\t\t// check if it exists\n\t\tif (col in this._headers) {\n\t\t\tthrow new Error(\"This column exists already: \"+config.header)\n\t\t}\n\t\t\n\t\t// add column\n\t\tlet colIndex = this.columns();\n\t\tthis._headers[col] = colIndex;\n\t\t\n\t\t// determine data\n\t\tlet data = [];\n\t\tif (config && typeof config == \"object\" && \"rows\" in config) {data=config.rows}\n\t\telse if (Array.isArray(config)) {data = config;}\n\t\t\n\t\t// add data to each row\n\t\tthis._rows.forEach((r,i) => r[colIndex] = data[i])\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of rows in this table.\n\t * When the first argument is the boolean value `true` all rows are returned.\n\t * When the first argument is a an array then the rows corresponding to the row\n\t * indices or names are returned. When all arguments except are numbers or strings\n\t * then each of those is returned.\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\trows(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn this._rows.length;\n\t\t}\n\t\t\n\t\tlet rows = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\trows = this._rows.map((r,i) => this.row(i, asObj))\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\telse if (Array.isArray(inds)) {\n\t\t\trows = inds.map(ind => this.row(ind));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\trows.push(this.row(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// zip if requested\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (rows.length<2) {throw new Error(\"Only one row available, can't zip\")}\n\t\t\treturn Table.zip(rows);\n\t\t}\n\t\telse {\n\t\t\treturn rows;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified row\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\trow(ind, asObj) {\n\t\tlet row = this._rows[this.getRowIndex(ind)];\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tfor (let key in this._headers) {\n\t\t\t\tobj[key] = row[this._headers[key]]\n\t\t\t}\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn row;\n\t\t}\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of columns in this table.\n\t * When the first argument is the boolean value `true` all columns are returned.\n\t * When the first argument is a number a slice of the columns is returned and if\n\t * the second argument is a number it is treated as the length of the slice to\n\t * return (note that it isn't the `end` index like with Array.slice()).\n\t * @param {(boolean|array|number|string)} [inds]\n\t * @param {(object|number|string)} [config]\n\t * @returns {number|array}\n\t */\n\tcolumns(inds, config, ...other) {\n\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\t\t\n\t\tlet columns = [];\n\t\tlet asObj = (config && typeof config == \"object\" && config.asObj) ||\n\t\t\t(other.length>0 && typeof other[other.length-1] == \"object\" && other[other.length-1].asObj);\n\t\t\n\t\t// return all columns\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tfor (let i=0, len=this.columns(); i<len; i++) {\n\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// return specified columns\n\t\telse if (Array.isArray(inds)) {\n\t\t\tinds.forEach(i => columns.push(this.column(i, asObj)), this);\n\t\t}\n\t\t\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\t[inds, config, ...other].every(i => {\n\t\t\t\tif (typeof i == \"number\" || typeof i == \"string\") {\n\t\t\t\t\tcolumns.push(this.column(i, asObj));\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (other.length>0) { // when config is in last position\n\t\t\t\tif (typeof other[other.length-1] == \"object\") {\n\t\t\t\t\tconfig = other[other.length-1]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (config && typeof config == \"object\" && \"zip\" in config && config.zip) {\n\t\t\tif (columns.length<2) {throw new Error(\"Only one column available, can't zip\")}\n\t\t\treturn Table.zip(columns);\n\t\t}\n\t\telse {\n\t\t\treturn columns;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified column\n\t * @param {(number|string)} ind\n\t * @param {boolean} [asObj]\n\t * @returns {(number|string|object)}\n\t */\n\tcolumn(ind, asObj) {\n\t\tlet column = this.getColumnIndex(ind);\n\t\tlet data = this._rows.forEach(r => r[column]); // TODO\n\t\tif (asObj) {\n\t\t\tlet obj = {};\n\t\t\tthis._rows.forEach(r => {\n\t\t\t\tobj[r[this._rowKeyColumnIndex]] = r[column];\n\t\t\t})\n\t\t\treturn obj;\n\t\t} else {\n\t\t\treturn this._rows.map(r => r[column]);\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the specified header\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\theader(ind) {\n\t\tlet keys = Object.keys(this._headers);\n\t\tlet i = this.getColumnIndex(ind);\n\t\treturn keys[keys.findIndex(k => i==this._headers[k])]\n\t}\n\t\n\t/**\n\t * This function returns different values depending on the arguments provided.\n\t * When there are no arguments, it returns the number of headers in this table.\n\t * When the first argument is the boolean value `true` all headers are returned.\n\t * When the first argument is a number a slice of the headers is returned.\n\t * When the first argument is an array the slices specified in the array are returned.\n\t * @param {(boolean|array|number|string)} inds\n\t * @returns {(number|array)}\n\t */\n\theaders(inds, ...other) {\n\t\t\n\t\t// return length\n\t\tif (inds==undefined) {\n\t\t\treturn Object.keys(this._headers).length;\n\t\t}\n\n\t\tlet headers = [];\n\t\t\n\t\t// return all\n\t\tif (typeof inds == \"boolean\" && inds) {\n\t\t\tinds = Array(Object.keys(this._headers).length).fill().map((_,i) => i);\n\t\t}\n\t\t\n\t\t// return specified rows\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn inds.map(i => this.header(i));\n\t\t}\n\t\t\n\t\t// return specified rows as varargs\n\t\telse if (typeof inds == \"number\" || typeof inds == \"string\") {\n\t\t\treturn [inds, ...other].map(i => this.header(i));\n\t\t}\n\t}\n\n\t/**\n\t * Does the specified column exist\n\t * @param {(number|string)} ind\n\t * @returns {(number|string)}\n\t */\n\thasColumn(ind) {\n\t\treturn ind in this._headers;\n\t}\n\t\n\t/**\n\t * Runs the specified function on each row.\n\t * The function is passed the row and the row index.\n\t * @param {function} fn\n\t */\n\tforEach(fn) {\n\t\tthis._rows.forEach((r,i) => fn(r,i));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMin(ind) {\n\t\treturn Math.min.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMax(ind) {\n\t\treturn Math.max.apply(null, this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the minimum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMin(ind) {\n\t\treturn Math.min.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the maximum value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMax(ind) {\n\t\treturn Math.max.apply(null, this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowSum(ind) {\n\t\treturn Table.sum(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the sum of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnSum(ind) {\n\t\treturn Table.sum(this.column(ind));\n\t}\n\n\t/**\n\t * Get the mean of the values in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowMean(ind) {\n\t\treturn Table.mean(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the mean of the values in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnMean(ind) {\n\t\treturn Table.mean(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowCounts(ind) {\n\t\treturn Table.counts(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the count of each unique value in the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnCounts(ind) {\n\t\treturn Table.counts(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified row\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\trowRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.row(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setRow(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the rolling mean for the specified column\n\t * @param {(number|string)} ind\n\t * @param {number} neighbors\n\t * @param {boolean} overwrite\n\t * @returns {array}\n\t */\n\tcolumnRollingMean(ind, neighbors, overwrite) {\n\t\tlet means = Table.rollingMean(this.column(ind), neighbors);\n\t\tif (overwrite) {\n\t\t\tthis.setColumn(ind, means);\n\t\t}\n\t\treturn means;\n\t}\n\t\n\t/**\n\t * Get the variance for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowVariance(ind) {\n\t\treturn Table.variance(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the variance for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnVariance(ind) {\n\t\treturn Table.variance(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\trowStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {number}\n\t */\n\tcolumnStandardDeviation(ind) {\n\t\treturn Table.standardDeviation(this.column(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified row\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\trowZScores(ind) {\n\t\treturn Table.zScores(this.row(ind));\n\t}\n\t\n\t/**\n\t * Get the z scores for the specified column\n\t * @param {(number|string)} ind\n\t * @returns {array}\n\t */\n\tcolumnZScores(ind) {\n\t\treturn Table.zScores(this.column(ind));\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified rows\n\t * @returns {Table}\n\t */\n\trowSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i)\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\n\t\tif (Array.isArray(inds)) {\n\t\t\treturn this.rowSort((a,b) => {\n\t\t\t\tlet ind;\n\t\t\t\tfor (let i=0, len=inds.length; i<len; i++) {\n\t\t\t\t\tind = this.getColumnIndex(inds[i]);\n\t\t\t\t\tif (a!=b) {\n\t\t\t\t\t\tif (typeof a[ind] == \"string\" && typeof b[ind] == \"string\") {\n\t\t\t\t\t\t\treturn a[ind].localeCompare(b[ind]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn a[ind]-b[ind];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, config)\n\t\t}\n\n\t\tif (typeof inds == \"function\") {\n\t\t\tthis._rows.sort((a,b) => {\n\t\t\t\tif (config && \"asObject\" in config && config.asObject) {\n\t\t\t\t\tlet c = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\tc[k] = a[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\tlet d = {};\n\t\t\t\t\tfor (let k in this._headers) {\n\t\t\t\t\t\td[k] = b[this._headers[k]]\n\t\t\t\t\t}\n\t\t\t\t\treturn inds.apply(this, [c,d]);\n\t\t\t\t} else {\n\t\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (config && \"reverse\" in config && config.reverse) {\n\t\t\t\tthis._rows.reverse(); // in place\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * TODO\n\t * Sort the specified columns\n\t * @returns {Table}\n\t */\n\tcolumnSort(inds, config) {\n\t\t// no inds, use all columns\n\t\tif (inds===undefined) {\n\t\t\tinds = Array(this.columns()).fill().map((_,i) => i);\n\t\t}\n\n\t\t// wrap a single index as array\n\t\tif (typeof inds == \"string\" || typeof inds == \"number\") {\n\t\t\tinds = [inds];\n\t\t}\n\t\t\n\t\tif (Array.isArray(inds)) {\n\t\t\t\n\t\t\t// convert to column names\n\t\t\tlet headers = inds.map(ind => this.header(ind));\n\t\t\t\n\t\t\t// make sure we have all columns\n\t\t\tObject.keys(this._headers).forEach(h => {\n\t\t\t\tif (!headers.includes(h)) {headers.push(h)}\n\t\t\t});\n\t\t\t\n\t\t\t// sort names alphabetically\n\t\t\theaders.sort((a,b) => a.localeCompare(b))\n\t\t\t\n\t\t\t// reorder by columns\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t\t\n\t\t}\n\t\t\n\t\tif (typeof inds == \"function\") {\n\t\t\tlet headers = Object.keys(this._headers);\n\t\t\tif (config && \"asObject\" in headers && headers.asObject) {\n\t\t\t\theaders = headers.map((h,i) => {\n\t\t\t\t\treturn {header: h, data: this._rows.map((r,j) => this.cell(i,j))}\n\t\t\t\t})\n\t\t\t}\n\t\t\theaders.sort((a,b) => {\n\t\t\t\treturn inds.apply(this, [a,b]);\n\t\t\t})\n\t\t\theaders = headers.map(h => typeof h == \"object\" ? h.header : h); // convert back to string\n\t\t\t\n\t\t\t// make sure we have all keys\n\t\t\tObject.keys(this._headers).forEach(k => {\n\t\t\t\tif (headers.indexOf(k)==-1) {headers.push(k)}\n\t\t\t})\n\t\t\t\n\t\t\tthis._rows = this._rows.map((_,i) => headers.map(h => this.cell(i,h)));\n\t\t\tthis._headers = {};\n\t\t\theaders.forEach((h,i) => this._headers[h]=i)\n\t\t}\n\t}\n\t\n\t/**\n\t * Get a CSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoCsv(config) {\n\t\tconst cell = function(c) {\n\t\t\tlet quote = /\"/g;\n\t\t\treturn typeof c == \"string\" && (c.indexOf(\",\")>-1 || c.indexOf('\"')>-1) ? '\"'+c.replace(quote,'\\\"')+'\"' : c;\n\t\t}\n\t\treturn (config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).map(h => cell(h)).join(\",\") + \"\\n\") +\n\t\t\tthis._rows.map(row => row.map(c => cell(c)).join(\",\")).join(\"\\n\")\n\t}\n\t\n\t/**\n\t * Get a TSV representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoTsv(config) {\n\t\treturn config && \"noHeaders\" in config && config.noHeaders ? \"\" : this.headers(true).join(\"\\t\") + \"\\n\" +\n\t\t\tthis._rows.map(row => row.join(\"\\t\")).join(\"\\n\");\n\t}\n\t\n\t/**\n\t * Set the target's contents to an HTML representation of the Table\n\t * @param {(function|string|object)} target\n\t * @param {object} [config]\n\t * @returns {Table}\n\t */\n\thtml(target, config) {\n\t\tlet html = this.toString(config);\n\t\tif (typeof target == \"function\") {\n\t\t\ttarget(html)\n\t\t} else {\n\t\t\tif (typeof target == \"string\") {\n\t\t\t\ttarget = document.querySelector(target);\n\t\t\t\tif (!target) {\n\t\t\t\t\tthrow \"Unable to find specified target: \"+target;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof target == \"object\" && \"innerHTML\" in target) {\n\t\t\t\ttarget.innerHTML = html;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get an HTML representation of the Table\n\t * @param {object} [config]\n\t * @returns {string}\n\t */\n\ttoString(config={}) {\n\t\treturn \"<table class='voyantTable'>\" +\n\t\t\t((config && \"caption\" in config && typeof config.caption == \"string\") ?\n\t\t\t\t\t\"<caption>\"+config.caption+\"</caption>\" : \"\") +\n\t\t\t((config && \"noHeaders\" in config && config.noHeaders) ? \"\" : (\"<thead><tr>\"+this.headers(true).map(c => \"<th>\"+c+\"</th>\").join(\"\")+\"</tr></thead>\"))+\n\t\t\t\"<tbody>\"+\n\t\t\tthis._rows.map(row => \"<tr>\"+row.map(c => \"<td>\"+(typeof c === \"number\" ? c.toLocaleString() : c)+\"</td>\").join(\"\")+\"</tr>\").join(\"\") +\n\t\t\t\"</tbody></table>\";\n\t}\n\t\n\t/**\n\t * Show a chart representing the Table\n\t * @param {(string|element)} [target]\n\t * @param {HighchartsConfig} [config]\n\t * @returns {Highcharts.Chart}\n\t */\n\tchart(target = undefined, config = {}) {\n\t\tif (typeof target === 'object') {\n\t\t\tconfig = target;\n\t\t\ttarget = undefined;\n\t\t}\n\t\t\n\t\tif (target === undefined) {\n\t\t\tif (typeof Spyral !== 'undefined' && Spyral.Notebook) {\n\t\t\t\ttarget = Spyral.Notebook.getTarget();\n\t\t\t} else {\n\t\t\t\ttarget = document.createElement(\"div\");\n\t\t\t\tdocument.body.appendChild(target);\n\t\t\t}\n\t\t}\n\n\t\tconfig.chart = config.chart || {};\n\t\t\n\t\tlet columnsCount = this.columns();\n\t\tlet rowsCount = this.rows();\n\t\tlet headers = this.headers(config.columns ? config.columns : true);\n\t\tlet isHeadersCategories = headers.every(h => isNaN(h));\n\n\t\tif (isHeadersCategories) {\n\t\t\tChart.setDefaultChartType(config, \"column\");\n\t\t}\n\n\t\t// set categories if not set\n\t\tconfig.xAxis = config.xAxis || {};\n\t\tconfig.xAxis.categories = config.xAxis.categories || headers;\n\t\t\n\t\t// start filling in series\n\t\tconfig.series = config.series || [];\n\t\t\n\t\t// one row, so let's take series from rows\n\t\tif (rowsCount === 1) {\n\t\t\tconfig.dataFrom = config.dataFrom || \"rows\";\n\t\t} else if (columnsCount === 1) {\n\t\t\tconfig.dataFrom = config.dataFrom || \"columns\";\n\t\t}\n\n\t\tif (\"dataFrom\" in config) {\n\t\t\tif (config.dataFrom === \"rows\") {\n\t\t\t\tconfig.data = {rows:[]}\n\t\t\t\tconfig.data.rows.push(headers)\n\t\t\t\tconfig.data.rows = config.data.rows.concat(this.rows(true))\n\t\t\t} else if (config.dataFrom === \"columns\") {\n\t\t\t\tconfig.data = {columns:[]}\n\t\t\t\tconfig.data.columns = config.data.columns.concat(this.columns(true))\n\t\t\t\tif (config.data.columns.length === headers.length) {\n\t\t\t\t\theaders.forEach((h, i) => {\n\t\t\t\t\t\tconfig.data.columns[i].splice(0, 0, h)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\"seriesFrom\" in config) {\n\t\t\tif (config.seriesFrom === \"rows\") {\n\t\t\t\tthis.rows(config.rows ? config.rows : true).forEach((row, i) => {\n\t\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\t\tconfig.series[i].data = headers.map(h => this.cell(i, h));\n\t\t\t\t})\n\t\t\t} else if (config.seriesFrom === \"columns\") {\n\t\t\t\tthis.columns(config.columns ? config.columns : true).forEach((col, i) => {\n\t\t\t\t\tconfig.series[i] = config.series[i] || {};\n\t\t\t\t\tconfig.series[i].data = [];\n\t\t\t\t\tfor (let r = 0; r < rowsCount; r++) {\n\t\t\t\t\t\tconfig.series[i].data.push(this.cell(r, i));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete config.dataFrom;\n\t\tdelete config.seriesFrom;\n\n\t\treturn Chart.create(target, config);\n\t}\n\n\t/**\n\t * Create a new Table\n\t * @param {(object|array|string|number)} data\n\t * @param {TableConfig} config\n\t * @returns {Table}\n\t */\n\tstatic create(data, config, ...other) {\n\t\treturn new Table(data, config, ...other);\n\t}\n\t\n\t/**\n\t * Fetch a Table from a source\n\t * @param {string|Request} input\n\t * @param {object} api\n\t * @param {object} config\n\t * @returns {Promise}\n\t */\n\tstatic fetch(input, api, config) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\twindow.fetch(input, api).then(response => {\n\t\t\t\tif (!response.ok) {throw new Error(response.status + \" \" + response.statusText);}\n\t\t\t\tresponse.text().then(text => {\n\t\t\t\t\tresolve(Table.create(text, config || api))\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Get the count of each unique value in the data\n\t * @param {array} data\n\t * @returns {object}\n\t */\n\tstatic counts(data) {\n\t\tlet vals = {};\n\t\tdata.forEach(v => v in vals ? vals[v]++ : vals[v]=1);\n\t\treturn vals;\n\t}\n\t\n\t/**\n\t * Compare two values\n\t * @param {(number|string)} a\n\t * @param {(number|string)} b\n\t * @returns {number}\n\t */\n\tstatic cmp(a, b) {\n\t\treturn typeof a == \"string\" && typeof b == \"string\" ? a.localeCompare(b) : a-b;\n\t}\n\n\t/**\n\t * Get the sum of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic sum(data) {\n\t\treturn data.reduce((a,b) => a+b, 0);\n\t}\n\t\n\t/**\n\t * Get the mean of the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic mean(data) {\n\t\treturn Table.sum(data) / data.length;\n\t}\n\t\n\t/**\n\t * Get rolling mean for the provided values\n\t * @param {array} data\n\t * @param {number} neighbors\n\t * @returns {array}\n\t */\n\tstatic rollingMean(data, neighbors) {\n\t\t// https://stackoverflow.com/questions/41386083/plot-rolling-moving-average-in-d3-js-v4/41388581#41387286\n\t\treturn data.map((val, idx, arr) => {\n\t\t\tlet start = Math.max(0, idx - neighbors), end = idx + neighbors\n\t\t\tlet subset = arr.slice(start, end + 1)\n\t\t\tlet sum = subset.reduce((a,b) => a + b)\n\t\t\treturn sum / subset.length\n\t\t});\n\t}\n\t\n\t/**\n\t * Get the variance for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic variance(data) {\n\t\tlet m = Table.mean(data);\n\t\treturn Table.mean(data.map(num => Math.pow(num-m, 2)));\n\t}\n\t\n\t/**\n\t * Get the standard deviation for the provided values\n\t * @param {array} data\n\t * @returns {number}\n\t */\n\tstatic standardDeviation(data) {\n\t\treturn Math.sqrt(Table.variance(data));\n\t}\n\t\n\t/**\n\t * Get the z scores for the provided values\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zScores(data) {\n\t\tlet m = Table.mean(data);\n\t\tlet s = Table.standardDeviation(data);\n\t\treturn data.map(num => (num-m) / s);\n\t}\n\t\n\t/**\n\t * Perform a zip operation of the provided arrays {@link https://en.wikipedia.org/wiki/Convolution_(computer_science)}\n\t * @param {array} data\n\t * @returns {array}\n\t */\n\tstatic zip(...data) {\n\t\n\t\t// we have a single nested array, so let's recall with flattened arguments\n\t\tif (data.length==1 && Array.isArray(data) && data.every(d => Array.isArray(d))) {\n\t\t\treturn Table.zip.apply(null, ...data);\n\t\t}\n\t\t\n\t\t// allow arrays to be of different lengths\n\t\tlet len = Math.max.apply(null, data.map(d => d.length));\n\t\treturn new Array(len).fill().map((_,i) => data.map(d => d[i]));\n\t}\n}\n\n// this seems like a good balance between a built-in flexible parser and a heavier external parser\n// https://lowrey.me/parsing-a-csv-file-in-es6-javascript/\nconst regex = /(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*))\\s*(?:,|$)/g;\nfunction parseCsvLine(line) {\n\tlet arr = [];\n\tline.replace(regex, (m0, m1, m2, m3) => {\n\t\tif (m1 !== undefined) {\n\t\t\tarr.push(m1.replace(/\\\\'/g, \"'\"));\n\t\t} else if (m2 !== undefined) {\n\t\t\tarr.push(m2.replace(/\\\\\"/g, \"\\\"\"));\n\t\t} else if (m3 !== undefined) {\n\t\t\tarr.push(m3);\n\t\t}\n\t\treturn \"\";\n\t});\n\tif (/,\\s*$/.test(line)) {arr.push(\"\");}\n\treturn arr;\n\t\n}\n\nexport default Table\n","const CategoriesManager = {\n\n\t_categories: {},\n\t_features: {},\n\t_featureDefaults: {},\n\n\tgetCategories: function() {\n\t\treturn this._categories;\n\t},\n\n\tgetCategoryTerms: function(name) {\n\t\treturn this._categories[name];\n\t},\n\t\n\taddCategory: function(name) {\n\t\tif (this._categories[name] === undefined) {\n\t\t\tthis._categories[name] = [];\n\t\t}\n\t},\n\trenameCategory: function(oldName, newName) {\n\t\tvar terms = this.getCategoryTerms(oldName);\n\t\tthis.addTerms(newName, terms);\n\t\tfor (var feature in this._features) {\n\t\t\tvar value = this._features[feature][oldName];\n\t\t\tthis.setCategoryFeature(newName, feature, value);\n\t\t}\n\t\tthis.removeCategory(oldName);\n\t\t\n\t},\n\tremoveCategory: function(name) {\n\t\tdelete this._categories[name];\n\t\tfor (var feature in this._features) {\n\t\t\tdelete this._features[feature][name];\n\t\t}\n\t},\n\t\n\taddTerm: function(category, term) {\n\t\tthis.addTerms(category, [term]);\n\t},\n\taddTerms: function(category, terms) {\n\t\tif (!Array.isArray(terms)) {\n\t\t\tterms = [terms];\n\t\t}\n\t\tif (this._categories[category] === undefined) {\n\t\t\tthis.addCategory(category);\n\t\t}\n\t\tfor (var i = 0; i < terms.length; i++) {\n\t\t\tvar term = terms[i];\n\t\t\tif (this._categories[category].indexOf(term) === -1) {\n\t\t\t\tthis._categories[category].push(term);\n\t\t\t}\n\t\t}\n\t},\n\tremoveTerm: function(category, term) {\n\t\tthis.removeTerms(category, [term]);\n\t},\n\tremoveTerms: function(category, terms) {\n\t\tif (!Array.isArray(terms)) {\n\t\t\tterms = [terms];\n\t\t}\n\t\tif (this._categories[category] !== undefined) {\n\t\t\tfor (var i = 0; i < terms.length; i++) {\n\t\t\t\tvar term = terms[i];\n\t\t\t\tvar index = this._categories[category].indexOf(term);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis._categories[category].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetCategoryForTerm: function(term) {\n\t\tfor (var category in this._categories) {\n\t\t\tif (this._categories[category].indexOf(term) != -1) {\n\t\t\t\treturn category;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\tgetFeatureForTerm: function(feature, term) {\n\t\treturn this.getCategoryFeature(this.getCategoryForTerm(term), feature);\n\t},\n\t\n\tgetFeatures: function() {\n\t\treturn this._features;\n\t},\n\n\taddFeature: function(name, defaultValue) {\n\t\tif (this._features[name] === undefined) {\n\t\t\tthis._features[name] = {};\n\t\t}\n\t\tif (defaultValue !== undefined) {\n\t\t\tthis._featureDefaults[name] = defaultValue;\n\t\t}\n\t},\n\tremoveFeature: function(name) {\n\t\tdelete this._features[name];\n\t\tdelete this._featureDefaults[name];\n\t},\n\tsetCategoryFeature: function(categoryName, featureName, featureValue) {\n\t\tif (this._features[featureName] === undefined) {\n\t\t\tthis.addFeature(featureName);\n\t\t}\n\t\tthis._features[featureName][categoryName] = featureValue;\n\t},\n\tgetCategoryFeature: function(categoryName, featureName) {\n\t\tvar value = undefined;\n\t\tif (this._features[featureName] !== undefined) {\n\t\t\tvalue = this._features[featureName][categoryName];\n\t\t\tif (value === undefined) {\n\t\t\t\tvalue = this._featureDefaults[featureName];\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\tvalue = value();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\t\n\tgetCategoryExportData: function() {\n\t\treturn {\n\t\t\tcategories: Object.assign({}, this._categories),\n\t\t\tfeatures: Object.assign({}, this._features)\n\t\t};\n\t},\n\n\tloadCategoryData: function(id) {\n\t\tif (Voyant !== undefined && Ext !== undefined) {\n\t\t\tvar dfd = new Ext.Deferred();\n\n\t\t\tExt.Ajax.request({\n\t\t\t\turl: Voyant.application.getTromboneUrl(),\n\t\t\t\tparams: {\n\t\t\t\t\ttool: 'resource.StoredCategories',\n\t\t\t\t\tretrieveResourceId: id,\n\t\t\t\t\tfailQuietly: false,\n\t\t\t\t\tcorpus: this.getCorpus() ? this.getCorpus().getId() : undefined\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tvar json = Ext.decode(response.responseText);\n\t\t\t\tvar id = json.storedCategories.id;\n\t\t\t\tvar value = json.storedCategories.resource;\n\t\t\t\tif (value.length === 0) {\n\t\t\t\t\tdfd.reject();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Ext.decode(value);\n\t\t\t\t\t\n\t\t\t\t\tthis._categories = value.categories;\n\t\t\t\t\tthis._features = value.features;\n\t\t\t\t\t\n\t\t\t\t\tdfd.resolve(value);\n\t\t\t\t}\n\t\t\t}, function() {\n\t\t\t\tthis.showError(\"Unable to load categories data: \"+id);\n\t\t\t\tdfd.reject();\n\t\t\t}, null, this);\n\t\t\t\n\t\t\treturn dfd.promise;\n\t\t}\n    },\n    \n    saveCategoryData: function(data) {\n\t\tif (Voyant !== undefined && Ext !== undefined) {\n\t\t\tdata = data || this.getCategoryExportData();\n\t\t\t\n\t\t\tvar dfd = new Ext.Deferred();\n\t\t\t\n\t\t\tvar dataString = Ext.encode(data);\n\t\t\tExt.Ajax.request({\n\t\t\t\turl: Voyant.application.getTromboneUrl(),\n\t\t\t\tparams: {\n\t\t\t\t\ttool: 'resource.StoredResource',\n\t\t\t\t\tstoreResource: dataString\n\t\t\t\t}\n\t\t\t}).then(function(response) {\n\t\t\t\tvar json = Ext.util.JSON.decode(response.responseText);\n\t\t\t\tvar id = json.storedResource.id;\n\t\t\t\tdfd.resolve(id);\n\t\t\t}, function(response) {\n\t\t\t\tdfd.reject();\n\t\t\t});\n\t\t\t\n\t\t\treturn dfd.promise;\n\t\t}\n    }\n}\n\nexport default CategoriesManager\n","/**\r\n * A helper for working with the Voyant Notebook app.\r\n * @memberof Spyral\r\n * @namespace\r\n */\r\nclass Notebook {\r\n\t/**\r\n\t * Returns the previous block.\r\n\t * @static\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getPreviousBlock() {\r\n\t\treturn Spyral.Notebook.getBlock(-1);\r\n\t}\r\n\t/**\r\n\t * Returns the next block.\r\n\t * @static\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getNextBlock() {\r\n\t\treturn Spyral.Notebook.getBlock(1);\r\n\t}\r\n\t/**\r\n\t * Returns the current block.\r\n\t * @static\r\n\t * @params {number} [offset] If specified, returns the block whose position is offset from the current block\r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBlock() {\r\n\t\tif (Voyant && Voyant.notebook) {\r\n\t\t\treturn Voyant.notebook.Notebook.currentNotebook.getBlock.apply(Voyant.notebook.Notebook.currentNotebook, arguments)\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {*} contents \r\n\t * @param {*} config \r\n\t */\r\n\tstatic show(contents, config) {\r\n\t\tvar contents = Spyral.Util.toString(contents, config);\r\n\t\tif (contents instanceof Promise) {\r\n\t\t\tcontents.then(c => Voyant.notebook.util.Show.show(c))\r\n\t\t} else {\r\n\t\t\tVoyant.notebook.util.Show.show(contents);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns the target element\r\n\t * @returns {element}\r\n\t */\r\n\tstatic getTarget() {\r\n\t\tif (Voyant && Voyant.notebook && Voyant.notebook.Notebook.currentBlock) {\r\n\t\t\treturn Voyant.notebook.Notebook.currentBlock.results.getEl().dom\r\n\t\t} else {\r\n\t\t\tconst target = document.createElement(\"div\");\r\n\t\t\tdocument.body.appendChild(target);\r\n\t\t\treturn target;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch and return the content of a notebook or a particular cell in a notebook\r\n\t * @param {string} url\r\n\t */\r\n\tstatic async import(url) {\r\n\t\tconst isFullNotebook = url.indexOf('#') === -1;\r\n\t\tconst isAbsoluteUrl = url.indexOf('http') === 0;\r\n\r\n\t\tlet notebookId = '';\r\n\t\tlet cellId = undefined;\r\n\t\tif (isAbsoluteUrl) {\r\n\t\t\tconst urlParts = url.match(/\\/[\\w-]+/g);\r\n\t\t\tif (urlParts !== null) {\r\n\t\t\t\tnotebookId = urlParts[urlParts.length-1].replace('/', '');\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!isFullNotebook) {\r\n\t\t\t\tcellId = url.split('#')[1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (isFullNotebook) {\r\n\t\t\t\tnotebookId = url;\r\n\t\t\t} else {\r\n\t\t\t\t[notebookId, cellId] = url.split('#');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst json = await Spyral.Load.trombone({\r\n\t\t\ttool: 'notebook.NotebookManager',\r\n\t\t\taction: 'load',\r\n\t\t\tid: notebookId,\r\n\t\t\tnoCache: 1\r\n\t\t})\r\n\r\n\t\tconst notebook = json.notebook.data;\r\n\t\tconst parser = new DOMParser();\r\n\t\tconst htmlDoc = parser.parseFromString(notebook, 'text/html');\r\n\t\t\r\n\t\tlet code = ''\r\n\t\tlet error = undefined\r\n\t\tif (cellId !== undefined) {\r\n\t\t\tconst cell = htmlDoc.querySelector('#'+cellId);\r\n\t\t\tif (cell !== null && cell.classList.contains('notebookcodeeditorwrapper')) {\r\n\t\t\t\tcode = cell.querySelector('pre').textContent\r\n\t\t\t} else {\r\n\t\t\t\terror = 'No code found for cell: '+cellId\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thtmlDoc.querySelectorAll('section.notebook-editor-wrapper').forEach((cell, i) => {\r\n\t\t\t\tif (cell.classList.contains('notebookcodeeditorwrapper')) {\r\n\t\t\t\t\tcode += cell.querySelector('pre').textContent + \"\\n\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\tif (Ext) {\r\n\t\t\tif (error === undefined) {\r\n\t\t\t\tExt.toast({ // quick tip that auto-destructs\r\n\t\t\t\t     html: 'Imported code from: '+url,\r\n\t\t\t\t     width: 200,\r\n\t\t\t\t     align: 'b'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tExt.Msg.show({\r\n\t\t\t\t\ttitle: 'Error importing code from: '+url,\r\n\t\t\t\t\tmessage: error,\r\n\t\t\t\t\ticon: Ext.Msg.ERROR,\r\n\t\t\t\t\tbuttons: Ext.Msg.OK\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet result = undefined\r\n\t\ttry {\r\n\t\t\tresult = eval.call(window, code);\r\n\t\t} catch(e) {\r\n\t\t\treturn e\r\n\t\t}\r\n\t\tif (result !== undefined) {\r\n\t\t\tconsole.log(result)\r\n\t\t}\r\n\t\treturn result; // could be a promise?\r\n\t}\r\n}\r\n\r\nexport { Notebook }\r\n","/**\r\n * A helper for working with the Voyant Notebook app.\r\n * @memberof Spyral\r\n * @namespace\r\n */\r\nclass Util {\r\n\t/**\r\n\t * Generates a random ID of the specified length.\r\n\t * @static\r\n\t * @param {number} len The length of the ID to generate?\r\n\t * @returns {string}\r\n\t */\r\n\tstatic id(len) {\r\n\t\tlen = len || 8;\r\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\r\n\t\treturn Math.random().toString(36).substring(2, 2+len) + Math.random().toString(36).substring(2, 2+len)\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @static\r\n\t * @param {*} contents \r\n\t * @param {*} config \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toString(contents, config) {\r\n\t\tif (contents.constructor === Array || contents.constructor===Object) {\r\n\t\t\tcontents = JSON.stringify(contents);\r\n\t\t\tif (contents.length>500) {\r\n\t\t\t\tcontents = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn contents.toString();\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @static\r\n\t * @param {*} before \r\n\t * @param {*} more \r\n\t * @param {*} after \r\n\t */\r\n\tstatic more(before, more, after) {\r\n\t\treturn before + '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'+contents.substring(0,500)+\" <a href=''>+</a><div style='display: none'>\"+contents.substring(501)+\"</div>\";\r\n\r\n\t}\r\n}\r\n\r\nexport { Util }\r\n","/**\r\n * A class for storing Notebook metadata\r\n * @memberof Spyral\r\n */\r\nclass Metadata {\r\n\t/**\r\n\t * The Metadata config object\r\n\t * @typedef {object} MetadataConfig\r\n\t * @property {string} title The title of the Corpus\r\n\t * @property {string} author The author of the Corpus\r\n\t * @property {string} description The description of the Corpus\r\n\t * @property {array} keywords The keywords for the Corpus\r\n\t * @property {string} created When the Corpus was created\r\n\t * @property {string} language The language of the Corpus\r\n\t * @property {string} license The license for the Corpus\r\n\t */\r\n\r\n\t/** \r\n\t * The metadata constructor.\r\n\t * @constructor\r\n\t * @param {MetadataConfig} config The metadata config object\r\n\t */\r\n\tconstructor(config) {\r\n\t\t['title', 'author', 'description', 'keywords', 'modified', 'created', 'language', 'license'].forEach(key => {\r\n\t\t\tthis[key] = undefined;\r\n\t\t})\r\n\t\tthis.version = \"0.1\"; // may be changed by config\r\n\t\tif (config instanceof HTMLDocument) {\r\n\t\t\tconfig.querySelectorAll(\"meta\").forEach(function(meta) {\r\n\t\t\t\tvar name =  meta.getAttribute(\"name\");\r\n\t\t\t\tif (name && this.hasOwnProperty(name)) {\r\n\t\t\t\t\tvar content = meta.getAttribute(\"content\");\r\n\t\t\t\t\tif (content) {\r\n\t\t\t\t\t\tthis[name] = content;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t} else {\r\n\t\t\tthis.set(config);\r\n\t\t}\r\n\t\tif (!this.created) {this.setDateNow(\"created\")}\r\n\t}\r\n\r\n\t/**\r\n\t * Set metadata properties.\r\n\t * @param {object} config A config object\r\n\t */\r\n\tset(config) {\r\n\t\tfor (var key in config) {\r\n\t\t\tif (this.hasOwnProperty(key)) {\r\n\t\t\t\tthis[key] = config[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the specified field to the current date and time.\r\n\t * @param {string} field \r\n\t */\r\n\tsetDateNow(field) {\r\n\t\tthis[field] = new Date().toISOString();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the specified field as a short date.\r\n\t * @param {string} field\r\n\t * @returns {string|undefined}\r\n\t */\r\n\tshortDate(field) {\r\n\t\treturn this[field] ? (new Date(Date.parse(this[field])).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' })) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fields as a set of HTML meta tags.\r\n\t * @returns {string}\r\n\t */\r\n\tgetHeaders() {\r\n\t\tvar quotes = /\"/g, newlines = /(\\r\\n|\\r|\\n)/g, tags = /<\\/?\\w+.*?>/g,\r\n\t\t\theaders = \"<title>\"+(this.title || \"\").replace(tags,\"\")+\"</title>\\n\"\r\n\t\tfor (var key in this) {\r\n\t\t\tif (this[key]) {\r\n\t\t\t\theaders+='<meta name=\"'+key+'\" content=\"'+this[key].replace(quotes, \"&quot;\").replace(newlines, \" \")+'\">';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn headers;\r\n\t}\r\n}\r\n\r\nexport { Metadata }\r\n","import {Corpus, Table, Load, Chart, CategoriesManager} from 'voyant';\r\n\r\nimport {Notebook} from './notebook';\r\nimport {Util} from './util';\r\nimport {Metadata} from './metadata';\r\n\r\n/**\r\n * @namespace Spyral\r\n */\r\nconst Spyral = {\r\n\tNotebook,\r\n\tUtil,\r\n\tMetadata,\r\n\tCorpus,\r\n\tTable,\r\n\tLoad,\r\n\tChart,\r\n\tCategoriesManager\r\n};\r\n\r\nexport default Spyral;\r\n"],"names":["Load","baseUrl","config","params","url","URL","trombone","all","key","undefined","searchParams","Object","keys","map","encodeURIComponent","join","opt","length","set","method","headers","body","fetch","toString","then","response","ok","json","text","Voyant","util","DetailedError","msg","error","split","shift","details","showMsg","alert","window","console","Error","urlToFetch","err","DOMParser","parseFromString","load","isDocumentsMode","mode","documents","Corpus","id","corpusid","me","Promise","resolve","tool","corpus","data","documentsMetadata","metadata","alias","documentsCount","toLocaleString","lexicalTokensCount","lexicalTypesCount","doc","title","texts","documentTerms","terms","corpusTerms","documentTokens","tokens","limit","noOthers","t","term","query","warn","documentContexts","contexts","corpusCollocates","collocates","documentNgrams","ngrams","corpusNgrams","termCorrelations","correlations","_tool","reject","isTool","obj","test","isConfig","lastArg","arguments","val","defaultAttributes","width","height","style","out","i","forTool","attr","voyantUrl","append","assign","forEach","Array","isArray","summary","setBaseUrl","api","titles","words","phrases","promise","input","name","args","apply","Chart","target","Highcharts","chart","setSeriesData","bar","line","scatter","plotOptions","networkgraph","layoutAlgorithm","enableSimulation","subtitle","credits","xAxis","yAxis","type","series","subArray","setDefaultChartType","Table","other","_rows","_headers","_rowKeyColumnIndex","rows","concat","filter","v","from","every","a","indexOf","String","format","trim","values","parseCsvLine","isNaN","setHeaders","push","Number","hasHeaders","count","freqs","counts","item","addRow","rowSort","b","cmp","columnSort","cell","addRows","rowKeyColumn","columns","rowKeyColum","h","addColumn","row","setRow","ind","create","rowIndex","getRowIndex","d","setCell","column","hasColumn","columnIndex","getColumnIndex","value","overwrite","rowInd","colInd","updateCell","findIndex","r","arr","header","col","colIndex","inds","asObj","zip","len","k","fill","_","fn","Math","min","max","sum","mean","neighbors","means","rollingMean","setColumn","variance","standardDeviation","zScores","localeCompare","sort","asObject","c","reverse","includes","j","quote","replace","noHeaders","html","document","querySelector","innerHTML","caption","Spyral","Notebook","getTarget","createElement","appendChild","columnsCount","rowsCount","isHeadersCategories","categories","dataFrom","splice","seriesFrom","status","statusText","vals","reduce","idx","start","end","subset","slice","m","num","pow","sqrt","s","regex","m0","m1","m2","m3","CategoriesManager","_categories","_features","_featureDefaults","getCategories","getCategoryTerms","addCategory","renameCategory","oldName","newName","addTerms","feature","setCategoryFeature","removeCategory","addTerm","category","removeTerm","removeTerms","index","getCategoryForTerm","getFeatureForTerm","getCategoryFeature","getFeatures","addFeature","defaultValue","removeFeature","categoryName","featureName","featureValue","getCategoryExportData","features","loadCategoryData","Ext","dfd","Deferred","Ajax","request","application","getTromboneUrl","retrieveResourceId","failQuietly","getCorpus","getId","decode","responseText","storedCategories","resource","showError","saveCategoryData","dataString","encode","storeResource","JSON","storedResource"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;MAKMA;;;;;;;;EAGL;;;;iCAIkBC,SAAS;EAC1B,WAAKA,OAAL,GAAeA,OAAf;EACA;EAED;;;;;;;;;iCAMqC;EAAA,UAArBC,MAAqB,uEAAZ,EAAY;EAAA,UAARC,MAAQ;EACpC,UAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQH,MAAM,CAACI,QAAP,GAAkBJ,MAAM,CAACI,QAAzB,GAAoC,KAAKL,OAAL,GAAe,UAA3D,CAAV;;EACA,UAAIM,GAAG,sBAAQL,MAAR,MAAmBC,MAAnB,CAAP;;EACA,WAAK,IAAIK,GAAT,IAAgBD,GAAhB,EAAqB;EACpB,YAAIA,GAAG,CAACC,GAAD,CAAH,KAAaC,SAAjB,EAA4B;EAAE,iBAAOF,GAAG,CAACC,GAAD,CAAV;EAAiB;EAC/C;;EACD,UAAIE,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,GAAjB,CAAqB,UAAAL,GAAG;EAAA,eAAIM,kBAAkB,CAACN,GAAD,CAAlB,GAA0B,GAA1B,GAAgCM,kBAAkB,CAACP,GAAG,CAACC,GAAD,CAAJ,CAAtD;EAAA,OAAxB,EAA0FO,IAA1F,CAA+F,GAA/F,CAAnB;EACA,UAAIC,GAAG,GAAG,EAAV;;EACA,UAAIN,YAAY,CAACO,MAAb,GAAsB,GAAtB,IAA8B,YAAYV,GAAZ,IAAmBA,GAAG,CAAC,QAAD,CAAH,IAAiB,KAAtE,EAA8E;EAC7E,aAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;EAAEH,UAAAA,GAAG,CAACM,YAAJ,CAAiBQ,GAAjB,CAAqBV,GAArB,EAA0BD,GAAG,CAACC,GAAD,CAA7B;EAAsC;EAC7D,OAFD,MAEO;EACNQ,QAAAA,GAAG,GAAG;EACLG,UAAAA,MAAM,EAAE,MADH;EAELC,UAAAA,OAAO,EAAE;EAAE,4BAAgB;EAAlB,WAFJ;EAGLC,UAAAA,IAAI,EAAEX;EAHD,SAAN;EAKA;;EACD,aAAOY,KAAK,CAAClB,GAAG,CAACmB,QAAJ,EAAD,EAAiBP,GAAjB,CAAL,CAA2BQ,IAA3B,CAAgC,UAAAC,QAAQ,EAAI;EAClD,YAAIA,QAAQ,CAACC,EAAb,EAAiB;EAChB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;EACA,SAFD,MAGK;EACJ,iBAAOF,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAI,IAAI,EAAI;EACnC,gBAAIC,MAAM,IAAIA,MAAM,CAACC,IAAjB,IAAyBD,MAAM,CAACC,IAAP,CAAYC,aAAzC,EAAwD;EACvD,kBAAIF,MAAM,CAACC,IAAP,CAAYC,aAAhB,CAA8B;EAC7BC,gBAAAA,GAAG,EAAE,EADwB;EAE7BC,gBAAAA,KAAK,EAAEL,IAAI,CAACM,KAAL,CAAW,cAAX,EAA2BC,KAA3B,EAFsB;EAG7BC,gBAAAA,OAAO,EAAER;EAHoB,eAA9B,EAIGS,OAJH;EAKA,aAND,MAMO;EACNC,cAAAA,KAAK,CAACV,IAAI,CAACM,KAAL,CAAW,cAAX,EAA2BC,KAA3B,EAAD,CAAL;;EACA,kBAAII,MAAM,CAACC,OAAX,EAAoB;EAAEA,gBAAAA,OAAO,CAACP,KAAR,CAAcL,IAAd;EAAqB;EAC3C;;EACD,kBAAMa,KAAK,CAACb,IAAD,CAAX;EACA,WAZM,CAAP;EAaA;EACD,OAnBM,CAAP;EAoBA;EAED;;;;;;;;;2BAMYc,YAAYxC,QAAQ;EAC/B,UAAIE,GAAG,GAAG,IAAIC,GAAJ,CAAQH,MAAM,IAAIA,MAAM,CAACI,QAAjB,GAA4BJ,MAAM,CAACI,QAAnC,GAA8C,KAAKL,OAAL,GAAe,UAArE,CAAV;EACAG,MAAAA,GAAG,CAACM,YAAJ,CAAiBQ,GAAjB,CAAqB,WAArB,EAAkCwB,UAAlC;EACA,aAAOpB,KAAK,CAAClB,GAAG,CAACmB,QAAJ,EAAD,CAAL,CAAsBC,IAAtB,CAA2B,UAAAC,QAAQ,EAAI;EAC7C,YAAIA,QAAQ,CAACC,EAAb,EAAiB;EAChB,iBAAOD,QAAP;EACA,SAFD,MAGK;EACJ,iBAAOA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAI,IAAI,EAAI;EACnC,gBAAIC,MAAM,IAAIA,MAAM,CAACC,IAAjB,IAAyBD,MAAM,CAACC,IAAP,CAAYC,aAAzC,EAAwD;EACvD,kBAAIF,MAAM,CAACC,IAAP,CAAYC,aAAhB,CAA8B;EAC7BE,gBAAAA,KAAK,EAAEL,IAAI,CAACM,KAAL,CAAW,cAAX,EAA2BC,KAA3B,EADsB;EAE7BC,gBAAAA,OAAO,EAAER;EAFoB,eAA9B,EAGGS,OAHH;EAIA,aALD,MAKO;EACNC,cAAAA,KAAK,CAACV,IAAI,CAACM,KAAL,CAAW,cAAX,EAA2BC,KAA3B,EAAD,CAAL;;EACA,kBAAII,MAAM,CAACC,OAAX,EAAoB;EAAEA,gBAAAA,OAAO,CAACP,KAAR,CAAcL,IAAd;EAAqB;EAC3C;;EACD,kBAAMa,KAAK,CAACb,IAAD,CAAX;EACA,WAXM,CAAP;EAYA;EACD,OAlBM,WAkBE,UAAAe,GAAG,EAAI;EAAE,cAAMA,GAAN;EAAW,OAlBtB,CAAP;EAmBA;EAED;;;;;;;;2BAKYvC,KAAK;EAChB,aAAO,KAAKwB,IAAL,CAAUxB,GAAV,EAAeoB,IAAf,CAAoB,UAAAI,IAAI;EAAA,eAAI,IAAIgB,SAAJ,GAAgBC,eAAhB,CAAgCjB,IAAhC,EAAsC,WAAtC,CAAJ;EAAA,OAAxB,CAAP;EACA;EAED;;;;;;;;0BAKWxB,KAAK;EACf,aAAO,KAAKwB,IAAL,CAAUxB,GAAV,EAAeoB,IAAf,CAAoB,UAAAI,IAAI;EAAA,eAAI,IAAIgB,SAAJ,GAAgBC,eAAhB,CAAgCjB,IAAhC,EAAsC,UAAtC,CAAJ;EAAA,OAAxB,CAAP;EACA;EAED;;;;;;;;2BAKYxB,KAAK;EAChB,aAAO,KAAK0C,IAAL,CAAU1C,GAAV,EAAeoB,IAAf,CAAoB,UAAAC,QAAQ;EAAA,eAAIA,QAAQ,CAACE,IAAT,EAAJ;EAAA,OAA5B,CAAP;EACA;EAED;;;;;;;;2BAKYvB,KAAK;EAChB,aAAO,KAAK0C,IAAL,CAAU1C,GAAV,EAAeoB,IAAf,CAAoB,UAAAC,QAAQ;EAAA,eAAIA,QAAQ,CAACG,IAAT,EAAJ;EAAA,OAA5B,CAAP;EACA;;;;;;kBAxHI5B;;ECHN,SAAS+C,eAAT,CAAyB7C,MAAzB,EAAiC;EAChC,SAAOA,MAAM,KAAMA,MAAM,CAAC8C,IAAP,IAAe9C,MAAM,CAAC8C,IAAP,KAAgB,WAAhC,IAAgD9C,MAAM,CAAC+C,SAA5D,CAAb;EACA;EAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA6BMC;EAEN;;;;;;;;;;;;;;;;;EAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BA;;;;;;;;;;;;;;;;;EAiBA;;;;;;;;;;;;EAYA;;;;;;;;;;;;;;;EAeA;;;;;;;;;;;;;;;EAeA;;;;;;;;;;;;;;;EAeA;;;;;;;;;;;;;;;EAeA;;;;;;;;EAQA;;;;;;;;;;;;EAYA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;;EAWA;;;;;;;;;;;;;EAaA;;;;;;;;EAQA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;;;;;EAUA;;;;;;EAMA;;;;;;EAMC;;;;;;;;;;;EAWA;;;;;EAKA,kBAAYC,EAAZ,EAAgB;EAAA;;EACf,SAAKC,QAAL,GAAgBD,EAAhB;EACA;;;;;EAQD;;;;2BAIK;EACJ,UAAIE,EAAE,GAAG,IAAT;EACA,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;EAAA,eAAIA,OAAO,CAACF,EAAE,CAACD,QAAJ,CAAX;EAAA,OAAnB,CAAP;EACA;EAED;;;;;;;;;EASA;;;;;+BAKSlD,QAAQC,QAAQ;EACxB,aAAOH,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAET,eAAe,CAAC7C,MAAD,CAAf,GAA0B,0BAA1B,GAAuD,uBADjC;EAE5BuD,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAIN5B,IAJM,CAID,UAAAkC,IAAI;EAAA,eAAIX,eAAe,CAAC7C,MAAD,CAAf,GAA0BwD,IAAI,CAACC,iBAAL,CAAuBV,SAAjD,GAA6DS,IAAI,CAACD,MAAL,CAAYG,QAA7E;EAAA,OAJH,CAAP;EAKA;EAED;;;;;;;;8BASQ1D,QAAQ;EACf,aAAO,KAAK0D,QAAL,GAAgBpC,IAAhB,CAAqB,UAAAkC,IAAI,EAAI;EACnC;EACA,sCAAuBA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAlB,GAA0BH,IAAI,CAACP,EAAtD,mBAAiEO,IAAI,CAACI,cAAL,CAAoBC,cAApB,EAAjE,6BAAwHL,IAAI,CAACM,kBAAL,CAAwBD,cAAxB,EAAxH,8BAAoLL,IAAI,CAACO,iBAAL,CAAuBF,cAAvB,EAApL;EACA,OAHM,CAAP;EAIA;EAED;;;;;;;;6BASO7D,QAAQ;EACd,aAAOF,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,0BADsB;EAE5BC,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAIN5B,IAJM,CAID,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACC,iBAAL,CAAuBV,SAAvB,CAAiCpC,GAAjC,CAAqC,UAAAqD,GAAG;EAAA,iBAAIA,GAAG,CAACC,KAAR;EAAA,SAAxC,CAAJ;EAAA,OAJH,CAAP;EAKA;EAED;;;;;;;;;EASA;;;;2BAIKjE,QAAQ;EACZ,aAAO,KAAKkE,KAAL,CAAWlE,MAAX,EAAmBsB,IAAnB,CAAwB,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAAC3C,IAAL,CAAU,IAAV,CAAJ;EAAA,OAA5B,CAAP;EACA;EAED;;;;;;;;4BASMb,QAAQ;EACb,aAAOF,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,oBADsB;EAE5BC,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACU,KAAL,CAAWA,KAAf;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;4BASMlE,QAAQ;EACb,aAAOF,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAET,eAAe,CAAC7C,MAAD,CAAf,GAA0B,sBAA1B,GAAmD,oBAD7B;EAE5BuD,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIX,eAAe,CAAC7C,MAAD,CAAf,GAA0BwD,IAAI,CAACW,aAAL,CAAmBC,KAA7C,GAAqDZ,IAAI,CAACa,WAAL,CAAiBD,KAA1E;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;6BASOpE,QAAQ;EACd,aAAOF,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,uBADsB;EAE5BC,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACc,cAAL,CAAoBC,MAAxB;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;8BASmB;EAAA,UAAbvE,MAAa,uEAAJ,EAAI;;EAClB;EACA,UAAI,EAAE,WAAWA,MAAb,CAAJ,EAA0B;EAACA,QAAAA,MAAM,CAACwE,KAAP,GAAa,CAAb;EAAgB;;EAC3C,aAAO1E,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,uBADsB;EAE5BmB,QAAAA,QAAQ,EAAE,IAFkB;EAG5BlB,QAAAA,MAAM,EAAE,KAAKL;EAHe,OAAtB,EAIJ5B,IAJI,CAIC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACc,cAAL,CAAoBC,MAApB,CAA2B5D,GAA3B,CAA+B,UAAA+D,CAAC;EAAA,iBAAIA,CAAC,CAACC,IAAN;EAAA,SAAhC,CAAJ;EAAA,OAJL,CAAP;EAKA;EAED;;;;;;;;+BASS3E,QAAQ;EAChB,UAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAAC4E,KAApB,KAA8BtC,OAAlC,EAA2C;EAACA,QAAAA,OAAO,CAACuC,IAAR,CAAa,yCAAb;EAAwD;;EACpG,aAAO/E,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,yBADsB;EAE5BC,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACsB,gBAAL,CAAsBC,QAA1B;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;iCASW/E,QAAQ;EAClB,UAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAAC4E,KAApB,KAA8BtC,OAAlC,EAA2C;EAACA,QAAAA,OAAO,CAACuC,IAAR,CAAa,2CAAb;EAA0D;;EACtG,aAAO/E,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAE,yBADsB;EAE5BC,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAACwB,gBAAL,CAAsBC,UAA1B;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;8BASQjF,QAAQ;EACf,aAAOF,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAET,eAAe,CAAC7C,MAAD,CAAf,GAA0B,uBAA1B,GAAoD,qBAD9B;EAE5BuD,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIX,eAAe,CAAC7C,MAAD,CAAf,GAA0BwD,IAAI,CAAC0B,cAAL,CAAoBC,MAA9C,GAAuD3B,IAAI,CAAC4B,YAAL,CAAkBD,MAA7E;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;mCASanF,QAAQ;EACpB,UAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAAC4E,KAApB,KAA8BtC,OAAlC,EAA2C;EAC1CA,QAAAA,OAAO,CAACuC,IAAR,CAAa,6CAAb;;EACA,YAAI,CAAChC,eAAe,CAAC7C,MAAD,CAApB,EAA8B;EAC7B,gBAAM,IAAIuC,KAAJ,CAAU,0DAAV,CAAN;EACA;EACD;;EACD,aAAOzC,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAC5BsD,QAAAA,IAAI,EAAET,eAAe,CAAC7C,MAAD,CAAf,GAA0B,iCAA1B,GAA8D,+BADxC;EAE5BuD,QAAAA,MAAM,EAAE,KAAKL;EAFe,OAAtB,EAGJ5B,IAHI,CAGC,UAAAkC,IAAI;EAAA,eAAIA,IAAI,CAAC6B,gBAAL,CAAsBC,YAA1B;EAAA,OAHL,CAAP;EAIA;EAED;;;;;;;;2BASKC,OAAoB;EAAA;EAAA,UAAbvF,MAAa,uEAAJ,EAAI;EACxB,UAAImD,EAAE,GAAG,IAAT;EACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUmC,MAAV,EAAqB;EAEvC,YAAIC,MAAM,GAAG,SAATA,MAAS,CAASC,GAAT,EAAc;EAAC,iBAAOA,GAAG,IAAK,OAAOA,GAAP,IAAY,QAAZ,IAAwB,KAAKC,IAAL,CAAUD,GAAV,KAAgB,KAAhD,IAA2D,QAAOA,GAAP,KAAc,QAAd,IAA0B,aAAaA,GAAzG;EAA8G,SAA1I;;EACA,YAAIE,QAAQ,GAAG,SAAXA,QAAW,CAASF,GAAT,EAAc;EAAC,iBAAOA,GAAG,IAAI,QAAOA,GAAP,KAAc,QAArB,IAAiC,EAAE,aAAaA,GAAf,CAAxC;EAA4D,SAA1F;;EACA,YAAIG,OAAO,GAAGC,UAAS,CAACA,UAAS,CAAC/E,MAAV,GAAiB,CAAlB,CAAvB;EACAf,QAAAA,MAAM,GAAG4F,QAAQ,CAACC,OAAD,CAAR,GAAoBA,OAApB,GAA8B,EAAvC,CALuC;;EAQvC,YAAIJ,MAAM,CAACF,KAAD,CAAN,KAAkBE,MAAM,CAACI,OAAD,CAAN,IAAmBD,QAAQ,CAACC,OAAD,CAA7C,CAAJ,EAA6D;EAAA,cAgBrDE,GAhBqD;EAAA,cAuBtD7F,GAvBsD;;EAAA;EAC5D,gBAAI8F,iBAAiB,GAAG;EACvBC,cAAAA,KAAK,EAAE1F,SADgB;EAEvB2F,cAAAA,MAAM,EAAE3F,SAFe;EAGvB4F,cAAAA,KAAK,EAAE,6BAHgB;EAIvB,uBAAO;EAJgB,aAAxB;EAMA,gBAAIC,GAAG,GAAG,EAAV;;EACA,iBAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,UAAS,CAAC/E,MAA1B,EAAkCsF,CAAC,EAAnC,EAAuC;EACtC,kBAAI3B,CAAC,GAAGoB,UAAS,CAACO,CAAD,CAAjB;;EACA,kBAAIZ,MAAM,CAACf,CAAD,CAAV,EAAe;EAAA;EACd,sBAAI,OAAOA,CAAP,IAAY,QAAhB,EAA0B;EAACA,oBAAAA,CAAC,GAAG;EAAC4B,sBAAAA,OAAO,EAAE5B;EAAV,qBAAJ;EAAiB,mBAD9B;EAGd;;;EACA0B,kBAAAA,GAAG,IAAE,UAAL;;EACA,uBAAK,IAAIG,IAAT,IAAiBP,iBAAjB,EAAoC;EAC/BD,oBAAAA,GAAG,GAAG,CAACQ,IAAI,IAAI7B,CAAR,GAAYA,CAAC,CAAC6B,IAAD,CAAb,GAAsBhG,SAAvB,MAAsCgG,IAAI,IAAIvG,MAAR,GAAiBA,MAAM,CAACuG,IAAD,CAAvB,GAAgChG,SAAtE,MAAqFgG,IAAI,IAAIP,iBAAR,GAA4BA,iBAAiB,CAACO,IAAD,CAA7C,GAAsDhG,SAA3I,CADyB;;EAEnC,wBAAIwF,GAAG,KAAGxF,SAAV,EAAqB;EACpB6F,sBAAAA,GAAG,IAAE,MAAIG,IAAJ,GAAS,IAAT,GAAcR,GAAd,GAAkB,GAAvB;EACA;EACD,mBAVa;;;EAaV7F,kBAAAA,GAAG,GAAG,IAAIC,GAAJ,CAAQ,CAACH,MAAM,IAAIA,MAAM,CAACwG,SAAjB,GAA6BxG,MAAM,CAACwG,SAApC,GAAgD1G,IAAI,CAACC,OAAtD,IAAiE,OAAjE,GAAyE2E,CAAC,CAAC4B,OAA3E,GAAmF,GAA3F,CAbI;EAcdpG,kBAAAA,GAAG,CAACM,YAAJ,CAAiBiG,MAAjB,CAAwB,QAAxB,EAAkCtD,EAAE,CAACD,QAArC,EAdc;;EAgBd,sBAAI7C,GAAG,GAAGI,MAAM,CAACiG,MAAP,CAAchC,CAAd,EAAgB1E,MAAhB,CAAV;EACAS,kBAAAA,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBsG,OAAjB,CAAyB,UAAArG,GAAG,EAAI;EAC/B,wBAAIA,GAAG,KAAI,OAAP,IAAkB,EAAEA,GAAG,IAAI0F,iBAAT,CAAtB,EAAmD;EAClD9F,sBAAAA,GAAG,CAACM,YAAJ,CAAiBiG,MAAjB,CAAwBnG,GAAxB,EAA6BD,GAAG,CAACC,GAAD,CAAhC;EACA;EACD,mBAJD,EAjBc;;EAwBd8F,kBAAAA,GAAG,IAAE,WAASlG,GAAT,GAAa,aAAlB;EAxBc;EAyBd;EACD;;EACD;EAAA,iBAAOmD,OAAO,CAAC+C,GAAD;EAAd;EArC4D;;EAAA;EAsC5D,SAtCD,MAsCO;EACN,cAAIQ,KAAK,CAACC,OAAN,CAActB,KAAd,CAAJ,EAA0B;EACzBA,YAAAA,KAAK,GAAGA,KAAK,CAAC1E,IAAN,CAAW,GAAX,CAAR;EACA;;EAED,cAAImF,iBAAiB,GAAG;EACvBC,YAAAA,KAAK,EAAE1F,SADgB;EAEvB2F,YAAAA,MAAM,EAAE3F,SAFe;EAGvB4F,YAAAA,KAAK,EAAE,yBAAwB,MAAI,CAACZ,KAAK,GAAGA,KAAH,GAAW,EAAjB,EAAqBvD,KAArB,CAA2B,GAA3B,EAAgCjB,MAA5D,GAAoE;EAHpD,WAAxB,CALM;;EAYN,cAAIqF,GAAG,GAAE,UAAT;;EACA,eAAK,IAAIG,IAAT,IAAiBP,iBAAjB,EAAoC;EACnC,gBAAID,GAAG,GAAG,CAACQ,IAAI,IAAIvG,MAAR,GAAiBA,MAAM,CAACuG,IAAD,CAAvB,GAAgChG,SAAjC,MAAgDgG,IAAI,IAAIP,iBAAR,GAA4BA,iBAAiB,CAACO,IAAD,CAA7C,GAAsDhG,SAAtG,CAAV;;EACA,gBAAIwF,GAAG,KAAGxF,SAAV,EAAqB;EACpB6F,cAAAA,GAAG,IAAE,MAAIG,IAAJ,GAAS,IAAT,GAAcR,GAAd,GAAkB,GAAvB;EACA;EACD,WAlBK;;;EAqBN,cAAI7F,GAAG,GAAG,IAAIC,GAAJ,CAAQ,CAACH,MAAM,IAAIA,MAAM,CAACwG,SAAjB,GAA6BxG,MAAM,CAACwG,SAApC,GAAgD1G,IAAI,CAACC,OAAtD,KAAgEwF,KAAK,GAAI,iCAA+BA,KAAnC,GAA4C,EAAjH,CAAR,CAAV;EACArF,UAAAA,GAAG,CAACM,YAAJ,CAAiBiG,MAAjB,CAAwB,QAAxB,EAAkCtD,EAAE,CAACD,QAArC,EAtBM;;EAwBNzC,UAAAA,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoB2G,OAApB,CAA4B,UAAArG,GAAG,EAAI;EAClC,gBAAIA,GAAG,KAAI,OAAP,IAAkB,EAAEA,GAAG,IAAI0F,iBAAT,CAAtB,EAAmD;EAClD9F,cAAAA,GAAG,CAACM,YAAJ,CAAiBiG,MAAjB,CAAwBnG,GAAxB,EAA6BN,MAAM,CAACM,GAAD,CAAnC;EACA;EACD,WAJD;EAKA+C,UAAAA,OAAO,CAAC+C,GAAG,GAAC,QAAJ,GAAalG,GAAb,GAAiB,YAAlB,CAAP;EACA;EACD,OA7EM,CAAP;EA8EA;EAED;;;;;;;;;iCAUW;EACV,aAAO,KAAK4G,OAAL,EAAP;EACA;EAED;;;;;;;iCAzUkB/G,SAAS;EAC1BD,MAAAA,IAAI,CAACiH,UAAL,CAAgBhH,OAAhB;EACA;;;yBAgBSC,QAAQgH,KAAK;EACtB,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACN,EAAP,CAAU+D,GAAG,IAAIhH,MAAjB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;+BAoBeA,QAAQgH,KAAK;EAC5B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACG,QAAP,CAAgBsD,GAAG,IAAIhH,MAAvB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;8BAccA,QAAQgH,KAAK;EAC3B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACuD,OAAP,CAAeE,GAAG,IAAIhH,MAAtB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;6BAeaA,QAAQgH,KAAK;EAC1B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC0D,MAAP,CAAcD,GAAG,IAAIhH,MAArB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;2BAeWA,QAAQgH,KAAK;EACxB,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC7B,IAAP,CAAYsF,GAAG,IAAIhH,MAAnB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;4BAcYA,QAAQgH,KAAK;EACzB,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACW,KAAP,CAAa8C,GAAG,IAAIhH,MAApB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;4BAcYA,QAAQgH,KAAK;EACzB,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACa,KAAP,CAAa4C,GAAG,IAAIhH,MAApB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;6BAcaA,QAAQgH,KAAK;EAC1B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACgB,MAAP,CAAcyC,GAAG,IAAIhH,MAArB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;4BAiBYA,QAAQgH,KAAK;EACzB,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC2D,KAAP,CAAaF,GAAG,IAAIhH,MAApB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;+BAeeA,QAAQgH,KAAK;EAC5B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACwB,QAAP,CAAgBiC,GAAG,IAAIhH,MAAvB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;iCAeiBA,QAAQgH,KAAK;EAC9B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC0B,UAAP,CAAkB+B,GAAG,IAAIhH,MAAzB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;8BAccA,QAAQgH,KAAK;EAC3B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC4D,OAAP,CAAeH,GAAG,IAAIhH,MAAtB,CAAJ;EAAA,OAA/B,CAAP;EACA;;;mCAoBmBA,QAAQgH,KAAK;EAChC,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAAC+B,YAAP,CAAoB0B,GAAG,IAAIhH,MAA3B,CAAJ;EAAA,OAA/B,CAAP;EACA;;;2BA0FWsD,QAAMtD,QAAQgH,KAAK;EAC9B,aAAOhE,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,EAAoBsB,IAApB,CAAyB,UAAAiC,MAAM;EAAA,eAAIA,MAAM,CAACD,IAAP,CAAYA,MAAZ,EAAkBtD,MAAlB,EAA0BgH,GAA1B,CAAJ;EAAA,OAA/B,CAAP;EACA;;;6BAUahH,QAAQ;EACrB,aAAOgD,MAAM,CAACJ,IAAP,CAAY5C,MAAZ,CAAP;EACA;EAED;;;;;;;2BAIYA,QAAQ;EACnB,UAAMoH,OAAO,GAAG,IAAIhE,OAAJ,CAAY,UAASC,OAAT,EAAkBmC,MAAlB,EAA0B;EACrD,YAAIxF,MAAM,YAAYgD,MAAtB,EAA8B;EAC7BK,UAAAA,OAAO,CAACrD,MAAD,CAAP;EACA,SAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACe,MAAP,GAAc,CAA5C,IAAiD,KAAK4E,IAAL,CAAU3F,MAAV,MAAoB,KAAzE,EAAgF;EACtFqD,UAAAA,OAAO,CAAC,IAAIL,MAAJ,CAAWhD,MAAX,CAAD,CAAP;EACA,SAFM,MAEA,IAAI,QAAOA,MAAP,MAAkB,QAAlB,IAA8BA,MAAM,CAACuD,MAAzC,EAAiD;EACvDF,UAAAA,OAAO,CAAC,IAAIL,MAAJ,CAAWhD,MAAM,CAACuD,MAAlB,CAAD,CAAP;EACA,SAFM,MAEA;EACN,cAAI,OAAOvD,MAAP,KAAkB,QAAtB,EAAgC;EAACA,YAAAA,MAAM,GAAG;EAACqH,cAAAA,KAAK,EAAErH;EAAR,aAAT;EAAyB;;EAC1D,cAAIA,MAAM,IAAIA,MAAM,CAACqH,KAArB,EAA4B;EAC3BvH,YAAAA,IAAI,CAACM,QAAL,CAAcJ,MAAd,EAAsB;EAACsD,cAAAA,IAAI,EAAE;EAAP,aAAtB,EACChC,IADD,CACM,UAAAkC,IAAI;EAAA,qBAAIH,OAAO,CAAC,IAAIL,MAAJ,CAAWQ,IAAI,CAACD,MAAL,CAAYG,QAAZ,CAAqBT,EAAhC,CAAD,CAAX;EAAA,aADV;EAEA;EACD;EACD,OAde,CAAhB;EAgBA,OAAC,IAAD,EAAM,UAAN,EAAiB,SAAjB,EAA2B,QAA3B,EAAoC,MAApC,EAA2C,OAA3C,EAAmD,OAAnD,EAA2D,QAA3D,EAAoE,OAApE,EAA4E,UAA5E,EAAuF,YAAvF,EAAoG,SAApG,EAA8G,cAA9G,EAA6H,MAA7H,EAAqI0D,OAArI,CAA6I,UAAAW,IAAI,EAAI;EACpJF,QAAAA,OAAO,CAACE,IAAD,CAAP,GAAgB,YAAW;EAC1B,cAAIC,IAAI,GAAGzB,SAAX;EACA,iBAAOsB,OAAO,CAAC9F,IAAR,CAAa,UAAAiC,MAAM,EAAI;EAAC,mBAAOA,MAAM,CAAC+D,IAAD,CAAN,CAAaE,KAAb,CAAmBjE,MAAnB,EAA2BgE,IAA3B,CAAP;EAAwC,WAAhE,CAAP;EACA,SAHD;EAIA,OALD;;EAMAH,MAAAA,OAAO,CAACV,MAAR,GAAiB,UAASY,IAAT,EAAe;EAC/B,aAAKhG,IAAL,CAAU,UAAAiC,MAAM,EAAI;EAAClB,UAAAA,MAAM,CAACiF,IAAD,CAAN,GAAe/D,MAAf;EAAuB,iBAAOA,MAAP;EAAc,SAA1D;EACA,OAFD;;EAIA,aAAO6D,OAAP;EACA;;;;;;kBA/rBIpE,gBA4USlD;;EC/Wf;;;;;MAKM2H;EACL;;;;;;;;;;;;;EAaA;;;;;;EAMG,iBAAYC,MAAZ,EAAoBlE,IAApB,EAA0B;EAAA;;EACzB,SAAKkE,MAAL,GAAcA,MAAd;EACA,SAAKlE,IAAL,GAAYA,IAAZ;EACH;EAED;;;;;;;;;;;6BAOOkE,QAAQ1H,QAAQ;EACtB,aAAO2H,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;EAED;;;;;;;;;;;EAqFA;;;;;4BAKe;EAAA,UAAXA,MAAW,uEAAJ,EAAI;EACdyH,MAAAA,KAAK,CAACI,aAAN,CAAoB7H,MAApB,EAA4B,KAAKwD,IAAjC;EACA,aAAOiE,KAAK,CAACK,GAAN,CAAU,KAAKJ,MAAf,EAAuB1H,MAAvB,CAAP;EACA;EACD;;;;;;;;;;EAWA;;;;;6BAKgB;EAAA,UAAXA,MAAW,uEAAJ,EAAI;EACfyH,MAAAA,KAAK,CAACI,aAAN,CAAoB7H,MAApB,EAA4B,KAAKwD,IAAjC;EACA,aAAOiE,KAAK,CAACM,IAAN,CAAW,KAAKL,MAAhB,EAAwB1H,MAAxB,CAAP;EACA;EACD;;;;;;;;;;EAWA;;;;;gCAKmB;EAAA,UAAXA,MAAW,uEAAJ,EAAI;EAClByH,MAAAA,KAAK,CAACI,aAAN,CAAoB7H,MAApB,EAA4B,KAAKwD,IAAjC;EACA,aAAOiE,KAAK,CAACO,OAAN,CAAc,KAAKN,MAAnB,EAA2B1H,MAA3B,CAAP;EACA;EACD;;;;;;;;;;EAWA;;;;;qCAKwB;EAAA,UAAXA,MAAW,uEAAJ,EAAI;EACvBA,MAAAA,MAAM,CAACiI,WAAP,GAAqB;EACpBC,QAAAA,YAAY,EAAE;EACbC,UAAAA,eAAe,EAAE;EAChBC,YAAAA,gBAAgB,EAAE;EADF,WADJ;EAIb1H,UAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,IAAT;EAJO;EADM,OAArB;EAQA+G,MAAAA,KAAK,CAACI,aAAN,CAAoB7H,MAApB,EAA4B,KAAKwD,IAAjC;EAEA,aAAOiE,KAAK,CAACS,YAAN,CAAmB,KAAKR,MAAxB,EAAgC1H,MAAhC,CAAP;EACA;EACD;;;;;;;;;6BA5Jc0H,QAAQ1H,QAAQ;EAC7B;EACA,UAAI,WAAWA,MAAf,EAAuB;EACtB,YAAI,OAAOA,MAAM,CAACiE,KAAd,IAAuB,QAA3B,EAAqC;EACpCjE,UAAAA,MAAM,CAACiE,KAAP,GAAe;EAACvC,YAAAA,IAAI,EAAE1B,MAAM,CAACiE;EAAd,WAAf;EACA;EACD,OAJD,MAIO;EACNjE,QAAAA,MAAM,CAACiE,KAAP,GAAe,KAAf;EACA,OAR4B;;;EAW7B,UAAI,cAAcjE,MAAlB,EAA0B;EACzB,YAAI,OAAOA,MAAM,CAACqI,QAAd,IAA0B,QAA9B,EAAwC;EACvCrI,UAAAA,MAAM,CAACqI,QAAP,GAAkB;EAAC3G,YAAAA,IAAI,EAAE1B,MAAM,CAACqI;EAAd,WAAlB;EACA;EACD,OAJD,MAIO;EACNrI,QAAAA,MAAM,CAACqI,QAAP,GAAkB,KAAlB;EACA,OAjB4B;;;EAoB7B,UAAI,EAAE,aAAarI,MAAf,CAAJ,EAA4B;EAC3BA,QAAAA,MAAM,CAACsI,OAAP,GAAiB,KAAjB;EACA,OAtB4B;;;EAyB7B,UAAI,EAAE,WAAWtI,MAAb,CAAJ,EAA0B;EAACA,QAAAA,MAAM,CAACuI,KAAP,GAAe,EAAf;EAAkB;;EAC7C,UAAI,EAAE,WAAWvI,MAAM,CAACuI,KAApB,CAAJ,EAAgC,CAAhC;EAIA;;;EACA,UAAI,EAAE,WAAWvI,MAAb,CAAJ,EAA0B;EAACA,QAAAA,MAAM,CAACwI,KAAP,GAAe,EAAf;EAAkB;;EAC7C,UAAI,EAAE,WAAWxI,MAAM,CAACwI,KAApB,CAAJ,EAAgC;EAC/BxI,QAAAA,MAAM,CAACwI,KAAP,CAAavE,KAAb,GAAqB,KAArB;EACA;;EAED,aAAO0D,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;EAED;;;;;;;;0CAK2BA,QAAQyI,MAAM;EACxC,UAAI,UAAUzI,MAAd,EAAsB;EACrBA,QAAAA,MAAM,CAAC4H,KAAP,CAAaa,IAAb,GAAoBzI,MAAM,CAACyI,IAA3B;EACA,eAAOzI,MAAM,CAACyI,IAAd;EACA;EACA,OALuC;;;EASxC,UAAI,WAAWzI,MAAf,EAAuB;EACtB,YAAI,UAAUA,MAAM,CAAC4H,KAArB,EAA4B;EAAC;EAAO,SADd;;EAEtB,OAFD,MAEO;EACN5H,QAAAA,MAAM,CAAC4H,KAAP,GAAe,EAAf;EACA;;EAED5H,MAAAA,MAAM,CAAC4H,KAAP,CAAaa,IAAb,GAAoBA,IAApB;EACA,aAAOzI,MAAP;EACA;EAED;;;;;;;;oCAKqBA,QAAQwD,MAAM;EAClC,UAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAJ,EAAyB;EACxB,YAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAI,CAAC,CAAD,CAAlB,CAAJ,EAA4B;EAC3BxD,UAAAA,MAAM,CAAC0I,MAAP,GAAgBlF,IAAI,CAAC7C,GAAL,CAAS,UAAAgI,QAAQ,EAAI;EAAE,mBAAO;EAACnF,cAAAA,IAAI,EAAEmF;EAAP,aAAP;EAAyB,WAAhD,CAAhB;EACA,SAFD,MAEO;EACN3I,UAAAA,MAAM,CAAC0I,MAAP,GAAgB,CAAC;EAAClF,YAAAA,IAAI,EAAEA;EAAP,WAAD,CAAhB;EACA;EACD;EACD;;;0BAiBakE,QAAQ1H,QAAQ;EAC7ByH,MAAAA,KAAK,CAACmB,mBAAN,CAA0B5I,MAA1B,EAAkC,KAAlC;EACA,aAAO2H,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;;;2BAiBc0H,QAAQ1H,QAAQ;EAC9ByH,MAAAA,KAAK,CAACmB,mBAAN,CAA0B5I,MAA1B,EAAkC,MAAlC;EACA,aAAO2H,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;;;8BAiBiB0H,QAAQ1H,QAAQ;EACjCyH,MAAAA,KAAK,CAACmB,mBAAN,CAA0B5I,MAA1B,EAAkC,SAAlC;EACA,aAAO2H,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;;;mCA0BmB0H,QAAQ1H,QAAQ;EACnCyH,MAAAA,KAAK,CAACmB,mBAAN,CAA0B5I,MAA1B,EAAkC,cAAlC;EACA,aAAO2H,UAAU,CAACC,KAAX,CAAiBF,MAAjB,EAAyB1H,MAAzB,CAAP;EACA;;;;;;ECnNF;;;;;;MAKM6I;EACL;;;;;;;;;EAUA;;;;;;EAMA,iBAAYrF,IAAZ,EAAkBxD,MAAlB,EAAoC;EAAA;;EAAA,sCAAP8I,KAAO;EAAPA,MAAAA,KAAO;EAAA;;EAAA;;EAEnC,SAAKC,KAAL,GAAa,EAAb;EACA,SAAKC,QAAL,GAAgB,EAAhB;EACA,SAAKC,kBAAL,GAA0B,CAA1B,CAJmC;;EAOnC,QAAIzF,IAAI,IAAI,QAAOA,IAAP,KAAe,QAAvB,KAAoC,OAAOxD,MAAP,IAAiB,QAAjB,IAA6B,OAAOA,MAAP,IAAiB,QAA9C,IAA0D4G,KAAK,CAACC,OAAN,CAAc7G,MAAd,CAA9F,CAAJ,EAA0H;EACzHwD,MAAAA,IAAI,CAAC0F,IAAL,GAAY,CAAClJ,MAAD,EAASmJ,MAAT,CAAgBL,KAAhB,EAAuBM,MAAvB,CAA8B,UAAAC,CAAC;EAAA,eAAIA,CAAC,KAAG9I,SAAR;EAAA,OAA/B,CAAZ;EACAP,MAAAA,MAAM,GAAGO,SAAT;EACA,KAVkC;;;EAanC,QAAIuF,SAAS,CAAC/E,MAAV,GAAiB,CAAjB,IAAsB6F,KAAK,CAAC0C,IAAN,CAAWxD,SAAX,EAAsByD,KAAtB,CAA4B,UAAAC,CAAC;EAAA,aAAIA,CAAC,KAAGjJ,SAAJ,IAAiB,CAACqG,KAAK,CAACC,OAAN,CAAc2C,CAAd,CAAlB,IAAsC,QAAOA,CAAP,KAAY,QAAtD;EAAA,KAA7B,CAA1B,EAAwH;EACvHhG,MAAAA,IAAI,GAAG,CAACA,IAAD,EAAMxD,MAAN,EAAcmJ,MAAd,CAAqBL,KAArB,EAA4BM,MAA5B,CAAmC,UAAAC,CAAC;EAAA,eAAIA,CAAC,KAAG9I,SAAR;EAAA,OAApC,CAAP;EACAP,MAAAA,MAAM,GAAGO,SAAT;EACA,KAhBkC;;;EAmBnC,QAAIqG,KAAK,CAACC,OAAN,CAAcrD,IAAd,KAAuBA,IAAI,CAACzC,MAAL,IAAa,CAApC,IAAyC,OAAOyC,IAAI,CAAC,CAAD,CAAX,IAAkB,QAA3D,KAAyEA,IAAI,CAAC,CAAD,CAAJ,CAAQiG,OAAR,CAAgB,GAAhB,IAAqB,CAAC,CAAtB,IAA2BjG,IAAI,CAAC,CAAD,CAAJ,CAAQiG,OAAR,CAAgB,IAAhB,IAAsB,CAAC,CAA3H,CAAJ,EAAmI;EAClIjG,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;EACA,KArBkC;;;EAwBnC,QAAIA,IAAI,KAAK,OAAOA,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAc,QAA9C,CAAR,EAAiE;EAChE,UAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;EAACA,QAAAA,IAAI,GAAGkG,MAAM,CAAClG,IAAD,CAAb;EAAoB,OADc;;;EAEhE,UAAI0F,IAAI,GAAG,EAAX;EACA,UAAIS,MAAM,GAAG3J,MAAM,IAAI,YAAYA,MAAtB,GAA+BA,MAAM,CAAC2J,MAAtC,GAA+CpJ,SAA5D;EACAiD,MAAAA,IAAI,CAACxB,KAAL,CAAW,qCAAX,EAAkD2E,OAAlD,CAA0D,UAACoB,IAAD,EAAM1B,CAAN,EAAY;EACrE,YAAI0B,IAAI,CAAC6B,IAAL,GAAY7I,MAAZ,GAAmB,CAAvB,EAA0B;EACzB,cAAI8I,MAAJ;;EACA,cAAKF,MAAM,IAAIA,MAAM,IAAE,KAAnB,IAA6B5B,IAAI,CAAC0B,OAAL,CAAa,IAAb,IAAmB,CAAC,CAArD,EAAwD;EACvDI,YAAAA,MAAM,GAAG9B,IAAI,CAAC/F,KAAL,CAAW,IAAX,CAAT;EACA,WAFD,MAEO,IAAK2H,MAAM,IAAIA,MAAM,IAAE,KAAnB,IAA6B5B,IAAI,CAAC0B,OAAL,CAAa,GAAb,IAAkB,CAAC,CAApD,EAAuD;EAC7DI,YAAAA,MAAM,GAAGC,YAAY,CAAC/B,IAAD,CAArB;EACA,WAFM,MAEA;EACN8B,YAAAA,MAAM,GAAG,CAAC9B,IAAD,CAAT;EACA,WARwB;EAWzB;;;EACA,cAAI1B,CAAC,IAAE,CAAH,IAAQwD,MAAM,CAACN,KAAP,CAAa,UAAAF,CAAC;EAAA,mBAAIU,KAAK,CAACV,CAAD,CAAT;EAAA,WAAd,CAAR,KACD,QAAOrJ,MAAP,KAAiB,QAAlB,IAAgC,QAAOA,MAAP,KAAiB,QAAjB,IAA6B,EAAE,gBAAgBA,MAAlB,CAA7B,IAA0D,EAAE,aAAaA,MAAf,CADxF,CAAJ,EACsH;EACrH,YAAA,KAAI,CAACgK,UAAL,CAAgBH,MAAhB;EACA,WAHD,MAGO;EACNX,YAAAA,IAAI,CAACe,IAAL,CAAUJ,MAAM,CAAClJ,GAAP,CAAW,UAAA0I,CAAC;EAAA,qBAAIU,KAAK,CAACV,CAAD,CAAL,GAAWA,CAAX,GAAea,MAAM,CAACb,CAAD,CAAzB;EAAA,aAAZ,CAAV;EACA;EACD;EACD,OApBD;EAqBA7F,MAAAA,IAAI,GAAG0F,IAAP;EACA;;EAED,QAAI1F,IAAI,IAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAZ,EAAiC;EAChC,UAAIxD,MAAJ,EAAY;EACX,YAAI4G,KAAK,CAACC,OAAN,CAAc7G,MAAd,CAAJ,EAA2B;EAC1B,eAAKgK,UAAL,CAAgBhK,MAAhB;EACA,SAFD,MAEO,IAAI,QAAOA,MAAP,KAAiB,QAArB,EAA+B;EACrC,cAAI,aAAaA,MAAjB,EAAyB;EACxB,iBAAKgK,UAAL,CAAgBhK,MAAM,CAACkB,OAAvB;EACA,WAFD,MAEO,IAAI,gBAAgBlB,MAAhB,IAA0BA,MAAM,CAACmK,UAArC,EAAiD;EACvD,iBAAKH,UAAL,CAAgBxG,IAAI,CAACvB,KAAL,EAAhB;EACA;EACD;EACD;;EACD,UAAIjC,MAAM,IAAI,WAAWA,MAArB,IAA+BA,MAAM,CAACoK,KAA1C,EAAiD;EAChD,YAAIC,KAAK,GAAGxB,KAAK,CAACyB,MAAN,CAAa9G,IAAb,CAAZ;;EACA,YAAIxD,MAAM,CAACoK,KAAP,IAAc,UAAlB,EAA8B;EAC7B,eAAK,IAAIG,IAAT,IAAiBF,KAAjB,EAAwB;EACvB,iBAAKG,MAAL,CAAYD,IAAZ,EAAkBF,KAAK,CAACE,IAAD,CAAvB;EACA;;EACD,eAAKE,OAAL,CAAa,UAACjB,CAAD,EAAGkB,CAAH;EAAA,mBAAS7B,KAAK,CAAC8B,GAAN,CAAUD,CAAC,CAAC,CAAD,CAAX,EAAelB,CAAC,CAAC,CAAD,CAAhB,CAAT;EAAA,WAAb;EACA,SALD,MAKO;EACN,eAAKR,QAAL,GAAgB,EAAhB,CADM;;EAEN,eAAKwB,MAAL,CAAYH,KAAZ;EACA,eAAKO,UAAL,CAAgB,UAACpB,CAAD,EAAGkB,CAAH;EAAA,mBAAS7B,KAAK,CAAC8B,GAAN,CAAU,KAAI,CAACE,IAAL,CAAU,CAAV,EAAYH,CAAZ,CAAV,EAAyB,KAAI,CAACG,IAAL,CAAU,CAAV,EAAYrB,CAAZ,CAAzB,CAAT;EAAA,WAAhB;EACA;EACD,OAZD,MAYO;EACN,aAAKsB,OAAL,CAAatH,IAAb;EACA;EACD,KA3BD,MA2BO,IAAIA,IAAI,IAAI,QAAOA,IAAP,KAAe,QAA3B,EAAqC;EAC3C,UAAI,aAAaA,IAAb,IAAqBoD,KAAK,CAACC,OAAN,CAAcrD,IAAI,CAACtC,OAAnB,CAAzB,EAAsD;EACrD,aAAK8I,UAAL,CAAgBxG,IAAI,CAACtC,OAArB;EACA,OAFD,MAEO,IAAI,gBAAgBsC,IAAhB,IAAwB,UAAUA,IAAtC,EAA4C;EAClD,aAAKwG,UAAL,CAAgBxG,IAAI,CAAC0F,IAAL,CAAUjH,KAAV,EAAhB;EACA;;EACD,UAAI,UAAUuB,IAAV,IAAkBoD,KAAK,CAACC,OAAN,CAAcrD,IAAI,CAAC0F,IAAnB,CAAtB,EAAgD;EAC/C,aAAK4B,OAAL,CAAatH,IAAI,CAAC0F,IAAlB;EACA;;EACD,UAAI,kBAAkB1F,IAAtB,EAA4B;EAC3B,YAAI,OAAOA,IAAI,CAACuH,YAAZ,IAA4B,QAAhC,EAA0C;EACzC,cAAIvH,IAAI,CAACuH,YAAL,GAAoB,KAAKC,OAAL,EAAxB,EAAwC;EACvC,iBAAK/B,kBAAL,GAA0BzF,IAAI,CAACuH,YAA/B;EACA,WAFD,MAEO;EACN,kBAAM,IAAIxI,KAAJ,CAAU,0EAAwEiB,IAAI,CAACyH,WAAvF,CAAN;EACA;EACD,SAND,MAMO,IAAI,OAAOzH,IAAI,CAACuH,YAAZ,IAA4B,QAAhC,EAA0C;EAChD,cAAIvH,IAAI,CAACuH,YAAL,IAAqB,KAAK/B,QAA9B,EAAwC;EACvC,iBAAKC,kBAAL,GAA0B,KAAKD,QAAL,CAAcxF,IAAI,CAACuH,YAAnB,CAA1B;EACA,WAFD,MAEO;EACN,kBAAM,IAAIxI,KAAJ,CAAU,uDAAqDiB,IAAI,CAACuH,YAApE,CAAN;EACA;EACD;EACD;EACD;EACD;EAED;;;;;;;;;iCAKWvH,MAAM;EAAA;;EAChB,UAAIA,IAAI,IAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAZ,EAAiC;EAChCA,QAAAA,IAAI,CAACmD,OAAL,CAAa,UAAAuE,CAAC;EAAA,iBAAI,MAAI,CAACC,SAAL,CAAeD,CAAf,CAAJ;EAAA,SAAd,EAAqC,IAArC;EACA,OAFD,MAEO,IAAI,QAAO1H,IAAP,KAAe,QAAnB,EAA6B;EACnC,YAAI,KAAKwH,OAAL,MAAgB,CAAhB,IAAqBvK,MAAM,CAACC,IAAP,CAAY8C,IAAZ,EAAkBzC,MAAlB,IAA0B,KAAKiK,OAAL,EAAnD,EAAmE;EAClE,eAAKhC,QAAL,GAAgBxF,IAAhB;EACA,SAFD,MAEO;EACN,gBAAM,IAAIjB,KAAJ,CAAU,qCAAV,CAAN;EACA;EACD,OANM,MAMA;EACN,cAAM,IAAIA,KAAJ,CAAU,2EAAyEiB,IAAnF,CAAN;EACA;;EACD,aAAO,IAAP;EACA;EAED;;;;;;;;8BAKQA,MAAM;EAAA;;EACbA,MAAAA,IAAI,CAACmD,OAAL,CAAa,UAAAyE,GAAG;EAAA,eAAI,MAAI,CAACZ,MAAL,CAAYY,GAAZ,CAAJ;EAAA,OAAhB,EAAsC,IAAtC;EACA,aAAO,IAAP;EACA;EAED;;;;;;;;6BAKO5H,MAAgB;EAAA,yCAAPsF,KAAO;EAAPA,QAAAA,KAAO;EAAA;;EAEtB;EACA,UAAIA,KAAK,CAAC/H,MAAN,GAAa,CAAjB,EAAoB;EACnB,eAAO,KAAKyJ,MAAL,CAAY,CAAChH,IAAD,EAAO2F,MAAP,CAAcL,KAAd,CAAZ,CAAP;EACA;;EAED,WAAKuC,MAAL,CAAY,KAAKnC,IAAL,EAAZ,EAAyB1F,IAAzB,EAA+B,IAA/B;EACA,aAAO,IAAP;EACA;EAED;;;;;;;;;;6BAOO8H,KAAK9H,MAAM+H,QAAQ;EAAA;;EAEzB,UAAIC,QAAQ,GAAG,KAAKC,WAAL,CAAiBH,GAAjB,EAAsBC,MAAtB,CAAf;;EACA,UAAIC,QAAQ,IAAE,KAAKtC,IAAL,EAAV,IAAyB,CAACqC,MAA9B,EAAsC;EACrC,cAAM,IAAIhJ,KAAJ,CAAU,+DAA6D+I,GAA7D,GAAiE,+BAA3E,CAAN;EACA,OALwB;;;EAQzB,UAAI9H,IAAI,IAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAZ,EAAiC;EAChC,YAAIA,IAAI,CAACzC,MAAL,GAAY,KAAKiK,OAAL,EAAhB,EAAgC;EAC/B,cAAIO,MAAJ,EAAY;EACX,iBAAK,IAAIlF,CAAC,GAAG,KAAK2E,OAAL,EAAb,EAA6B3E,CAAC,GAAC7C,IAAI,CAACzC,MAApC,EAA4CsF,CAAC,EAA7C,EAAiD;EAChD,mBAAK8E,SAAL;EACA;EACD,WAJD,MAIO;EACN,kBAAM,IAAI5I,KAAJ,CAAU,wGAAV,CAAN;EACA;EACD;;EACDiB,QAAAA,IAAI,CAACmD,OAAL,CAAa,UAAC+E,CAAD,EAAGrF,CAAH;EAAA,iBAAS,MAAI,CAACsF,OAAL,CAAaH,QAAb,EAAuBnF,CAAvB,EAA0BqF,CAA1B,CAAT;EAAA,SAAb,EAAoD,IAApD;EACA,OAXD;EAAA,WAcK,IAAI,QAAOlI,IAAP,KAAe,QAAnB,EAA6B;EACjC,eAAK,IAAIoI,OAAT,IAAmBpI,IAAnB,EAAyB;EACxB,gBAAI,CAAC,KAAKqI,SAAL,CAAeD,OAAf,CAAL,EAA6B;;EAE7B,iBAAKD,OAAL,CAAaH,QAAb,EAAuBI,OAAvB,EAA+BpI,IAAI,CAACoI,OAAD,CAAnC;EACA;EACD,SANI,MAQA,IAAI,KAAKZ,OAAL,KAAe,CAAf,IAAoBO,MAAxB,EAAgC;EAAE;EACtC,cAAI,KAAKP,OAAL,MAAgB,CAApB,EAAuB;EACtB,iBAAKG,SAAL,GADsB;EAEtB;;EACD,eAAKQ,OAAL,CAAaH,QAAb,EAAsB,CAAtB,EAAwBhI,IAAxB;EACA,SALI,MAKE;EACN,gBAAM,IAAIjB,KAAJ,CAAU,0DAAV,CAAN;EACA;;EAED,aAAO,IAAP;EAEA;EAED;;;;;;;;;;gCAOU+I,KAAK9H,MAAM+H,QAAQ;EAAA;;EAE5B,UAAIO,WAAW,GAAG,KAAKC,cAAL,CAAoBT,GAApB,EAAyBC,MAAzB,CAAlB;;EACA,UAAIO,WAAW,IAAE,KAAKd,OAAL,EAAb,IAA+B,CAACO,MAApC,EAA4C;EAC3C,cAAM,IAAIhJ,KAAJ,CAAU,qEAAmE+I,GAAnE,GAAuE,kCAAjF,CAAN;EACA,OAL2B;;;EAQ5B,UAAI9H,IAAI,IAAIoD,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAZ,EAAiC;EAChCA,QAAAA,IAAI,CAACmD,OAAL,CAAa,UAAC+E,CAAD,EAAGrF,CAAH;EAAA,iBAAS,MAAI,CAACsF,OAAL,CAAatF,CAAb,EAAgByF,WAAhB,EAA6BJ,CAA7B,EAAgCH,MAAhC,CAAT;EAAA,SAAb,EAA+D,IAA/D;EACA,OAFD;EAAA,WAKK,IAAI,QAAO/H,IAAP,KAAe,QAAnB,EAA6B;EACjC,eAAK,IAAI4H,GAAT,IAAgB5H,IAAhB,EAAsB;EACrB,iBAAKmI,OAAL,CAAaP,GAAb,EAAkBU,WAAlB,EAA+BtI,IAAI,CAACoI,MAAD,CAAnC,EAA6CL,MAA7C;EACA;EACD,SAJI;EAAA,aAOA;EACJ,iBAAKI,OAAL,CAAa,CAAb,EAAeG,WAAf,EAA2BtI,IAA3B,EAAiC+H,MAAjC;EACA;;EAED,aAAO,IAAP;EAEA;EAED;;;;;;;;;;iCAOWH,KAAKQ,QAAQI,OAAOC,WAAW;EACzC,UAAIT,QAAQ,GAAG,KAAKC,WAAL,CAAiBL,GAAjB,EAAsB,IAAtB,CAAf;EACA,UAAIU,WAAW,GAAG,KAAKC,cAAL,CAAoBH,MAApB,EAA4B,IAA5B,CAAlB;EACA,UAAI7F,GAAG,GAAG,KAAK8E,IAAL,CAAUW,QAAV,EAAoBM,WAApB,CAAV;EACA,WAAK/C,KAAL,CAAWyC,QAAX,EAAqBM,WAArB,IAAoC/F,GAAG,IAAI,CAACkG,SAAR,GAAoBlG,GAAG,GAACiG,KAAxB,GAAgCA,KAApE;EACA,aAAO,IAAP;EACA;EAED;;;;;;;;;2BAMKE,QAAQC,QAAQ;EACpB,aAAO,KAAKpD,KAAL,CAAW,KAAK0C,WAAL,CAAiBS,MAAjB,CAAX,EAAqC,KAAKH,cAAL,CAAoBI,MAApB,CAArC,CAAP;EACA;EAED;;;;;;;;;;8BAOQf,KAAKQ,QAAQI,OAAO;EAC3B,WAAKI,UAAL,CAAgBhB,GAAhB,EAAoBQ,MAApB,EAA2BI,KAA3B,EAAiC,IAAjC;EACA,aAAO,IAAP;EACA;EAED;;;;;;;;;kCAMYV,KAAKC,QAAQ;EAAA;;EACxB,UAAI,OAAOD,GAAP,IAAc,QAAlB,EAA4B;EAC3B,YAAIA,GAAG,GAAG,KAAKvC,KAAL,CAAWhI,MAArB,EAA6B;EAC5B,iBAAOuK,GAAP;EACA,SAFD,MAEO,IAAIC,MAAJ,EAAY;EAClB,eAAKxC,KAAL,CAAWuC,GAAX,IAAkB1E,KAAK,CAAC,KAAKoE,OAAL,EAAD,CAAvB;EACA,iBAAOM,GAAP;EACA;;EACD,cAAM,IAAI/I,KAAJ,CAAU,uCAAqC+I,GAA/C,CAAN;EACA,OARD,MAQO,IAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;EAClC,YAAIF,GAAG,GAAG,KAAKrC,KAAL,CAAWsD,SAAX,CAAqB,UAAAC,CAAC;EAAA,iBAAIA,CAAC,CAAC,MAAI,CAACrD,kBAAN,CAAD,KAA+BqC,GAAnC;EAAA,SAAtB,EAA8D,IAA9D,CAAV;;EACA,YAAIF,GAAG,GAAC,CAAC,CAAT,EAAY;EAAC,iBAAOA,GAAP;EAAY,SAAzB,MACK,IAAIG,MAAJ,EAAY;EAChB,cAAIgB,GAAG,GAAG3F,KAAK,CAAC,KAAKoE,OAAL,EAAD,CAAf;EACAuB,UAAAA,GAAG,CAAC,KAAKtD,kBAAN,CAAH,GAA+BqC,GAA/B;EACA,eAAKd,MAAL,CAAY+B,GAAZ;EACA,iBAAO,KAAKrD,IAAL,EAAP;EACA,SALI,MAMA;EACJ,gBAAM,IAAI3G,KAAJ,CAAU,kCAAgC+I,GAA1C,CAAN;EACA;EACD;;EACD,YAAM,IAAI/I,KAAJ,CAAU,kDAAV,CAAN;EACA;EAED;;;;;;;;;qCAMe+I,KAAKC,QAAQ;EAC3B,UAAI,OAAOD,GAAP,IAAc,QAAlB,EAA4B;EAC3B,YAAIA,GAAG,GAAG,KAAKN,OAAL,EAAV,EAA0B;EACzB,iBAAOM,GAAP;EACA,SAFD,MAEO,IAAIC,MAAJ,EAAY;EAClB,eAAKJ,SAAL,CAAeG,GAAf;EACA,iBAAOA,GAAP;EACA;;EACD,cAAM,IAAI/I,KAAJ,CAAU,0CAAwC+I,GAAlD,CAAN;EACA,OARD,MAQO,IAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;EAClC,YAAIA,GAAG,IAAI,KAAKtC,QAAhB,EAA0B;EACzB,iBAAO,KAAKA,QAAL,CAAcsC,GAAd,CAAP;EACA,SAFD,MAEO,IAAIC,MAAJ,EAAY;EAClB,eAAKJ,SAAL,CAAe;EAACqB,YAAAA,MAAM,EAAElB;EAAT,WAAf;EACA,iBAAO,KAAKtC,QAAL,CAAcsC,GAAd,CAAP;EACA;;EACD,cAAM,IAAI/I,KAAJ,CAAU,iCAA+B+I,GAAzC,CAAN;EACA;;EACD,YAAM,IAAI/I,KAAJ,CAAU,wDAAV,CAAN;EACA;EAED;;;;;;;;gCAKUvC,QAAQsL,KAAK;EACtB;EACA,UAAImB,GAAG,GAAG,KAAKzB,OAAL,EAAV,CAFsB;;EAGtB,UAAIhL,MAAM,IAAI,OAAOA,MAAP,IAAiB,QAA/B,EAAyC;EAACyM,QAAAA,GAAG,GAACzM,MAAJ;EAAW,OAArD,MACK,IAAIA,MAAM,IAAK,QAAOA,MAAP,KAAiB,QAA5B,IAA0C,YAAYA,MAA1D,EAAmE;EAACyM,QAAAA,GAAG,GAAGzM,MAAM,CAACwM,MAAb;EAAoB,OAAxF,MACA,IAAIlB,GAAG,KAAG/K,SAAV,EAAqB;EAACkM,QAAAA,GAAG,GAACnB,GAAJ;EAAQ,OALb;;;EAQtB,UAAImB,GAAG,IAAI,KAAKzD,QAAhB,EAA0B;EACzB,cAAM,IAAIzG,KAAJ,CAAU,iCAA+BvC,MAAM,CAACwM,MAAhD,CAAN;EACA,OAVqB;;;EAatB,UAAIE,QAAQ,GAAG,KAAK1B,OAAL,EAAf;EACA,WAAKhC,QAAL,CAAcyD,GAAd,IAAqBC,QAArB,CAdsB;;EAiBtB,UAAIlJ,IAAI,GAAG,EAAX;;EACA,UAAIxD,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAA3B,IAAuC,UAAUA,MAArD,EAA6D;EAACwD,QAAAA,IAAI,GAACxD,MAAM,CAACkJ,IAAZ;EAAiB,OAA/E,MACK,IAAItC,KAAK,CAACC,OAAN,CAAc7G,MAAd,CAAJ,EAA2B;EAACwD,QAAAA,IAAI,GAAGxD,MAAP;EAAe,OAnB1B;;;EAsBtB,WAAK+I,KAAL,CAAWpC,OAAX,CAAmB,UAAC2F,CAAD,EAAGjG,CAAH;EAAA,eAASiG,CAAC,CAACI,QAAD,CAAD,GAAclJ,IAAI,CAAC6C,CAAD,CAA3B;EAAA,OAAnB;;EACA,aAAO,IAAP;EACA;EAED;;;;;;;;;;;;;;2BAWKsG,MAAM3M,QAAkB;EAAA;;EAE5B;EACA,UAAI2M,IAAI,IAAEpM,SAAV,EAAqB;EACpB,eAAO,KAAKwI,KAAL,CAAWhI,MAAlB;EACA;;EAED,UAAImI,IAAI,GAAG,EAAX;;EAP4B,yCAAPJ,KAAO;EAAPA,QAAAA,KAAO;EAAA;;EAQ5B,UAAI8D,KAAK,GAAI5M,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAA3B,IAAuCA,MAAM,CAAC4M,KAA/C,IACV9D,KAAK,CAAC/H,MAAN,GAAa,CAAb,IAAkB,QAAO+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAZ,KAAgC,QAAlD,IAA8D+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAL,CAAsB6L,KADtF,CAR4B;;EAY5B,UAAI,OAAOD,IAAP,IAAe,SAAf,IAA4BA,IAAhC,EAAsC;EACrCzD,QAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWpI,GAAX,CAAe,UAAC2L,CAAD,EAAGjG,CAAH;EAAA,iBAAS,MAAI,CAAC+E,GAAL,CAAS/E,CAAT,EAAYuG,KAAZ,CAAT;EAAA,SAAf,CAAP;EACA,OAFD;EAAA,WAKK,IAAIhG,KAAK,CAACC,OAAN,CAAc8F,IAAd,CAAJ,EAAyB;EAC7BzD,UAAAA,IAAI,GAAGyD,IAAI,CAAChM,GAAL,CAAS,UAAA2K,GAAG;EAAA,mBAAI,MAAI,CAACF,GAAL,CAASE,GAAT,CAAJ;EAAA,WAAZ,CAAP;EACA,SAFI;EAAA,aAKA,IAAI,OAAOqB,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAe,QAA9C,EAAwD;EAC5D,aAACA,IAAD,EAAO3M,MAAP,SAAkB8I,KAAlB,EAAyBS,KAAzB,CAA+B,UAAAlD,CAAC,EAAI;EACnC,kBAAI,OAAOA,CAAP,IAAY,QAAZ,IAAwB,OAAOA,CAAP,IAAY,QAAxC,EAAkD;EACjD6C,gBAAAA,IAAI,CAACe,IAAL,CAAU,MAAI,CAACmB,GAAL,CAAS/E,CAAT,EAAYuG,KAAZ,CAAV;EACA,uBAAO,IAAP;EACA,eAHD,MAGO;EACN,uBAAO,KAAP;EACA;EACD,aAPD;;EAQA,gBAAI9D,KAAK,CAAC/H,MAAN,GAAa,CAAjB,EAAoB;EAAE;EACrB,kBAAI,QAAO+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAZ,KAAgC,QAApC,EAA8C;EAC7Cf,gBAAAA,MAAM,GAAG8I,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAd;EACA;EACD;EACD,WApC2B;;;EAuC5B,UAAIf,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAA3B,IAAuC,SAASA,MAAhD,IAA0DA,MAAM,CAAC6M,GAArE,EAA0E;EACzE,YAAI3D,IAAI,CAACnI,MAAL,GAAY,CAAhB,EAAmB;EAAC,gBAAM,IAAIwB,KAAJ,CAAU,mCAAV,CAAN;EAAqD;;EACzE,eAAOsG,KAAK,CAACgE,GAAN,CAAU3D,IAAV,CAAP;EACA,OAHD,MAIK;EACJ,eAAOA,IAAP;EACA;EACD;EAED;;;;;;;;;0BAMIoC,KAAKsB,OAAO;EACf,UAAIxB,GAAG,GAAG,KAAKrC,KAAL,CAAW,KAAK0C,WAAL,CAAiBH,GAAjB,CAAX,CAAV;;EACA,UAAIsB,KAAJ,EAAW;EACV,YAAIlH,GAAG,GAAG,EAAV;;EACA,aAAK,IAAIpF,GAAT,IAAgB,KAAK0I,QAArB,EAA+B;EAC9BtD,UAAAA,GAAG,CAACpF,GAAD,CAAH,GAAW8K,GAAG,CAAC,KAAKpC,QAAL,CAAc1I,GAAd,CAAD,CAAd;EACA;;EACD,eAAOoF,GAAP;EACA,OAND,MAMO;EACN,eAAO0F,GAAP;EACA;EACD;EAED;;;;;;;;;;;;;;8BAWQuB,MAAM3M,QAAkB;EAAA;;EAE/B;EACA,UAAI2M,IAAI,IAAEpM,SAAV,EAAqB;EACpB,eAAOE,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,EAA2BjI,MAAlC;EACA;;EAED,UAAIiK,OAAO,GAAG,EAAd;;EAP+B,yCAAPlC,KAAO;EAAPA,QAAAA,KAAO;EAAA;;EAQ/B,UAAI8D,KAAK,GAAI5M,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAA3B,IAAuCA,MAAM,CAAC4M,KAA/C,IACV9D,KAAK,CAAC/H,MAAN,GAAa,CAAb,IAAkB,QAAO+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAZ,KAAgC,QAAlD,IAA8D+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAL,CAAsB6L,KADtF,CAR+B;;EAY/B,UAAI,OAAOD,IAAP,IAAe,SAAf,IAA4BA,IAAhC,EAAsC;EACrC,aAAK,IAAItG,CAAC,GAAC,CAAN,EAASyG,GAAG,GAAC,KAAK9B,OAAL,EAAlB,EAAkC3E,CAAC,GAACyG,GAApC,EAAyCzG,CAAC,EAA1C,EAA8C;EAC7C2E,UAAAA,OAAO,CAACf,IAAR,CAAa,KAAK2B,MAAL,CAAYvF,CAAZ,EAAeuG,KAAf,CAAb;EACA;EACD,OAJD;EAAA,WAOK,IAAIhG,KAAK,CAACC,OAAN,CAAc8F,IAAd,CAAJ,EAAyB;EAC7BA,UAAAA,IAAI,CAAChG,OAAL,CAAa,UAAAN,CAAC;EAAA,mBAAI2E,OAAO,CAACf,IAAR,CAAa,MAAI,CAAC2B,MAAL,CAAYvF,CAAZ,EAAeuG,KAAf,CAAb,CAAJ;EAAA,WAAd,EAAuD,IAAvD;EACA,SAFI,MAIA,IAAI,OAAOD,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAe,QAA9C,EAAwD;EAC5D,WAACA,IAAD,EAAO3M,MAAP,SAAkB8I,KAAlB,EAAyBS,KAAzB,CAA+B,UAAAlD,CAAC,EAAI;EACnC,gBAAI,OAAOA,CAAP,IAAY,QAAZ,IAAwB,OAAOA,CAAP,IAAY,QAAxC,EAAkD;EACjD2E,cAAAA,OAAO,CAACf,IAAR,CAAa,MAAI,CAAC2B,MAAL,CAAYvF,CAAZ,EAAeuG,KAAf,CAAb;EACA,qBAAO,IAAP;EACA,aAHD,MAGO;EACN,qBAAO,KAAP;EACA;EACD,WAPD;;EAQA,cAAI9D,KAAK,CAAC/H,MAAN,GAAa,CAAjB,EAAoB;EAAE;EACrB,gBAAI,QAAO+H,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAZ,KAAgC,QAApC,EAA8C;EAC7Cf,cAAAA,MAAM,GAAG8I,KAAK,CAACA,KAAK,CAAC/H,MAAN,GAAa,CAAd,CAAd;EACA;EACD;EACD;;EAED,UAAIf,MAAM,IAAI,QAAOA,MAAP,KAAiB,QAA3B,IAAuC,SAASA,MAAhD,IAA0DA,MAAM,CAAC6M,GAArE,EAA0E;EACzE,YAAI7B,OAAO,CAACjK,MAAR,GAAe,CAAnB,EAAsB;EAAC,gBAAM,IAAIwB,KAAJ,CAAU,sCAAV,CAAN;EAAwD;;EAC/E,eAAOsG,KAAK,CAACgE,GAAN,CAAU7B,OAAV,CAAP;EACA,OAHD,MAIK;EACJ,eAAOA,OAAP;EACA;EACD;EAED;;;;;;;;;6BAMOM,KAAKsB,OAAO;EAAA;;EAClB,UAAIhB,MAAM,GAAG,KAAKG,cAAL,CAAoBT,GAApB,CAAb;;EACA,UAAI9H,IAAI,GAAG,KAAKuF,KAAL,CAAWpC,OAAX,CAAmB,UAAA2F,CAAC;EAAA,eAAIA,CAAC,CAACV,MAAD,CAAL;EAAA,OAApB,CAAX,CAFkB;;;EAGlB,UAAIgB,KAAJ,EAAW;EACV,YAAIlH,GAAG,GAAG,EAAV;;EACA,aAAKqD,KAAL,CAAWpC,OAAX,CAAmB,UAAA2F,CAAC,EAAI;EACvB5G,UAAAA,GAAG,CAAC4G,CAAC,CAAC,MAAI,CAACrD,kBAAN,CAAF,CAAH,GAAkCqD,CAAC,CAACV,MAAD,CAAnC;EACA,SAFD;;EAGA,eAAOlG,GAAP;EACA,OAND,MAMO;EACN,eAAO,KAAKqD,KAAL,CAAWpI,GAAX,CAAe,UAAA2L,CAAC;EAAA,iBAAIA,CAAC,CAACV,MAAD,CAAL;EAAA,SAAhB,CAAP;EACA;EACD;EAED;;;;;;;;6BAKON,KAAK;EAAA;;EACX,UAAI5K,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,CAAX;EACA,UAAI3C,CAAC,GAAG,KAAK0F,cAAL,CAAoBT,GAApB,CAAR;EACA,aAAO5K,IAAI,CAACA,IAAI,CAAC2L,SAAL,CAAe,UAAAU,CAAC;EAAA,eAAI1G,CAAC,IAAE,OAAI,CAAC2C,QAAL,CAAc+D,CAAd,CAAP;EAAA,OAAhB,CAAD,CAAX;EACA;EAED;;;;;;;;;;;;8BASQJ,MAAgB;EAAA;;EAEvB;EACA,UAAIA,IAAI,IAAEpM,SAAV,EAAqB;EACpB,eAAOE,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,EAA2BjI,MAAlC;EACA;;EAKD,UAAI,OAAO4L,IAAP,IAAe,SAAf,IAA4BA,IAAhC,EAAsC;EACrCA,QAAAA,IAAI,GAAG/F,KAAK,CAACnG,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,EAA2BjI,MAA5B,CAAL,CAAyCiM,IAAzC,GAAgDrM,GAAhD,CAAoD,UAACsM,CAAD,EAAG5G,CAAH;EAAA,iBAASA,CAAT;EAAA,SAApD,CAAP;EACA,OAZsB;;;EAevB,UAAIO,KAAK,CAACC,OAAN,CAAc8F,IAAd,CAAJ,EAAyB;EACxB,eAAOA,IAAI,CAAChM,GAAL,CAAS,UAAA0F,CAAC;EAAA,iBAAI,OAAI,CAACmG,MAAL,CAAYnG,CAAZ,CAAJ;EAAA,SAAV,CAAP;EACA,OAFD;EAAA,WAKK,IAAI,OAAOsG,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAe,QAA9C,EAAwD;EAAA,6CApB7C7D,KAoB6C;EApB7CA,YAAAA,KAoB6C;EAAA;;EAC5D,iBAAO,CAAC6D,IAAD,SAAU7D,KAAV,EAAiBnI,GAAjB,CAAqB,UAAA0F,CAAC;EAAA,mBAAI,OAAI,CAACmG,MAAL,CAAYnG,CAAZ,CAAJ;EAAA,WAAtB,CAAP;EACA;EACD;EAED;;;;;;;;gCAKUiF,KAAK;EACd,aAAOA,GAAG,IAAI,KAAKtC,QAAnB;EACA;EAED;;;;;;;;8BAKQkE,IAAI;EACX,WAAKnE,KAAL,CAAWpC,OAAX,CAAmB,UAAC2F,CAAD,EAAGjG,CAAH;EAAA,eAAS6G,EAAE,CAACZ,CAAD,EAAGjG,CAAH,CAAX;EAAA,OAAnB;EACA;EAED;;;;;;;;6BAKOiF,KAAK;EACX,aAAO6B,IAAI,CAACC,GAAL,CAAS5F,KAAT,CAAe,IAAf,EAAqB,KAAK4D,GAAL,CAASE,GAAT,CAArB,CAAP;EACA;EAED;;;;;;;;6BAKOA,KAAK;EACX,aAAO6B,IAAI,CAACE,GAAL,CAAS7F,KAAT,CAAe,IAAf,EAAqB,KAAK4D,GAAL,CAASE,GAAT,CAArB,CAAP;EACA;EAED;;;;;;;;gCAKUA,KAAK;EACd,aAAO6B,IAAI,CAACC,GAAL,CAAS5F,KAAT,CAAe,IAAf,EAAqB,KAAKoE,MAAL,CAAYN,GAAZ,CAArB,CAAP;EACA;EAED;;;;;;;;gCAKUA,KAAK;EACd,aAAO6B,IAAI,CAACE,GAAL,CAAS7F,KAAT,CAAe,IAAf,EAAqB,KAAKoE,MAAL,CAAYN,GAAZ,CAArB,CAAP;EACA;EAED;;;;;;;;6BAKOA,KAAK;EACX,aAAOzC,KAAK,CAACyE,GAAN,CAAU,KAAKlC,GAAL,CAASE,GAAT,CAAV,CAAP;EACA;EAED;;;;;;;;gCAKUA,KAAK;EACd,aAAOzC,KAAK,CAACyE,GAAN,CAAU,KAAK1B,MAAL,CAAYN,GAAZ,CAAV,CAAP;EACA;EAED;;;;;;;;8BAKQA,KAAK;EACZ,aAAOzC,KAAK,CAAC0E,IAAN,CAAW,KAAKnC,GAAL,CAASE,GAAT,CAAX,CAAP;EACA;EAED;;;;;;;;iCAKWA,KAAK;EACf,aAAOzC,KAAK,CAAC0E,IAAN,CAAW,KAAK3B,MAAL,CAAYN,GAAZ,CAAX,CAAP;EACA;EAED;;;;;;;;gCAKUA,KAAK;EACd,aAAOzC,KAAK,CAACyB,MAAN,CAAa,KAAKc,GAAL,CAASE,GAAT,CAAb,CAAP;EACA;EAED;;;;;;;;mCAKaA,KAAK;EACjB,aAAOzC,KAAK,CAACyB,MAAN,CAAa,KAAKsB,MAAL,CAAYN,GAAZ,CAAb,CAAP;EACA;EAED;;;;;;;;;;qCAOeA,KAAKkC,WAAWvB,WAAW;EACzC,UAAIwB,KAAK,GAAG5E,KAAK,CAAC6E,WAAN,CAAkB,KAAKtC,GAAL,CAASE,GAAT,CAAlB,EAAiCkC,SAAjC,CAAZ;;EACA,UAAIvB,SAAJ,EAAe;EACd,aAAKZ,MAAL,CAAYC,GAAZ,EAAiBmC,KAAjB;EACA;;EACD,aAAOA,KAAP;EACA;EAED;;;;;;;;;;wCAOkBnC,KAAKkC,WAAWvB,WAAW;EAC5C,UAAIwB,KAAK,GAAG5E,KAAK,CAAC6E,WAAN,CAAkB,KAAK9B,MAAL,CAAYN,GAAZ,CAAlB,EAAoCkC,SAApC,CAAZ;;EACA,UAAIvB,SAAJ,EAAe;EACd,aAAK0B,SAAL,CAAerC,GAAf,EAAoBmC,KAApB;EACA;;EACD,aAAOA,KAAP;EACA;EAED;;;;;;;;kCAKYnC,KAAK;EAChB,aAAOzC,KAAK,CAAC+E,QAAN,CAAe,KAAKxC,GAAL,CAASE,GAAT,CAAf,CAAP;EACA;EAED;;;;;;;;qCAKeA,KAAK;EACnB,aAAOzC,KAAK,CAAC+E,QAAN,CAAe,KAAKhC,MAAL,CAAYN,GAAZ,CAAf,CAAP;EACA;EAED;;;;;;;;2CAKqBA,KAAK;EACzB,aAAOzC,KAAK,CAACgF,iBAAN,CAAwB,KAAKzC,GAAL,CAASE,GAAT,CAAxB,CAAP;EACA;EAED;;;;;;;;8CAKwBA,KAAK;EAC5B,aAAOzC,KAAK,CAACgF,iBAAN,CAAwB,KAAKjC,MAAL,CAAYN,GAAZ,CAAxB,CAAP;EACA;EAED;;;;;;;;iCAKWA,KAAK;EACf,aAAOzC,KAAK,CAACiF,OAAN,CAAc,KAAK1C,GAAL,CAASE,GAAT,CAAd,CAAP;EACA;EAED;;;;;;;;oCAKcA,KAAK;EAClB,aAAOzC,KAAK,CAACiF,OAAN,CAAc,KAAKlC,MAAL,CAAYN,GAAZ,CAAd,CAAP;EACA;EAED;;;;;;;;8BAKQqB,MAAM3M,QAAQ;EAAA;;EACrB;EACA,UAAI2M,IAAI,KAAGpM,SAAX,EAAsB;EACrBoM,QAAAA,IAAI,GAAG/F,KAAK,CAAC,KAAKoE,OAAL,EAAD,CAAL,CAAsBgC,IAAtB,GAA6BrM,GAA7B,CAAiC,UAACsM,CAAD,EAAG5G,CAAH;EAAA,iBAASA,CAAT;EAAA,SAAjC,CAAP;EACA,OAJoB;;;EAOrB,UAAI,OAAOsG,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAe,QAA9C,EAAwD;EACvDA,QAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;EACA;;EAED,UAAI/F,KAAK,CAACC,OAAN,CAAc8F,IAAd,CAAJ,EAAyB;EACxB,eAAO,KAAKlC,OAAL,CAAa,UAACjB,CAAD,EAAGkB,CAAH,EAAS;EAC5B,cAAIY,GAAJ;;EACA,eAAK,IAAIjF,CAAC,GAAC,CAAN,EAASyG,GAAG,GAACH,IAAI,CAAC5L,MAAvB,EAA+BsF,CAAC,GAACyG,GAAjC,EAAsCzG,CAAC,EAAvC,EAA2C;EAC1CiF,YAAAA,GAAG,GAAG,OAAI,CAACS,cAAL,CAAoBY,IAAI,CAACtG,CAAD,CAAxB,CAAN;;EACA,gBAAImD,CAAC,IAAEkB,CAAP,EAAU;EACT,kBAAI,OAAOlB,CAAC,CAAC8B,GAAD,CAAR,IAAiB,QAAjB,IAA6B,OAAOZ,CAAC,CAACY,GAAD,CAAR,IAAiB,QAAlD,EAA4D;EAC3D,uBAAO9B,CAAC,CAAC8B,GAAD,CAAD,CAAOyC,aAAP,CAAqBrD,CAAC,CAACY,GAAD,CAAtB,CAAP;EACA,eAFD,MAEO;EACN,uBAAO9B,CAAC,CAAC8B,GAAD,CAAD,GAAOZ,CAAC,CAACY,GAAD,CAAf;EACA;EACD;EACD;;EACD,iBAAO,CAAP;EACA,SAbM,EAaJtL,MAbI,CAAP;EAcA;;EAED,UAAI,OAAO2M,IAAP,IAAe,UAAnB,EAA+B;EAC9B,aAAK5D,KAAL,CAAWiF,IAAX,CAAgB,UAACxE,CAAD,EAAGkB,CAAH,EAAS;EACxB,cAAI1K,MAAM,IAAI,cAAcA,MAAxB,IAAkCA,MAAM,CAACiO,QAA7C,EAAuD;EACtD,gBAAIC,CAAC,GAAG,EAAR;;EACA,iBAAK,IAAInB,CAAT,IAAc,OAAI,CAAC/D,QAAnB,EAA6B;EAC5BkF,cAAAA,CAAC,CAACnB,CAAD,CAAD,GAAOvD,CAAC,CAAC,OAAI,CAACR,QAAL,CAAc+D,CAAd,CAAD,CAAR;EACA;;EACD,gBAAIrB,CAAC,GAAG,EAAR;;EACA,iBAAK,IAAIqB,EAAT,IAAc,OAAI,CAAC/D,QAAnB,EAA6B;EAC5B0C,cAAAA,CAAC,CAACqB,EAAD,CAAD,GAAOrC,CAAC,CAAC,OAAI,CAAC1B,QAAL,CAAc+D,EAAd,CAAD,CAAR;EACA;;EACD,mBAAOJ,IAAI,CAACnF,KAAL,CAAW,OAAX,EAAiB,CAAC0G,CAAD,EAAGxC,CAAH,CAAjB,CAAP;EACA,WAVD,MAUO;EACN,mBAAOiB,IAAI,CAACnF,KAAL,CAAW,OAAX,EAAiB,CAACgC,CAAD,EAAGkB,CAAH,CAAjB,CAAP;EACA;EACD,SAdD;;EAeA,YAAI1K,MAAM,IAAI,aAAaA,MAAvB,IAAiCA,MAAM,CAACmO,OAA5C,EAAqD;EACpD,eAAKpF,KAAL,CAAWoF,OAAX,GADoD;;EAEpD;EACD;;EAED,aAAO,IAAP;EACA;EAED;;;;;;;;iCAKWxB,MAAM3M,QAAQ;EAAA;;EACxB;EACA,UAAI2M,IAAI,KAAGpM,SAAX,EAAsB;EACrBoM,QAAAA,IAAI,GAAG/F,KAAK,CAAC,KAAKoE,OAAL,EAAD,CAAL,CAAsBgC,IAAtB,GAA6BrM,GAA7B,CAAiC,UAACsM,CAAD,EAAG5G,CAAH;EAAA,iBAASA,CAAT;EAAA,SAAjC,CAAP;EACA,OAJuB;;;EAOxB,UAAI,OAAOsG,IAAP,IAAe,QAAf,IAA2B,OAAOA,IAAP,IAAe,QAA9C,EAAwD;EACvDA,QAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;EACA;;EAED,UAAI/F,KAAK,CAACC,OAAN,CAAc8F,IAAd,CAAJ,EAAyB;EAExB;EACA,YAAIzL,OAAO,GAAGyL,IAAI,CAAChM,GAAL,CAAS,UAAA2K,GAAG;EAAA,iBAAI,OAAI,CAACkB,MAAL,CAAYlB,GAAZ,CAAJ;EAAA,SAAZ,CAAd,CAHwB;;EAMxB7K,QAAAA,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,EAA2BrC,OAA3B,CAAmC,UAAAuE,CAAC,EAAI;EACvC,cAAI,CAAChK,OAAO,CAACkN,QAAR,CAAiBlD,CAAjB,CAAL,EAA0B;EAAChK,YAAAA,OAAO,CAAC+I,IAAR,CAAaiB,CAAb;EAAgB;EAC3C,SAFD,EANwB;;EAWxBhK,QAAAA,OAAO,CAAC8M,IAAR,CAAa,UAACxE,CAAD,EAAGkB,CAAH;EAAA,iBAASlB,CAAC,CAACuE,aAAF,CAAgBrD,CAAhB,CAAT;EAAA,SAAb,EAXwB;;EAcxB,aAAK3B,KAAL,GAAa,KAAKA,KAAL,CAAWpI,GAAX,CAAe,UAACsM,CAAD,EAAG5G,CAAH;EAAA,iBAASnF,OAAO,CAACP,GAAR,CAAY,UAAAuK,CAAC;EAAA,mBAAI,OAAI,CAACL,IAAL,CAAUxE,CAAV,EAAY6E,CAAZ,CAAJ;EAAA,WAAb,CAAT;EAAA,SAAf,CAAb;EACA,aAAKlC,QAAL,GAAgB,EAAhB;EACA9H,QAAAA,OAAO,CAACyF,OAAR,CAAgB,UAACuE,CAAD,EAAG7E,CAAH;EAAA,iBAAS,OAAI,CAAC2C,QAAL,CAAckC,CAAd,IAAiB7E,CAA1B;EAAA,SAAhB;EAEA;;EAED,UAAI,OAAOsG,IAAP,IAAe,UAAnB,EAA+B;EAC9B,YAAIzL,QAAO,GAAGT,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,CAAd;;EACA,YAAIhJ,MAAM,IAAI,cAAckB,QAAxB,IAAmCA,QAAO,CAAC+M,QAA/C,EAAyD;EACxD/M,UAAAA,QAAO,GAAGA,QAAO,CAACP,GAAR,CAAY,UAACuK,CAAD,EAAG7E,CAAH,EAAS;EAC9B,mBAAO;EAACmG,cAAAA,MAAM,EAAEtB,CAAT;EAAY1H,cAAAA,IAAI,EAAE,OAAI,CAACuF,KAAL,CAAWpI,GAAX,CAAe,UAAC2L,CAAD,EAAG+B,CAAH;EAAA,uBAAS,OAAI,CAACxD,IAAL,CAAUxE,CAAV,EAAYgI,CAAZ,CAAT;EAAA,eAAf;EAAlB,aAAP;EACA,WAFS,CAAV;EAGA;;EACDnN,QAAAA,QAAO,CAAC8M,IAAR,CAAa,UAACxE,CAAD,EAAGkB,CAAH,EAAS;EACrB,iBAAOiC,IAAI,CAACnF,KAAL,CAAW,OAAX,EAAiB,CAACgC,CAAD,EAAGkB,CAAH,CAAjB,CAAP;EACA,SAFD;;EAGAxJ,QAAAA,QAAO,GAAGA,QAAO,CAACP,GAAR,CAAY,UAAAuK,CAAC;EAAA,iBAAI,QAAOA,CAAP,KAAY,QAAZ,GAAuBA,CAAC,CAACsB,MAAzB,GAAkCtB,CAAtC;EAAA,SAAb,CAAV,CAV8B;EAY9B;;EACAzK,QAAAA,MAAM,CAACC,IAAP,CAAY,KAAKsI,QAAjB,EAA2BrC,OAA3B,CAAmC,UAAAoG,CAAC,EAAI;EACvC,cAAI7L,QAAO,CAACuI,OAAR,CAAgBsD,CAAhB,KAAoB,CAAC,CAAzB,EAA4B;EAAC7L,YAAAA,QAAO,CAAC+I,IAAR,CAAa8C,CAAb;EAAgB;EAC7C,SAFD;EAIA,aAAKhE,KAAL,GAAa,KAAKA,KAAL,CAAWpI,GAAX,CAAe,UAACsM,CAAD,EAAG5G,CAAH;EAAA,iBAASnF,QAAO,CAACP,GAAR,CAAY,UAAAuK,CAAC;EAAA,mBAAI,OAAI,CAACL,IAAL,CAAUxE,CAAV,EAAY6E,CAAZ,CAAJ;EAAA,WAAb,CAAT;EAAA,SAAf,CAAb;EACA,aAAKlC,QAAL,GAAgB,EAAhB;;EACA9H,QAAAA,QAAO,CAACyF,OAAR,CAAgB,UAACuE,CAAD,EAAG7E,CAAH;EAAA,iBAAS,OAAI,CAAC2C,QAAL,CAAckC,CAAd,IAAiB7E,CAA1B;EAAA,SAAhB;EACA;EACD;EAED;;;;;;;;4BAKMrG,QAAQ;EACb,UAAM6K,IAAI,GAAG,SAAPA,IAAO,CAASqD,CAAT,EAAY;EACxB,YAAII,KAAK,GAAG,IAAZ;EACA,eAAO,OAAOJ,CAAP,IAAY,QAAZ,KAAyBA,CAAC,CAACzE,OAAF,CAAU,GAAV,IAAe,CAAC,CAAhB,IAAqByE,CAAC,CAACzE,OAAF,CAAU,GAAV,IAAe,CAAC,CAA9D,IAAmE,MAAIyE,CAAC,CAACK,OAAF,CAAUD,KAAV,EAAgB,IAAhB,CAAJ,GAA0B,GAA7F,GAAmGJ,CAA1G;EACA,OAHD;;EAIA,aAAO,CAAClO,MAAM,IAAI,eAAeA,MAAzB,IAAmCA,MAAM,CAACwO,SAA1C,GAAsD,EAAtD,GAA2D,KAAKtN,OAAL,CAAa,IAAb,EAAmBP,GAAnB,CAAuB,UAAAuK,CAAC;EAAA,eAAIL,IAAI,CAACK,CAAD,CAAR;EAAA,OAAxB,EAAqCrK,IAArC,CAA0C,GAA1C,IAAiD,IAA7G,IACN,KAAKkI,KAAL,CAAWpI,GAAX,CAAe,UAAAyK,GAAG;EAAA,eAAIA,GAAG,CAACzK,GAAJ,CAAQ,UAAAuN,CAAC;EAAA,iBAAIrD,IAAI,CAACqD,CAAD,CAAR;EAAA,SAAT,EAAsBrN,IAAtB,CAA2B,GAA3B,CAAJ;EAAA,OAAlB,EAAuDA,IAAvD,CAA4D,IAA5D,CADD;EAEA;EAED;;;;;;;;4BAKMb,QAAQ;EACb,aAAOA,MAAM,IAAI,eAAeA,MAAzB,IAAmCA,MAAM,CAACwO,SAA1C,GAAsD,EAAtD,GAA2D,KAAKtN,OAAL,CAAa,IAAb,EAAmBL,IAAnB,CAAwB,IAAxB,IAAgC,IAAhC,GACjE,KAAKkI,KAAL,CAAWpI,GAAX,CAAe,UAAAyK,GAAG;EAAA,eAAIA,GAAG,CAACvK,IAAJ,CAAS,IAAT,CAAJ;EAAA,OAAlB,EAAsCA,IAAtC,CAA2C,IAA3C,CADD;EAEA;EAED;;;;;;;;;2BAMK6G,QAAQ1H,QAAQ;EACpB,UAAIyO,IAAI,GAAG,KAAKpN,QAAL,CAAcrB,MAAd,CAAX;;EACA,UAAI,OAAO0H,MAAP,IAAiB,UAArB,EAAiC;EAChCA,QAAAA,MAAM,CAAC+G,IAAD,CAAN;EACA,OAFD,MAEO;EACN,YAAI,OAAO/G,MAAP,IAAiB,QAArB,EAA+B;EAC9BA,UAAAA,MAAM,GAAGgH,QAAQ,CAACC,aAAT,CAAuBjH,MAAvB,CAAT;;EACA,cAAI,CAACA,MAAL,EAAa;EACZ,kBAAM,sCAAoCA,MAA1C;EACA;EACD;;EACD,YAAI,QAAOA,MAAP,KAAiB,QAAjB,IAA6B,eAAeA,MAAhD,EAAwD;EACvDA,UAAAA,MAAM,CAACkH,SAAP,GAAmBH,IAAnB;EACA;EACD;;EACD,aAAO,IAAP;EACA;EAED;;;;;;;;iCAKoB;EAAA,UAAXzO,MAAW,uEAAJ,EAAI;EACnB,aAAO,iCACJA,MAAM,IAAI,aAAaA,MAAvB,IAAiC,OAAOA,MAAM,CAAC6O,OAAd,IAAyB,QAA3D,GACC,cAAY7O,MAAM,CAAC6O,OAAnB,GAA2B,YAD5B,GAC2C,EAFtC,KAGJ7O,MAAM,IAAI,eAAeA,MAAzB,IAAmCA,MAAM,CAACwO,SAA3C,GAAwD,EAAxD,GAA8D,gBAAc,KAAKtN,OAAL,CAAa,IAAb,EAAmBP,GAAnB,CAAuB,UAAAuN,CAAC;EAAA,eAAI,SAAOA,CAAP,GAAS,OAAb;EAAA,OAAxB,EAA8CrN,IAA9C,CAAmD,EAAnD,CAAd,GAAqE,eAH9H,IAIN,SAJM,GAKN,KAAKkI,KAAL,CAAWpI,GAAX,CAAe,UAAAyK,GAAG;EAAA,eAAI,SAAOA,GAAG,CAACzK,GAAJ,CAAQ,UAAAuN,CAAC;EAAA,iBAAI,UAAQ,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACrK,cAAF,EAAxB,GAA6CqK,CAArD,IAAwD,OAA5D;EAAA,SAAT,EAA8ErN,IAA9E,CAAmF,EAAnF,CAAP,GAA8F,OAAlG;EAAA,OAAlB,EAA6HA,IAA7H,CAAkI,EAAlI,CALM,GAMN,kBAND;EAOA;EAED;;;;;;;;;8BAMuC;EAAA;;EAAA,UAAjC6G,MAAiC,uEAAxBnH,SAAwB;EAAA,UAAbP,MAAa,uEAAJ,EAAI;;EACtC,UAAI,QAAO0H,MAAP,MAAkB,QAAtB,EAAgC;EAC/B1H,QAAAA,MAAM,GAAG0H,MAAT;EACAA,QAAAA,MAAM,GAAGnH,SAAT;EACA;;EAED,UAAImH,MAAM,KAAKnH,SAAf,EAA0B;EACzB,YAAI,OAAOuO,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAA5C,EAAsD;EACrDrH,UAAAA,MAAM,GAAGoH,MAAM,CAACC,QAAP,CAAgBC,SAAhB,EAAT;EACA,SAFD,MAEO;EACNtH,UAAAA,MAAM,GAAGgH,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAT;EACAP,UAAAA,QAAQ,CAACvN,IAAT,CAAc+N,WAAd,CAA0BxH,MAA1B;EACA;EACD;;EAED1H,MAAAA,MAAM,CAAC4H,KAAP,GAAe5H,MAAM,CAAC4H,KAAP,IAAgB,EAA/B;EAEA,UAAIuH,YAAY,GAAG,KAAKnE,OAAL,EAAnB;EACA,UAAIoE,SAAS,GAAG,KAAKlG,IAAL,EAAhB;EACA,UAAIhI,OAAO,GAAG,KAAKA,OAAL,CAAalB,MAAM,CAACgL,OAAP,GAAiBhL,MAAM,CAACgL,OAAxB,GAAkC,IAA/C,CAAd;EACA,UAAIqE,mBAAmB,GAAGnO,OAAO,CAACqI,KAAR,CAAc,UAAA2B,CAAC;EAAA,eAAInB,KAAK,CAACmB,CAAD,CAAT;EAAA,OAAf,CAA1B;;EAEA,UAAImE,mBAAJ,EAAyB;EACxB5H,QAAAA,KAAK,CAACmB,mBAAN,CAA0B5I,MAA1B,EAAkC,QAAlC;EACA,OAxBqC;;;EA2BtCA,MAAAA,MAAM,CAACuI,KAAP,GAAevI,MAAM,CAACuI,KAAP,IAAgB,EAA/B;EACAvI,MAAAA,MAAM,CAACuI,KAAP,CAAa+G,UAAb,GAA0BtP,MAAM,CAACuI,KAAP,CAAa+G,UAAb,IAA2BpO,OAArD,CA5BsC;;EA+BtClB,MAAAA,MAAM,CAAC0I,MAAP,GAAgB1I,MAAM,CAAC0I,MAAP,IAAiB,EAAjC,CA/BsC;;EAkCtC,UAAI0G,SAAS,KAAK,CAAlB,EAAqB;EACpBpP,QAAAA,MAAM,CAACuP,QAAP,GAAkBvP,MAAM,CAACuP,QAAP,IAAmB,MAArC;EACA,OAFD,MAEO,IAAIJ,YAAY,KAAK,CAArB,EAAwB;EAC9BnP,QAAAA,MAAM,CAACuP,QAAP,GAAkBvP,MAAM,CAACuP,QAAP,IAAmB,SAArC;EACA;;EAED,UAAI,cAAcvP,MAAlB,EAA0B;EACzB,YAAIA,MAAM,CAACuP,QAAP,KAAoB,MAAxB,EAAgC;EAC/BvP,UAAAA,MAAM,CAACwD,IAAP,GAAc;EAAC0F,YAAAA,IAAI,EAAC;EAAN,WAAd;EACAlJ,UAAAA,MAAM,CAACwD,IAAP,CAAY0F,IAAZ,CAAiBe,IAAjB,CAAsB/I,OAAtB;EACAlB,UAAAA,MAAM,CAACwD,IAAP,CAAY0F,IAAZ,GAAmBlJ,MAAM,CAACwD,IAAP,CAAY0F,IAAZ,CAAiBC,MAAjB,CAAwB,KAAKD,IAAL,CAAU,IAAV,CAAxB,CAAnB;EACA,SAJD,MAIO,IAAIlJ,MAAM,CAACuP,QAAP,KAAoB,SAAxB,EAAmC;EACzCvP,UAAAA,MAAM,CAACwD,IAAP,GAAc;EAACwH,YAAAA,OAAO,EAAC;EAAT,WAAd;EACAhL,UAAAA,MAAM,CAACwD,IAAP,CAAYwH,OAAZ,GAAsBhL,MAAM,CAACwD,IAAP,CAAYwH,OAAZ,CAAoB7B,MAApB,CAA2B,KAAK6B,OAAL,CAAa,IAAb,CAA3B,CAAtB;;EACA,cAAIhL,MAAM,CAACwD,IAAP,CAAYwH,OAAZ,CAAoBjK,MAApB,KAA+BG,OAAO,CAACH,MAA3C,EAAmD;EAClDG,YAAAA,OAAO,CAACyF,OAAR,CAAgB,UAACuE,CAAD,EAAI7E,CAAJ,EAAU;EACzBrG,cAAAA,MAAM,CAACwD,IAAP,CAAYwH,OAAZ,CAAoB3E,CAApB,EAAuBmJ,MAAvB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoCtE,CAApC;EACA,aAFD;EAGA;EACD;EACD,OAdD,MAcO,IAAI,gBAAgBlL,MAApB,EAA4B;EAClC,YAAIA,MAAM,CAACyP,UAAP,KAAsB,MAA1B,EAAkC;EACjC,eAAKvG,IAAL,CAAUlJ,MAAM,CAACkJ,IAAP,GAAclJ,MAAM,CAACkJ,IAArB,GAA4B,IAAtC,EAA4CvC,OAA5C,CAAoD,UAACyE,GAAD,EAAM/E,CAAN,EAAY;EAC/DrG,YAAAA,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,IAAmBrG,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,KAAoB,EAAvC;EACArG,YAAAA,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,EAAiB7C,IAAjB,GAAwBtC,OAAO,CAACP,GAAR,CAAY,UAAAuK,CAAC;EAAA,qBAAI,OAAI,CAACL,IAAL,CAAUxE,CAAV,EAAa6E,CAAb,CAAJ;EAAA,aAAb,CAAxB;EACA,WAHD;EAIA,SALD,MAKO,IAAIlL,MAAM,CAACyP,UAAP,KAAsB,SAA1B,EAAqC;EAC3C,eAAKzE,OAAL,CAAahL,MAAM,CAACgL,OAAP,GAAiBhL,MAAM,CAACgL,OAAxB,GAAkC,IAA/C,EAAqDrE,OAArD,CAA6D,UAAC8F,GAAD,EAAMpG,CAAN,EAAY;EACxErG,YAAAA,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,IAAmBrG,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,KAAoB,EAAvC;EACArG,YAAAA,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,EAAiB7C,IAAjB,GAAwB,EAAxB;;EACA,iBAAK,IAAI8I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8C,SAApB,EAA+B9C,CAAC,EAAhC,EAAoC;EACnCtM,cAAAA,MAAM,CAAC0I,MAAP,CAAcrC,CAAd,EAAiB7C,IAAjB,CAAsByG,IAAtB,CAA2B,OAAI,CAACY,IAAL,CAAUyB,CAAV,EAAajG,CAAb,CAA3B;EACA;EACD,WAND;EAOA;EACD;;EAED,aAAOrG,MAAM,CAACuP,QAAd;EACA,aAAOvP,MAAM,CAACyP,UAAd;EAEA,aAAOhI,KAAK,CAAC8D,MAAN,CAAa7D,MAAb,EAAqB1H,MAArB,CAAP;EACA;EAED;;;;;;;;;6BAMcwD,MAAMxD,QAAkB;EAAA,yCAAP8I,KAAO;EAAPA,QAAAA,KAAO;EAAA;;EACrC,wBAAWD,KAAX,GAAiBrF,IAAjB,EAAuBxD,MAAvB,SAAkC8I,KAAlC;EACA;EAED;;;;;;;;;;4BAOazB,OAAOL,KAAKhH,QAAQ;EAChC,aAAO,IAAIoD,OAAJ,CAAY,UAACC,OAAD,EAAUmC,MAAV,EAAqB;EACvCnD,QAAAA,MAAM,CAACjB,KAAP,CAAaiG,KAAb,EAAoBL,GAApB,EAAyB1F,IAAzB,CAA8B,UAAAC,QAAQ,EAAI;EACzC,cAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;EAAC,kBAAM,IAAIe,KAAJ,CAAUhB,QAAQ,CAACmO,MAAT,GAAkB,GAAlB,GAAwBnO,QAAQ,CAACoO,UAA3C,CAAN;EAA8D;;EACjFpO,UAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAI,IAAI,EAAI;EAC5B2B,YAAAA,OAAO,CAACwF,KAAK,CAAC0C,MAAN,CAAa7J,IAAb,EAAmB1B,MAAM,IAAIgH,GAA7B,CAAD,CAAP;EACA,WAFD;EAGA,SALD;EAMA,OAPM,CAAP;EAQA;EAED;;;;;;;;6BAKcxD,MAAM;EACnB,UAAIoM,IAAI,GAAG,EAAX;EACApM,MAAAA,IAAI,CAACmD,OAAL,CAAa,UAAA0C,CAAC;EAAA,eAAIA,CAAC,IAAIuG,IAAL,GAAYA,IAAI,CAACvG,CAAD,CAAJ,EAAZ,GAAwBuG,IAAI,CAACvG,CAAD,CAAJ,GAAQ,CAApC;EAAA,OAAd;EACA,aAAOuG,IAAP;EACA;EAED;;;;;;;;;0BAMWpG,GAAGkB,GAAG;EAChB,aAAO,OAAOlB,CAAP,IAAY,QAAZ,IAAwB,OAAOkB,CAAP,IAAY,QAApC,GAA+ClB,CAAC,CAACuE,aAAF,CAAgBrD,CAAhB,CAA/C,GAAoElB,CAAC,GAACkB,CAA7E;EACA;EAED;;;;;;;;0BAKWlH,MAAM;EAChB,aAAOA,IAAI,CAACqM,MAAL,CAAY,UAACrG,CAAD,EAAGkB,CAAH;EAAA,eAASlB,CAAC,GAACkB,CAAX;EAAA,OAAZ,EAA0B,CAA1B,CAAP;EACA;EAED;;;;;;;;2BAKYlH,MAAM;EACjB,aAAOqF,KAAK,CAACyE,GAAN,CAAU9J,IAAV,IAAkBA,IAAI,CAACzC,MAA9B;EACA;EAED;;;;;;;;;kCAMmByC,MAAMgK,WAAW;EACnC;EACA,aAAOhK,IAAI,CAAC7C,GAAL,CAAS,UAACoF,GAAD,EAAM+J,GAAN,EAAWvD,GAAX,EAAmB;EAClC,YAAIwD,KAAK,GAAG5C,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYyC,GAAG,GAAGtC,SAAlB,CAAZ;EAAA,YAA0CwC,GAAG,GAAGF,GAAG,GAAGtC,SAAtD;EACA,YAAIyC,MAAM,GAAG1D,GAAG,CAAC2D,KAAJ,CAAUH,KAAV,EAAiBC,GAAG,GAAG,CAAvB,CAAb;EACA,YAAI1C,GAAG,GAAG2C,MAAM,CAACJ,MAAP,CAAc,UAACrG,CAAD,EAAGkB,CAAH;EAAA,iBAASlB,CAAC,GAAGkB,CAAb;EAAA,SAAd,CAAV;EACA,eAAO4C,GAAG,GAAG2C,MAAM,CAAClP,MAApB;EACA,OALM,CAAP;EAMA;EAED;;;;;;;;+BAKgByC,MAAM;EACrB,UAAI2M,CAAC,GAAGtH,KAAK,CAAC0E,IAAN,CAAW/J,IAAX,CAAR;EACA,aAAOqF,KAAK,CAAC0E,IAAN,CAAW/J,IAAI,CAAC7C,GAAL,CAAS,UAAAyP,GAAG;EAAA,eAAIjD,IAAI,CAACkD,GAAL,CAASD,GAAG,GAACD,CAAb,EAAgB,CAAhB,CAAJ;EAAA,OAAZ,CAAX,CAAP;EACA;EAED;;;;;;;;wCAKyB3M,MAAM;EAC9B,aAAO2J,IAAI,CAACmD,IAAL,CAAUzH,KAAK,CAAC+E,QAAN,CAAepK,IAAf,CAAV,CAAP;EACA;EAED;;;;;;;;8BAKeA,MAAM;EACpB,UAAI2M,CAAC,GAAGtH,KAAK,CAAC0E,IAAN,CAAW/J,IAAX,CAAR;EACA,UAAI+M,CAAC,GAAG1H,KAAK,CAACgF,iBAAN,CAAwBrK,IAAxB,CAAR;EACA,aAAOA,IAAI,CAAC7C,GAAL,CAAS,UAAAyP,GAAG;EAAA,eAAI,CAACA,GAAG,GAACD,CAAL,IAAUI,CAAd;EAAA,OAAZ,CAAP;EACA;EAED;;;;;;;;4BAKoB;EAAA,yCAAN/M,IAAM;EAANA,QAAAA,IAAM;EAAA;;EAEnB;EACA,UAAIA,IAAI,CAACzC,MAAL,IAAa,CAAb,IAAkB6F,KAAK,CAACC,OAAN,CAAcrD,IAAd,CAAlB,IAAyCA,IAAI,CAAC+F,KAAL,CAAW,UAAAmC,CAAC;EAAA,eAAI9E,KAAK,CAACC,OAAN,CAAc6E,CAAd,CAAJ;EAAA,OAAZ,CAA7C,EAAgF;EAAA;;EAC/E,eAAO,cAAA7C,KAAK,CAACgE,GAAN,EAAUrF,KAAV,oBAAgB,IAAhB,SAAyBhE,IAAzB,EAAP;EACA,OALkB;;;EAQnB,UAAIsJ,GAAG,GAAGK,IAAI,CAACE,GAAL,CAAS7F,KAAT,CAAe,IAAf,EAAqBhE,IAAI,CAAC7C,GAAL,CAAS,UAAA+K,CAAC;EAAA,eAAIA,CAAC,CAAC3K,MAAN;EAAA,OAAV,CAArB,CAAV;EACA,aAAO,IAAI6F,KAAJ,CAAUkG,GAAV,EAAeE,IAAf,GAAsBrM,GAAtB,CAA0B,UAACsM,CAAD,EAAG5G,CAAH;EAAA,eAAS7C,IAAI,CAAC7C,GAAL,CAAS,UAAA+K,CAAC;EAAA,iBAAIA,CAAC,CAACrF,CAAD,CAAL;EAAA,SAAV,CAAT;EAAA,OAA1B,CAAP;EACA;;;;;EAIF;;;EACA,IAAMmK,KAAK,GAAG,4HAAd;;EACA,SAAS1G,YAAT,CAAsB/B,IAAtB,EAA4B;EAC3B,MAAIwE,GAAG,GAAG,EAAV;EACAxE,EAAAA,IAAI,CAACwG,OAAL,CAAaiC,KAAb,EAAoB,UAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAoB;EACvC,QAAIF,EAAE,KAAKnQ,SAAX,EAAsB;EACrBgM,MAAAA,GAAG,CAACtC,IAAJ,CAASyG,EAAE,CAACnC,OAAH,CAAW,MAAX,EAAmB,GAAnB,CAAT;EACA,KAFD,MAEO,IAAIoC,EAAE,KAAKpQ,SAAX,EAAsB;EAC5BgM,MAAAA,GAAG,CAACtC,IAAJ,CAAS0G,EAAE,CAACpC,OAAH,CAAW,MAAX,EAAmB,IAAnB,CAAT;EACA,KAFM,MAEA,IAAIqC,EAAE,KAAKrQ,SAAX,EAAsB;EAC5BgM,MAAAA,GAAG,CAACtC,IAAJ,CAAS2G,EAAT;EACA;;EACD,WAAO,EAAP;EACA,GATD;;EAUA,MAAI,QAAQjL,IAAR,CAAaoC,IAAb,CAAJ,EAAwB;EAACwE,IAAAA,GAAG,CAACtC,IAAJ,CAAS,EAAT;EAAc;;EACvC,SAAOsC,GAAP;EAEA;;ECxqCD,IAAMsE,iBAAiB,GAAG;EAEzBC,EAAAA,WAAW,EAAE,EAFY;EAGzBC,EAAAA,SAAS,EAAE,EAHc;EAIzBC,EAAAA,gBAAgB,EAAE,EAJO;EAMzBC,EAAAA,aAAa,EAAE,yBAAW;EACzB,WAAO,KAAKH,WAAZ;EACA,GARwB;EAUzBI,EAAAA,gBAAgB,EAAE,0BAAS5J,IAAT,EAAe;EAChC,WAAO,KAAKwJ,WAAL,CAAiBxJ,IAAjB,CAAP;EACA,GAZwB;EAczB6J,EAAAA,WAAW,EAAE,qBAAS7J,IAAT,EAAe;EAC3B,QAAI,KAAKwJ,WAAL,CAAiBxJ,IAAjB,MAA2B/G,SAA/B,EAA0C;EACzC,WAAKuQ,WAAL,CAAiBxJ,IAAjB,IAAyB,EAAzB;EACA;EACD,GAlBwB;EAmBzB8J,EAAAA,cAAc,EAAE,wBAASC,OAAT,EAAkBC,OAAlB,EAA2B;EAC1C,QAAIlN,KAAK,GAAG,KAAK8M,gBAAL,CAAsBG,OAAtB,CAAZ;EACA,SAAKE,QAAL,CAAcD,OAAd,EAAuBlN,KAAvB;;EACA,SAAK,IAAIoN,OAAT,IAAoB,KAAKT,SAAzB,EAAoC;EACnC,UAAI/E,KAAK,GAAG,KAAK+E,SAAL,CAAeS,OAAf,EAAwBH,OAAxB,CAAZ;EACA,WAAKI,kBAAL,CAAwBH,OAAxB,EAAiCE,OAAjC,EAA0CxF,KAA1C;EACA;;EACD,SAAK0F,cAAL,CAAoBL,OAApB;EAEA,GA5BwB;EA6BzBK,EAAAA,cAAc,EAAE,wBAASpK,IAAT,EAAe;EAC9B,WAAO,KAAKwJ,WAAL,CAAiBxJ,IAAjB,CAAP;;EACA,SAAK,IAAIkK,OAAT,IAAoB,KAAKT,SAAzB,EAAoC;EACnC,aAAO,KAAKA,SAAL,CAAeS,OAAf,EAAwBlK,IAAxB,CAAP;EACA;EACD,GAlCwB;EAoCzBqK,EAAAA,OAAO,EAAE,iBAASC,QAAT,EAAmBjN,IAAnB,EAAyB;EACjC,SAAK4M,QAAL,CAAcK,QAAd,EAAwB,CAACjN,IAAD,CAAxB;EACA,GAtCwB;EAuCzB4M,EAAAA,QAAQ,EAAE,kBAASK,QAAT,EAAmBxN,KAAnB,EAA0B;EACnC,QAAI,CAACwC,KAAK,CAACC,OAAN,CAAczC,KAAd,CAAL,EAA2B;EAC1BA,MAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;EACA;;EACD,QAAI,KAAK0M,WAAL,CAAiBc,QAAjB,MAA+BrR,SAAnC,EAA8C;EAC7C,WAAK4Q,WAAL,CAAiBS,QAAjB;EACA;;EACD,SAAK,IAAIvL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,KAAK,CAACrD,MAA1B,EAAkCsF,CAAC,EAAnC,EAAuC;EACtC,UAAI1B,IAAI,GAAGP,KAAK,CAACiC,CAAD,CAAhB;;EACA,UAAI,KAAKyK,WAAL,CAAiBc,QAAjB,EAA2BnI,OAA3B,CAAmC9E,IAAnC,MAA6C,CAAC,CAAlD,EAAqD;EACpD,aAAKmM,WAAL,CAAiBc,QAAjB,EAA2B3H,IAA3B,CAAgCtF,IAAhC;EACA;EACD;EACD,GApDwB;EAqDzBkN,EAAAA,UAAU,EAAE,oBAASD,QAAT,EAAmBjN,IAAnB,EAAyB;EACpC,SAAKmN,WAAL,CAAiBF,QAAjB,EAA2B,CAACjN,IAAD,CAA3B;EACA,GAvDwB;EAwDzBmN,EAAAA,WAAW,EAAE,qBAASF,QAAT,EAAmBxN,KAAnB,EAA0B;EACtC,QAAI,CAACwC,KAAK,CAACC,OAAN,CAAczC,KAAd,CAAL,EAA2B;EAC1BA,MAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;EACA;;EACD,QAAI,KAAK0M,WAAL,CAAiBc,QAAjB,MAA+BrR,SAAnC,EAA8C;EAC7C,WAAK,IAAI8F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,KAAK,CAACrD,MAA1B,EAAkCsF,CAAC,EAAnC,EAAuC;EACtC,YAAI1B,IAAI,GAAGP,KAAK,CAACiC,CAAD,CAAhB;;EACA,YAAI0L,KAAK,GAAG,KAAKjB,WAAL,CAAiBc,QAAjB,EAA2BnI,OAA3B,CAAmC9E,IAAnC,CAAZ;;EACA,YAAIoN,KAAK,KAAK,CAAC,CAAf,EAAkB;EACjB,eAAKjB,WAAL,CAAiBc,QAAjB,EAA2BpC,MAA3B,CAAkCuC,KAAlC,EAAyC,CAAzC;EACA;EACD;EACD;EACD,GArEwB;EAuEzBC,EAAAA,kBAAkB,EAAE,4BAASrN,IAAT,EAAe;EAClC,SAAK,IAAIiN,QAAT,IAAqB,KAAKd,WAA1B,EAAuC;EACtC,UAAI,KAAKA,WAAL,CAAiBc,QAAjB,EAA2BnI,OAA3B,CAAmC9E,IAAnC,KAA4C,CAAC,CAAjD,EAAoD;EACnD,eAAOiN,QAAP;EACA;EACD;;EACD,WAAOrR,SAAP;EACA,GA9EwB;EA+EzB0R,EAAAA,iBAAiB,EAAE,2BAAST,OAAT,EAAkB7M,IAAlB,EAAwB;EAC1C,WAAO,KAAKuN,kBAAL,CAAwB,KAAKF,kBAAL,CAAwBrN,IAAxB,CAAxB,EAAuD6M,OAAvD,CAAP;EACA,GAjFwB;EAmFzBW,EAAAA,WAAW,EAAE,uBAAW;EACvB,WAAO,KAAKpB,SAAZ;EACA,GArFwB;EAuFzBqB,EAAAA,UAAU,EAAE,oBAAS9K,IAAT,EAAe+K,YAAf,EAA6B;EACxC,QAAI,KAAKtB,SAAL,CAAezJ,IAAf,MAAyB/G,SAA7B,EAAwC;EACvC,WAAKwQ,SAAL,CAAezJ,IAAf,IAAuB,EAAvB;EACA;;EACD,QAAI+K,YAAY,KAAK9R,SAArB,EAAgC;EAC/B,WAAKyQ,gBAAL,CAAsB1J,IAAtB,IAA8B+K,YAA9B;EACA;EACD,GA9FwB;EA+FzBC,EAAAA,aAAa,EAAE,uBAAShL,IAAT,EAAe;EAC7B,WAAO,KAAKyJ,SAAL,CAAezJ,IAAf,CAAP;EACA,WAAO,KAAK0J,gBAAL,CAAsB1J,IAAtB,CAAP;EACA,GAlGwB;EAmGzBmK,EAAAA,kBAAkB,EAAE,4BAASc,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,EAAkD;EACrE,QAAI,KAAK1B,SAAL,CAAeyB,WAAf,MAAgCjS,SAApC,EAA+C;EAC9C,WAAK6R,UAAL,CAAgBI,WAAhB;EACA;;EACD,SAAKzB,SAAL,CAAeyB,WAAf,EAA4BD,YAA5B,IAA4CE,YAA5C;EACA,GAxGwB;EAyGzBP,EAAAA,kBAAkB,EAAE,4BAASK,YAAT,EAAuBC,WAAvB,EAAoC;EACvD,QAAIxG,KAAK,GAAGzL,SAAZ;;EACA,QAAI,KAAKwQ,SAAL,CAAeyB,WAAf,MAAgCjS,SAApC,EAA+C;EAC9CyL,MAAAA,KAAK,GAAG,KAAK+E,SAAL,CAAeyB,WAAf,EAA4BD,YAA5B,CAAR;;EACA,UAAIvG,KAAK,KAAKzL,SAAd,EAAyB;EACxByL,QAAAA,KAAK,GAAG,KAAKgF,gBAAL,CAAsBwB,WAAtB,CAAR;;EACA,YAAI,OAAOxG,KAAP,KAAiB,UAArB,EAAiC;EAChCA,UAAAA,KAAK,GAAGA,KAAK,EAAb;EACA;EACD;EACD;;EACD,WAAOA,KAAP;EACA,GArHwB;EAuHzB0G,EAAAA,qBAAqB,EAAE,iCAAW;EACjC,WAAO;EACNpD,MAAAA,UAAU,EAAE7O,MAAM,CAACiG,MAAP,CAAc,EAAd,EAAkB,KAAKoK,WAAvB,CADN;EAEN6B,MAAAA,QAAQ,EAAElS,MAAM,CAACiG,MAAP,CAAc,EAAd,EAAkB,KAAKqK,SAAvB;EAFJ,KAAP;EAIA,GA5HwB;EA8HzB6B,EAAAA,gBAAgB,EAAE,0BAAS3P,EAAT,EAAa;EAC9B,QAAItB,MAAM,KAAKpB,SAAX,IAAwBsS,GAAG,KAAKtS,SAApC,EAA+C;EAC9C,UAAIuS,GAAG,GAAG,IAAID,GAAG,CAACE,QAAR,EAAV;EAEAF,MAAAA,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB;EAChB/S,QAAAA,GAAG,EAAEyB,MAAM,CAACuR,WAAP,CAAmBC,cAAnB,EADW;EAEhBlT,QAAAA,MAAM,EAAE;EACPqD,UAAAA,IAAI,EAAE,2BADC;EAEP8P,UAAAA,kBAAkB,EAAEnQ,EAFb;EAGPoQ,UAAAA,WAAW,EAAE,KAHN;EAIP9P,UAAAA,MAAM,EAAE,KAAK+P,SAAL,KAAmB,KAAKA,SAAL,GAAiBC,KAAjB,EAAnB,GAA8ChT;EAJ/C;EAFQ,OAAjB,EAQGe,IARH,CAQQ,UAASC,QAAT,EAAmB;EAC1B,YAAIE,IAAI,GAAGoR,GAAG,CAACW,MAAJ,CAAWjS,QAAQ,CAACkS,YAApB,CAAX;EACA,YAAIxQ,EAAE,GAAGxB,IAAI,CAACiS,gBAAL,CAAsBzQ,EAA/B;EACA,YAAI+I,KAAK,GAAGvK,IAAI,CAACiS,gBAAL,CAAsBC,QAAlC;;EACA,YAAI3H,KAAK,CAACjL,MAAN,KAAiB,CAArB,EAAwB;EACvB+R,UAAAA,GAAG,CAACtN,MAAJ;EACA,SAFD,MAEO;EACNwG,UAAAA,KAAK,GAAG6G,GAAG,CAACW,MAAJ,CAAWxH,KAAX,CAAR;EAEA,eAAK8E,WAAL,GAAmB9E,KAAK,CAACsD,UAAzB;EACA,eAAKyB,SAAL,GAAiB/E,KAAK,CAAC2G,QAAvB;EAEAG,UAAAA,GAAG,CAACzP,OAAJ,CAAY2I,KAAZ;EACA;EACD,OAtBD,EAsBG,YAAW;EACb,aAAK4H,SAAL,CAAe,qCAAmC3Q,EAAlD;EACA6P,QAAAA,GAAG,CAACtN,MAAJ;EACA,OAzBD,EAyBG,IAzBH,EAyBS,IAzBT;EA2BA,aAAOsN,GAAG,CAAC1L,OAAX;EACA;EACE,GA/JqB;EAiKtByM,EAAAA,gBAAgB,EAAE,0BAASrQ,IAAT,EAAe;EACnC,QAAI7B,MAAM,KAAKpB,SAAX,IAAwBsS,GAAG,KAAKtS,SAApC,EAA+C;EAC9CiD,MAAAA,IAAI,GAAGA,IAAI,IAAI,KAAKkP,qBAAL,EAAf;EAEA,UAAII,GAAG,GAAG,IAAID,GAAG,CAACE,QAAR,EAAV;EAEA,UAAIe,UAAU,GAAGjB,GAAG,CAACkB,MAAJ,CAAWvQ,IAAX,CAAjB;EACAqP,MAAAA,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB;EAChB/S,QAAAA,GAAG,EAAEyB,MAAM,CAACuR,WAAP,CAAmBC,cAAnB,EADW;EAEhBlT,QAAAA,MAAM,EAAE;EACPqD,UAAAA,IAAI,EAAE,yBADC;EAEP0Q,UAAAA,aAAa,EAAEF;EAFR;EAFQ,OAAjB,EAMGxS,IANH,CAMQ,UAASC,QAAT,EAAmB;EAC1B,YAAIE,IAAI,GAAGoR,GAAG,CAACjR,IAAJ,CAASqS,IAAT,CAAcT,MAAd,CAAqBjS,QAAQ,CAACkS,YAA9B,CAAX;EACA,YAAIxQ,EAAE,GAAGxB,IAAI,CAACyS,cAAL,CAAoBjR,EAA7B;EACA6P,QAAAA,GAAG,CAACzP,OAAJ,CAAYJ,EAAZ;EACA,OAVD,EAUG,UAAS1B,QAAT,EAAmB;EACrBuR,QAAAA,GAAG,CAACtN,MAAJ;EACA,OAZD;EAcA,aAAOsN,GAAG,CAAC1L,OAAX;EACA;EACE;EAxLqB,CAA1B;;ECAA;EACA;EACA;EACA;EACA;EACA,MAAM,QAAQ,CAAC;EACf;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,gBAAgB,GAAG;EAC3B,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,EAAE;EACF;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,YAAY,GAAG;EACvB,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,EAAE;EACF;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,QAAQ,GAAG;EACnB,EAAE,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;EACjC,GAAG,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC;EACtH,GAAG;EACH,EAAE;EACF;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE;EAC/B,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;EACxD,EAAE,IAAI,QAAQ,YAAY,OAAO,EAAE;EACnC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;EACxD,GAAG,MAAM;EACT,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5C,GAAG;EACH,EAAE;EACF;EACA;EACA;EACA;EACA,CAAC,OAAO,SAAS,GAAG;EACpB,EAAE,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE;EAC1E,GAAG,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG;EACnE,GAAG,MAAM;EACT,GAAG,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EAChD,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;EACrC,GAAG,OAAO,MAAM,CAAC;EACjB,GAAG;EACH,EAAE;AACF;EACA;EACA;EACA;EACA;EACA,CAAC,aAAa,MAAM,CAAC,GAAG,EAAE;EAC1B,EAAE,MAAM,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,EAAE,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAClD;EACA,EAAE,IAAI,UAAU,GAAG,EAAE,CAAC;EACtB,EAAE,IAAI,MAAM,GAAG,SAAS,CAAC;EACzB,EAAE,IAAI,aAAa,EAAE;EACrB,GAAG,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;EAC3C,GAAG,IAAI,QAAQ,KAAK,IAAI,EAAE;EAC1B,IAAI,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EAC9D,IAAI,MAAM;EACV,IAAI,OAAO;EACX,IAAI;EACJ,GAAG,IAAI,CAAC,cAAc,EAAE;EACxB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,IAAI;EACJ,GAAG,MAAM;EACT,GAAG,IAAI,cAAc,EAAE;EACvB,IAAI,UAAU,GAAG,GAAG,CAAC;EACrB,IAAI,MAAM;EACV,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAI;EACJ,GAAG;AACH;EACA,EAAE,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;EAC1C,GAAG,IAAI,EAAE,0BAA0B;EACnC,GAAG,MAAM,EAAE,MAAM;EACjB,GAAG,EAAE,EAAE,UAAU;EACjB,GAAG,OAAO,EAAE,CAAC;EACb,GAAG,EAAC;AACJ;EACA,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;EACtC,EAAE,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;EACjC,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;EAChE;EACA,EAAE,IAAI,IAAI,GAAG,GAAE;EACf,EAAE,IAAI,KAAK,GAAG,UAAS;EACvB,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;EAC5B,GAAG,MAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAClD,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;EAC9E,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,YAAW;EAChD,IAAI,MAAM;EACV,IAAI,KAAK,GAAG,0BAA0B,CAAC,OAAM;EAC7C,IAAI;EACJ,GAAG,MAAM;EACT,GAAG,OAAO,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;EACpF,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;EAC9D,KAAK,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,KAAI;EACzD,KAAK;EACL,IAAI,EAAC;EACL,GAAG;EACH;EACA,EAAE,IAAI,GAAG,EAAE;EACX,GAAG,IAAI,KAAK,KAAK,SAAS,EAAE;EAC5B,IAAI,GAAG,CAAC,KAAK,CAAC;EACd,SAAS,IAAI,EAAE,sBAAsB,CAAC,GAAG;EACzC,SAAS,KAAK,EAAE,GAAG;EACnB,SAAS,KAAK,EAAE,GAAG;EACnB,KAAK,CAAC,CAAC;EACP,IAAI,MAAM;EACV,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;EACjB,KAAK,KAAK,EAAE,6BAA6B,CAAC,GAAG;EAC7C,KAAK,OAAO,EAAE,KAAK;EACnB,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK;EACxB,KAAK,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;EACxB,KAAK,EAAC;EACN,IAAI;EACJ,GAAG;AACH;EACA,EAAE,IAAI,MAAM,GAAG,UAAS;EACxB,EAAE,IAAI;EACN,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EACpC,GAAG,CAAC,MAAM,CAAC,EAAE;EACb,GAAG,OAAO,CAAC;EACX,GAAG;EACH,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;EAC5B,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC;EACtB,GAAG;EACH,EAAE,OAAO,MAAM,CAAC;EAChB,EAAE;EACF;;EChJA;EACA;EACA;EACA;EACA;EACA,MAAM,IAAI,CAAC;EACX;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE;EAChB,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;EACjB;EACA,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;EACxG,EAAE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE;EACnC,EAAE,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK,IAAI,QAAQ,CAAC,WAAW,GAAG,MAAM,EAAE;EACvE,GAAG,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;EACvC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE;EAC5B,IAAI,QAAQ,GAAG,wLAAwL,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,8CAA8C,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;EAClT,IAAI;EACJ,GAAG;EACH,EAAE,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC;EAC7B,EAAE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;EAClC,EAAE,OAAO,MAAM,GAAG,wLAAwL,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,8CAA8C,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;AACrT;EACA,EAAE;EACF;;EC5CA;EACA;EACA;EACA;EACA,MAAM,QAAQ,CAAC;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,WAAW,CAAC,MAAM,EAAE;EACrB,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI;EAC9G,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;EACzB,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;EACvB,EAAE,IAAI,MAAM,YAAY,YAAY,EAAE;EACtC,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;EAC1D,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EAC1C,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;EAC3C,KAAK,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;EAChD,KAAK,IAAI,OAAO,EAAE;EAClB,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;EAC3B,MAAM;EACN,KAAK;EACL,IAAI,EAAE,IAAI,CAAC,CAAC;EACZ,GAAG,MAAM;EACT,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACpB,GAAG;EACH,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAC,CAAC;EACjD,EAAE;AACF;EACA;EACA;EACA;EACA;EACA,CAAC,GAAG,CAAC,MAAM,EAAE;EACb,EAAE,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;EAC1B,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;EACjC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAC5B,IAAI;EACJ,GAAG;EACH,EAAE;AACF;EACA;EACA;EACA;EACA;EACA,CAAC,UAAU,CAAC,KAAK,EAAE;EACnB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;EACzC,EAAE;AACF;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,SAAS,CAAC,KAAK,EAAE;EAClB,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,IAAI,SAAS,CAAC;EACzJ,EAAE;AACF;EACA;EACA;EACA;EACA;EACA,CAAC,UAAU,GAAG;EACd,EAAE,IAAI,MAAM,GAAG,IAAI,EAAE,QAAQ,GAAG,eAAe,EAAE,IAAI,GAAG,cAAc;EACtE,GAAG,OAAO,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAY;EACvE,EAAE,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;EACxB,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;EAClB,IAAI,OAAO,EAAE,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;EAC9G,IAAI;EACJ,GAAG;EACH,EAAE,OAAO,OAAO,CAAC;EACjB,EAAE;EACF;;EChFA;EACA;EACA;EACA,MAAM0H,QAAM,GAAG;EACf,CAAC,QAAQ;EACT,CAAC,IAAI;EACL,CAAC,QAAQ;EACT,CAAC,MAAM;EACP,CAAC,KAAK;EACN,CAAC,IAAI;EACL,CAAC,KAAK;EACN,CAAC,iBAAiB;EAClB,CAAC;;;;;;;;"}